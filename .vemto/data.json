{
    "tables": {
        "projects": {
            "item_1": {
                "uuid": "c7dcaf9e-453a-4962-8b98-853c52d3a3ba",
                "id": 1,
                "createdAt": "2025-01-24 12:02:50",
                "updatedAt": "2025-01-27 14:51:22",
                "settings": {
                    "cssFramework": "tailwind",
                    "uiStarterKit": "breeze",
                    "usesLivewire": true,
                    "usesInertia": false,
                    "usesVue": false,
                    "usesReact": false,
                    "usesSvelte": false,
                    "isFreshLaravelProject": true,
                    "schemaReaderMode": "migration",
                    "schemaReaderDbDriver": "mysql",
                    "schemaReaderDbHost": "127.0.0.1",
                    "schemaReaderDbPort": "3306",
                    "schemaReaderDbUsername": "root",
                    "schemaReaderDbPassword": null,
                    "schemaReaderDbDatabase": "vemto_schema_reader",
                    "laravelVersion": "11.31"
                },
                "canShowSchemaSourceChangesAlert": false,
                "codeGenerationSettings": {
                    "models": true,
                    "factories": true,
                    "seeders": true,
                    "policies": true,
                    "requests": true,
                    "controllers": true,
                    "routes": true,
                    "views": true,
                    "uiComponents": true,
                    "livewireLayout": true,
                    "translationsOnViews": true,
                    "translationsFormat": "underscore"
                },
                "languages": [
                    "en"
                ],
                "defaultLanguage": "en",
                "translations": {
                    "en": {
                        "navigation.home": "Home",
                        "navigation.apps": "Apps",
                        "crud.services.itemTitle": "Service",
                        "crud.services.collectionTitle": "Services",
                        "crud.services.inputs.title.label": "Title",
                        "crud.services.inputs.title.placeholder": "Title",
                        "crud.services.inputs.description.label": "Description",
                        "crud.services.inputs.description.placeholder": "Description",
                        "crud.services.inputs.image.label": "Image",
                        "crud.services.inputs.image.placeholder": "Image",
                        "navigation.services": "Services",
                        "crud.subServices.itemTitle": "Sub Service",
                        "crud.subServices.collectionTitle": "Sub Services",
                        "crud.subServices.inputs.service_id.label": "Service",
                        "crud.subServices.inputs.service_id.placeholder": "Service id",
                        "crud.subServices.inputs.name.label": "Name",
                        "crud.subServices.inputs.name.placeholder": "Name",
                        "crud.subServices.inputs.description.label": "Description",
                        "crud.subServices.inputs.description.placeholder": "Description",
                        "crud.subServices.inputs.image.label": "Image",
                        "crud.subServices.inputs.image.placeholder": "Image",
                        "crud.subServices.inputs.status.label": "Status",
                        "crud.subServices.inputs.status.placeholder": "Status",
                        "crud.subServices.inputs.price.label": "Price",
                        "crud.subServices.inputs.price.placeholder": "Price",
                        "crud.subServices.inputs.has_template.label": "Has template",
                        "crud.subServices.inputs.has_template.placeholder": "Has template",
                        "navigation.sub_services": "Sub Services",
                        "crud.userCards.inputs.user_id.label": "User id",
                        "crud.userCards.inputs.user_id.placeholder": "User id",
                        "crud.userCards.inputs.holder_name.label": "Holder name",
                        "crud.userCards.inputs.holder_name.placeholder": "Holder name",
                        "crud.userCards.inputs.card_number.label": "Card number",
                        "crud.userCards.inputs.card_number.placeholder": "Card number",
                        "crud.userCards.inputs.valid_date.label": "Valid date",
                        "crud.userCards.inputs.valid_date.placeholder": "Valid date",
                        "crud.userCards.inputs.default.label": "Default",
                        "crud.userCards.inputs.default.placeholder": "Default",
                        "navigation.user_cards": "User Cards",
                        "crud.subServiceTemplates.inputs.sub_service_id.label": "Sub service",
                        "crud.subServiceTemplates.inputs.sub_service_id.placeholder": "Sub service id",
                        "crud.subServiceTemplates.inputs.name.label": "Name",
                        "crud.subServiceTemplates.inputs.name.placeholder": "Name",
                        "crud.subServiceTemplates.inputs.description.label": "Description",
                        "crud.subServiceTemplates.inputs.description.placeholder": "Description",
                        "crud.subServiceTemplates.inputs.image.label": "Image",
                        "crud.subServiceTemplates.inputs.image.placeholder": "Image",
                        "crud.subServiceTemplates.inputs.url.label": "Url",
                        "crud.subServiceTemplates.inputs.url.placeholder": "Url",
                        "crud.subServiceTemplates.inputs.status.label": "Status",
                        "crud.subServiceTemplates.inputs.status.placeholder": "Status",
                        "navigation.sub_service_templates": "Sub Service Templates",
                        "crud.allDeliveryDays.inputs.sub_service_id.label": "Sub service ",
                        "crud.allDeliveryDays.inputs.sub_service_id.placeholder": "Sub service id",
                        "crud.allDeliveryDays.inputs.name.label": "Name",
                        "crud.allDeliveryDays.inputs.name.placeholder": "Name",
                        "crud.allDeliveryDays.inputs.description.label": "Description",
                        "crud.allDeliveryDays.inputs.description.placeholder": "Description",
                        "crud.allDeliveryDays.inputs.price.label": "Price",
                        "crud.allDeliveryDays.inputs.price.placeholder": "Price",
                        "crud.allDeliveryDays.inputs.status.label": "Status",
                        "crud.allDeliveryDays.inputs.status.placeholder": "Status",
                        "navigation.all_delivery_days": "All Delivery Days",
                        "crud.subServiceTemplates.itemTitle": "Sub Service Template",
                        "crud.subServiceTemplates.collectionTitle": "Sub Service Templates",
                        "crud.allDeliveryDays.itemTitle": "Delivery Days",
                        "crud.allDeliveryDays.collectionTitle": "All Delivery Days",
                        "crud.contentCategories.itemTitle": "Content Category",
                        "crud.contentCategories.collectionTitle": "Content Categories",
                        "crud.contentCategories.inputs.name.label": "Name",
                        "crud.contentCategories.inputs.name.placeholder": "Name",
                        "crud.contentCategories.inputs.decription.label": "Decription",
                        "crud.contentCategories.inputs.decription.placeholder": "Decription",
                        "crud.contentCategories.inputs.status.label": "Status",
                        "crud.contentCategories.inputs.status.placeholder": "Status",
                        "navigation.content_categories": "Content Categories",
                        "crud.influencers.inputs.name.label": "Name",
                        "crud.influencers.inputs.name.placeholder": "Name",
                        "crud.influencers.inputs.bio.label": "Bio",
                        "crud.influencers.inputs.bio.placeholder": "Bio",
                        "crud.influencers.inputs.address.label": "Address",
                        "crud.influencers.inputs.address.placeholder": "Address",
                        "crud.influencers.inputs.lat.label": "Lat",
                        "crud.influencers.inputs.lat.placeholder": "Lat",
                        "crud.influencers.inputs.long.label": "Long",
                        "crud.influencers.inputs.long.placeholder": "Long",
                        "navigation.influencers": "Influencers",
                        "crud.influencers.inputs.image.label": "Image",
                        "crud.influencers.inputs.image.placeholder": "Image",
                        "crud.iinfluencers.inputs.name.label": "Name",
                        "crud.iinfluencers.inputs.name.placeholder": "Name",
                        "crud.iinfluencers.inputs.bio.label": "Bio",
                        "crud.iinfluencers.inputs.bio.placeholder": "Bio",
                        "crud.iinfluencers.inputs.address.label": "Address",
                        "crud.iinfluencers.inputs.address.placeholder": "Address",
                        "crud.iinfluencers.inputs.image.label": "Image",
                        "crud.iinfluencers.inputs.image.placeholder": "Image",
                        "navigation.iinfluencers": "Iinfluencers",
                        "crud.iinfluencers.itemTitle": "Iinfluencer",
                        "crud.iinfluencers.collectionTitle": "Iinfluencers",
                        "crud.iinfluencers.inputs.lat.label": "Lat",
                        "crud.iinfluencers.inputs.lat.placeholder": "Lat",
                        "crud.iinfluencers.inputs.long.label": "Long",
                        "crud.iinfluencers.inputs.long.placeholder": "Long",
                        "crud.influencers.itemTitle": "Influencer",
                        "crud.influencers.collectionTitle": "Influencers"
                    }
                },
                "vthemeKeys": {
                    "default.delay": "opacity-75",
                    "table": "min-w-full divide-y divide-gray-200",
                    "table.container": "overflow-hidden border rounded-lg",
                    "table.head": "bg-gray-50",
                    "table.head.row": "text-gray-500",
                    "table.head.col": "px-5 py-3 text-xs font-medium text-left uppercase",
                    "table.body": "bg-white divide-y divide-gray-200 dark:divide-gray-700",
                    "table.body.row": "text-gray-800",
                    "table.body.col": "px-5 py-4 text-sm whitespace-nowrap",
                    "ui.button": "inline-flex items-center justify-center px-4 py-2 text-sm font-medium tracking-wide text-white transition-colors duration-200 rounded-md bg-indigo-500 hover:bg-indigo-600 focus:ring-2 focus:ring-offset-2 focus:ring-gray-900 focus:shadow-outline focus:outline-none",
                    "ui.input": "inline-flex h-10 px-3 py-2 text-sm bg-white border rounded-md border-gray-300 ring-offset-background placeholder:text-gray-500 focus:border-gray-300 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-gray-400 disabled:cursor-not-allowed disabled:opacity-50",
                    "ui.input.checkbox": "",
                    "ui.label": "block mb-1.5 font-medium text-sm text-gray-700",
                    "ui.input.error": "text-sm text-red-600",
                    "ui.breadcrumbs.container": "flex justify-between py-1",
                    "ui.breadcrumbs.list": "inline-flex items-center mb-3 space-x-1 text-xs text-neutral-500 [&_.active-breadcrumb]:text-neutral-600 [&_.active-breadcrumb]:font-medium sm:mb-0",
                    "ui.breadcrumbs.list.item": "",
                    "ui.breadcrumbs.list.item.link": "inline-flex items-center py-1 font-normal hover:text-neutral-900 focus:outline-none",
                    "ui.breadcrumbs.separator": "w-5 h-5 text-gray-400/70",
                    "crud.index.container": "max-w-7xl mx-auto py-10 sm:px-6 lg:px-8 space-y-4",
                    "crud.table.head.col.extra": "cursor-pointer",
                    "crud.table.head.action-col": "px-5 py-3 text-xs font-medium text-right uppercase",
                    "crud.table.body.col.extra": "max-w-xs truncate",
                    "crud.table.body.action-col": "px-5 py-4 text-sm font-medium text-right whitespace-nowrap space-x-2",
                    "crud.action-link": "text-indigo-600 hover:text-indigo-700 cursor-pointer",
                    "crud.action-link-danger": "text-red-600 hover:text-red-700 cursor-pointer",
                    "crud.index.tools": "flex justify-between align-top py-4",
                    "crud.pagination.container": "mt-2",
                    "crud.container": "max-w-7xl mx-auto py-10 sm:px-6 lg:px-8 space-y-4",
                    "crud.header": "w-full text-gray-500 text-lg font-semibold py-4 uppercase",
                    "crud.form": "w-full mb-0",
                    "crud.form.container": "overflow-hidden border rounded-lg bg-white",
                    "crud.form.inputs.container": "p-6 space-y-3",
                    "crud.form.input.group": "w-full",
                    "crud.form.input.radio.group": "flex flex-wrap flex-col gap-2",
                    "crud.form.input.radio.box": "inline-flex justify-start gap-2",
                    "ui.input.radio": "!w-4 !h-4 text-indigo-600 transition duration-150 ease-in-out border-gray-300 rounded-md focus:ring-indigo-500",
                    "crud.form.input.extra": "w-full",
                    "crud.form.input.image": "object-cover rounded border border-gray-200 w-36 h-36 cursor-pointer bg-gray-50 hover:opacity-75 transition duration-100 ease-in-out",
                    "crud.form.input.image.button": "p-0.5 px-1 text-xs border border-gray-200 rounded hover:bg-gray-200",
                    "crud.form.input.file.name": "text-sm text-gray-500 p-1 rounded-sm bg-gray-50 border border-gray-200 mb-1",
                    "crud.form.buttons-container": "flex justify-between mt-4 border-t border-gray-50 p-4"
                },
                "vthemeCdn": "https://cdn.tailwindcss.com",
                "connectionFinished": true,
                "canIgnoreNextSchemaSourceChanges": false,
                "filesQueueStatus": "idle",
                "lastReadSchemaDataHash": "abbd4bf9b69b34c59242cca2ccccf394",
                "currentZoom": 80,
                "currentRenderedFilesPaths": [
                    "/lang/en//navigation.php",
                    "/lang/en//crud.php",
                    "resources/views/components/ui//toast.blade.php",
                    "resources/views/components/ui//action/danger.blade.php",
                    "resources/views/components/ui//action/index.blade.php",
                    "resources/views/components/ui//breadcrumbs/index.blade.php",
                    "resources/views/components/ui//breadcrumbs/link.blade.php",
                    "resources/views/components/ui//breadcrumbs/separator.blade.php",
                    "resources/views/components/ui//button/danger.blade.php",
                    "resources/views/components/ui//button/index.blade.php",
                    "resources/views/components/ui//card/body.blade.php",
                    "resources/views/components/ui//card/header.blade.php",
                    "resources/views/components/ui//card/index.blade.php",
                    "resources/views/components/ui//card/title.blade.php",
                    "resources/views/components/ui//container/table.blade.php",
                    "resources/views/components/ui//input/checkbox.blade.php",
                    "resources/views/components/ui//input/color.blade.php",
                    "resources/views/components/ui//input/date.blade.php",
                    "resources/views/components/ui//input/date-time.blade.php",
                    "resources/views/components/ui//input/email.blade.php",
                    "resources/views/components/ui//input/error.blade.php",
                    "resources/views/components/ui//input/file.blade.php",
                    "resources/views/components/ui//input/hidden.blade.php",
                    "resources/views/components/ui//input/image.blade.php",
                    "resources/views/components/ui//input/index.blade.php",
                    "resources/views/components/ui//input/number.blade.php",
                    "resources/views/components/ui//input/password.blade.php",
                    "resources/views/components/ui//input/radio.blade.php",
                    "resources/views/components/ui//input/select.blade.php",
                    "resources/views/components/ui//input/text.blade.php",
                    "resources/views/components/ui//input/textarea.blade.php",
                    "resources/views/components/ui//input/time.blade.php",
                    "resources/views/components/ui//input/url.blade.php",
                    "resources/views/components/ui//label/index.blade.php",
                    "resources/views/components/ui//modal/confirm.blade.php",
                    "resources/views/components/ui//modal/index.blade.php",
                    "resources/views/components/ui//table/action-column.blade.php",
                    "resources/views/components/ui//table/action-header.blade.php",
                    "resources/views/components/ui//table/column.blade.php",
                    "resources/views/components/ui//table/header.blade.php",
                    "resources/views/components/ui//table/image.blade.php",
                    "resources/views/components/ui//table/index.blade.php",
                    "resources/views/components/ui//table/row.blade.php",
                    "resources/views/livewire/layout/navigation.blade.php",
                    "routes/app.php",
                    "routes/app-api.php",
                    "bootstrap/app.php",
                    "database/factories/UserFactory.php",
                    "database/seeders/UserSeeder.php",
                    "app/Policies/UserPolicy.php",
                    "database/factories/ServiceFactory.php",
                    "database/seeders/ServiceSeeder.php",
                    "app/Policies/ServicePolicy.php",
                    "database/factories/SubServiceFactory.php",
                    "database/seeders/SubServiceSeeder.php",
                    "app/Policies/SubServicePolicy.php",
                    "database/factories/UserCardFactory.php",
                    "database/seeders/UserCardSeeder.php",
                    "app/Policies/UserCardPolicy.php",
                    "database/factories/SubServiceTemplateFactory.php",
                    "database/seeders/SubServiceTemplateSeeder.php",
                    "app/Policies/SubServiceTemplatePolicy.php",
                    "database/factories/DeliveryDaysFactory.php",
                    "database/seeders/DeliveryDaysSeeder.php",
                    "app/Policies/DeliveryDaysPolicy.php",
                    "database/factories/ContentCategoryFactory.php",
                    "database/seeders/ContentCategorySeeder.php",
                    "app/Policies/ContentCategoryPolicy.php",
                    "database/factories/InfluencerFactory.php",
                    "database/seeders/InfluencerSeeder.php",
                    "app/Policies/InfluencerPolicy.php",
                    "resources/views/livewire/dashboard/services/index.blade.php",
                    "app/Livewire/Dashboard/ServiceIndex.php",
                    "resources/views/livewire/dashboard/services/create.blade.php",
                    "app/Livewire/Dashboard/ServiceCreate.php",
                    "resources/views/livewire/dashboard/services/edit.blade.php",
                    "app/Livewire/Dashboard/ServiceEdit.php",
                    "app/Livewire/Dashboard/Services/Forms/CreateForm.php",
                    "app/Livewire/Dashboard/Services/Forms/UpdateForm.php",
                    "resources/views/livewire/dashboard/sub-services/index.blade.php",
                    "app/Livewire/Dashboard/SubServiceIndex.php",
                    "resources/views/livewire/dashboard/sub-services/create.blade.php",
                    "app/Livewire/Dashboard/SubServiceCreate.php",
                    "resources/views/livewire/dashboard/sub-services/edit.blade.php",
                    "app/Livewire/Dashboard/SubServiceEdit.php",
                    "app/Livewire/Dashboard/SubServices/Forms/CreateForm.php",
                    "app/Livewire/Dashboard/SubServices/Forms/UpdateForm.php",
                    "resources/views/livewire/dashboard/sub-service-templates/index.blade.php",
                    "app/Livewire/Dashboard/SubServiceTemplateIndex.php",
                    "resources/views/livewire/dashboard/sub-service-templates/create.blade.php",
                    "app/Livewire/Dashboard/SubServiceTemplateCreate.php",
                    "resources/views/livewire/dashboard/sub-service-templates/edit.blade.php",
                    "app/Livewire/Dashboard/SubServiceTemplateEdit.php",
                    "app/Livewire/Dashboard/SubServiceTemplates/Forms/CreateForm.php",
                    "app/Livewire/Dashboard/SubServiceTemplates/Forms/UpdateForm.php",
                    "resources/views/livewire/dashboard/all-delivery-days/index.blade.php",
                    "app/Livewire/Dashboard/DeliveryDaysIndex.php",
                    "resources/views/livewire/dashboard/all-delivery-days/create.blade.php",
                    "app/Livewire/Dashboard/DeliveryDaysCreate.php",
                    "resources/views/livewire/dashboard/all-delivery-days/edit.blade.php",
                    "app/Livewire/Dashboard/DeliveryDaysEdit.php",
                    "app/Livewire/Dashboard/AllDeliveryDays/Forms/CreateForm.php",
                    "app/Livewire/Dashboard/AllDeliveryDays/Forms/UpdateForm.php",
                    "resources/views/livewire/dashboard/content-categories/index.blade.php",
                    "app/Livewire/Dashboard/ContentCategoryIndex.php",
                    "resources/views/livewire/dashboard/content-categories/create.blade.php",
                    "app/Livewire/Dashboard/ContentCategoryCreate.php",
                    "resources/views/livewire/dashboard/content-categories/edit.blade.php",
                    "app/Livewire/Dashboard/ContentCategoryEdit.php",
                    "app/Livewire/Dashboard/ContentCategories/Forms/CreateForm.php",
                    "app/Livewire/Dashboard/ContentCategories/Forms/UpdateForm.php",
                    "resources/views/livewire/dashboard/influencers/index.blade.php",
                    "app/Livewire/Dashboard/InfluencerIndex.php",
                    "resources/views/livewire/dashboard/influencers/create.blade.php",
                    "app/Livewire/Dashboard/InfluencerCreate.php",
                    "resources/views/livewire/dashboard/influencers/edit.blade.php",
                    "app/Livewire/Dashboard/InfluencerEdit.php",
                    "app/Livewire/Dashboard/Influencers/Forms/CreateForm.php",
                    "app/Livewire/Dashboard/Influencers/Forms/UpdateForm.php",
                    "database/seeders/DatabaseSeeder.php",
                    "resources/views/components/layouts/app.blade.php"
                ],
                "currentSchemaError": null,
                "currentSchemaErrorStack": null
            },
            "__tableData": {
                "count": 1,
                "lastPrimaryKey": 1,
                "index": {
                    "1": {
                        "hasMany": {
                            "tables.projectId": [
                                1,
                                2,
                                3,
                                4,
                                5,
                                6,
                                7,
                                8,
                                9,
                                10,
                                12,
                                15,
                                16,
                                17,
                                21
                            ],
                            "models.projectId": [
                                1,
                                2,
                                3,
                                5,
                                11,
                                12,
                                13,
                                18
                            ],
                            "app_sections.projectId": [
                                1,
                                2,
                                3,
                                4
                            ],
                            "schema_sections.projectId": [
                                1,
                                2
                            ],
                            "navs.projectId": [
                                1,
                                2,
                                3,
                                4,
                                9,
                                10,
                                11,
                                17
                            ],
                            "renderable_files.projectId": [
                                1,
                                2,
                                3,
                                4,
                                5,
                                6,
                                7,
                                8,
                                9,
                                10,
                                11,
                                12,
                                13,
                                14,
                                15,
                                16,
                                17,
                                18,
                                19,
                                20,
                                21,
                                22,
                                23,
                                24,
                                25,
                                26,
                                27,
                                28,
                                29,
                                30,
                                31,
                                32,
                                33,
                                34,
                                35,
                                36,
                                37,
                                38,
                                39,
                                40,
                                41,
                                42,
                                43,
                                44,
                                45,
                                46,
                                47,
                                48,
                                49,
                                50,
                                51,
                                52,
                                53,
                                54,
                                55,
                                56,
                                57,
                                58,
                                59,
                                60,
                                61,
                                62,
                                63,
                                64,
                                65,
                                66,
                                67,
                                68,
                                69,
                                70,
                                71,
                                72,
                                73,
                                74,
                                75,
                                76,
                                77,
                                78,
                                79,
                                80,
                                81,
                                82,
                                83,
                                92,
                                93,
                                94,
                                95,
                                96,
                                97,
                                98,
                                99,
                                100,
                                101,
                                102,
                                103,
                                104,
                                105,
                                106,
                                107,
                                108,
                                109,
                                110,
                                111,
                                112,
                                113,
                                114,
                                115,
                                116,
                                117,
                                118,
                                141,
                                142,
                                143,
                                144,
                                145,
                                146,
                                147,
                                148,
                                149,
                                150,
                                151
                            ],
                            "cruds.projectId": [
                                1,
                                2,
                                7,
                                8,
                                9,
                                15
                            ],
                            "routes.projectId": [
                                1,
                                2,
                                3,
                                4,
                                5,
                                6,
                                19,
                                20,
                                21,
                                22,
                                23,
                                24,
                                25,
                                26,
                                27,
                                43,
                                44,
                                45
                            ],
                            "relationships.projectId": [
                                1,
                                2,
                                5,
                                6,
                                12,
                                13,
                                14,
                                15
                            ]
                        }
                    }
                },
                "additionalIndexes": {},
                "items": [],
                "relations": []
            }
        },
        "tables": {
            "item_1": {
                "projectId": 1,
                "name": "users",
                "migrations": [
                    {
                        "migration": "/Users/greelogix/Sites/Taskat/database/migrations/0001_01_01_000000_create_users_table.php",
                        "relativePath": "/database/migrations/0001_01_01_000000_create_users_table.php",
                        "migrationName": "0001_01_01_000000_create_users_table",
                        "datePrefix": "0001_01_01",
                        "fullPrefix": "0001_01_01_000000",
                        "addedColumns": [
                            {
                                "type": "bigInteger",
                                "name": "id",
                                "autoIncrement": true,
                                "unsigned": true,
                                "table": "users",
                                "creatorMethod": "id"
                            },
                            {
                                "type": "string",
                                "name": "name",
                                "length": 255,
                                "table": "users",
                                "creatorMethod": "string"
                            },
                            {
                                "type": "string",
                                "name": "email",
                                "length": 255,
                                "table": "users",
                                "creatorMethod": "string",
                                "unique": true
                            },
                            {
                                "type": "timestamp",
                                "name": "email_verified_at",
                                "precision": 0,
                                "table": "users",
                                "creatorMethod": "timestamp",
                                "nullable": true
                            },
                            {
                                "type": "string",
                                "name": "password",
                                "length": 255,
                                "table": "users",
                                "creatorMethod": "string"
                            },
                            {
                                "type": "string",
                                "name": "remember_token",
                                "length": 100,
                                "table": "users",
                                "creatorMethod": "string",
                                "nullable": true
                            },
                            {
                                "type": "string",
                                "name": "phone",
                                "length": 255,
                                "table": "users",
                                "creatorMethod": "string",
                                "unique": true
                            },
                            {
                                "type": "text",
                                "name": "image",
                                "table": "users",
                                "creatorMethod": "text",
                                "nullable": true
                            },
                            {
                                "type": "string",
                                "name": "type",
                                "length": 255,
                                "table": "users",
                                "creatorMethod": "string",
                                "default": "Customer",
                                "nullable": true
                            },
                            {
                                "type": "string",
                                "name": "status",
                                "length": 255,
                                "table": "users",
                                "creatorMethod": "string",
                                "default": "active",
                                "nullable": true
                            },
                            {
                                "type": "timestamp",
                                "name": "created_at",
                                "precision": 0,
                                "table": "users",
                                "creatorMethod": "timestamp",
                                "nullable": true
                            },
                            {
                                "type": "timestamp",
                                "name": "updated_at",
                                "precision": 0,
                                "table": "users",
                                "creatorMethod": "timestamp",
                                "nullable": true
                            },
                            {
                                "type": "string",
                                "name": "email",
                                "length": 255,
                                "table": "password_reset_tokens",
                                "creatorMethod": "string",
                                "primary": true
                            },
                            {
                                "type": "string",
                                "name": "token",
                                "length": 255,
                                "table": "password_reset_tokens",
                                "creatorMethod": "string"
                            },
                            {
                                "type": "timestamp",
                                "name": "created_at",
                                "precision": 0,
                                "table": "password_reset_tokens",
                                "creatorMethod": "timestamp",
                                "nullable": true
                            },
                            {
                                "type": "string",
                                "name": "id",
                                "length": 255,
                                "table": "sessions",
                                "creatorMethod": "string",
                                "primary": true
                            },
                            {
                                "type": "bigInteger",
                                "name": "user_id",
                                "autoIncrement": false,
                                "unsigned": true,
                                "table": "sessions",
                                "creatorMethod": "foreignId",
                                "nullable": true,
                                "index": true
                            },
                            {
                                "type": "string",
                                "name": "ip_address",
                                "length": 45,
                                "table": "sessions",
                                "creatorMethod": "string",
                                "nullable": true
                            },
                            {
                                "type": "text",
                                "name": "user_agent",
                                "table": "sessions",
                                "creatorMethod": "text",
                                "nullable": true
                            },
                            {
                                "type": "longText",
                                "name": "payload",
                                "table": "sessions",
                                "creatorMethod": "longText"
                            },
                            {
                                "type": "integer",
                                "name": "last_activity",
                                "autoIncrement": false,
                                "unsigned": false,
                                "table": "sessions",
                                "creatorMethod": "integer",
                                "index": true
                            }
                        ],
                        "changedColumns": [],
                        "droppedColumns": [],
                        "renamedColumns": [],
                        "commands": [
                            {
                                "name": "create",
                                "table": "users"
                            },
                            {
                                "name": "create",
                                "table": "password_reset_tokens"
                            },
                            {
                                "name": "create",
                                "table": "sessions"
                            }
                        ],
                        "createdTables": [
                            "users",
                            "password_reset_tokens",
                            "sessions"
                        ],
                        "renamedTables": [],
                        "droppedTables": []
                    }
                ],
                "oldNames": [],
                "createdFromInterface": false,
                "labelColumnId": null,
                "schemaState": {
                    "name": "users",
                    "oldNames": [],
                    "migrations": [
                        {
                            "migration": "/Users/greelogix/Sites/Taskat/database/migrations/0001_01_01_000000_create_users_table.php",
                            "relativePath": "/database/migrations/0001_01_01_000000_create_users_table.php",
                            "migrationName": "0001_01_01_000000_create_users_table",
                            "datePrefix": "0001_01_01",
                            "fullPrefix": "0001_01_01_000000",
                            "addedColumns": [
                                {
                                    "type": "bigInteger",
                                    "name": "id",
                                    "autoIncrement": true,
                                    "unsigned": true,
                                    "table": "users",
                                    "creatorMethod": "id"
                                },
                                {
                                    "type": "string",
                                    "name": "name",
                                    "length": 255,
                                    "table": "users",
                                    "creatorMethod": "string"
                                },
                                {
                                    "type": "string",
                                    "name": "email",
                                    "length": 255,
                                    "table": "users",
                                    "creatorMethod": "string",
                                    "unique": true
                                },
                                {
                                    "type": "timestamp",
                                    "name": "email_verified_at",
                                    "precision": 0,
                                    "table": "users",
                                    "creatorMethod": "timestamp",
                                    "nullable": true
                                },
                                {
                                    "type": "string",
                                    "name": "password",
                                    "length": 255,
                                    "table": "users",
                                    "creatorMethod": "string"
                                },
                                {
                                    "type": "string",
                                    "name": "remember_token",
                                    "length": 100,
                                    "table": "users",
                                    "creatorMethod": "string",
                                    "nullable": true
                                },
                                {
                                    "type": "string",
                                    "name": "phone",
                                    "length": 255,
                                    "table": "users",
                                    "creatorMethod": "string",
                                    "unique": true
                                },
                                {
                                    "type": "text",
                                    "name": "image",
                                    "table": "users",
                                    "creatorMethod": "text",
                                    "nullable": true
                                },
                                {
                                    "type": "string",
                                    "name": "type",
                                    "length": 255,
                                    "table": "users",
                                    "creatorMethod": "string",
                                    "default": "Customer",
                                    "nullable": true
                                },
                                {
                                    "type": "string",
                                    "name": "status",
                                    "length": 255,
                                    "table": "users",
                                    "creatorMethod": "string",
                                    "default": "active",
                                    "nullable": true
                                },
                                {
                                    "type": "timestamp",
                                    "name": "created_at",
                                    "precision": 0,
                                    "table": "users",
                                    "creatorMethod": "timestamp",
                                    "nullable": true
                                },
                                {
                                    "type": "timestamp",
                                    "name": "updated_at",
                                    "precision": 0,
                                    "table": "users",
                                    "creatorMethod": "timestamp",
                                    "nullable": true
                                },
                                {
                                    "type": "string",
                                    "name": "email",
                                    "length": 255,
                                    "table": "password_reset_tokens",
                                    "creatorMethod": "string",
                                    "primary": true
                                },
                                {
                                    "type": "string",
                                    "name": "token",
                                    "length": 255,
                                    "table": "password_reset_tokens",
                                    "creatorMethod": "string"
                                },
                                {
                                    "type": "timestamp",
                                    "name": "created_at",
                                    "precision": 0,
                                    "table": "password_reset_tokens",
                                    "creatorMethod": "timestamp",
                                    "nullable": true
                                },
                                {
                                    "type": "string",
                                    "name": "id",
                                    "length": 255,
                                    "table": "sessions",
                                    "creatorMethod": "string",
                                    "primary": true
                                },
                                {
                                    "type": "bigInteger",
                                    "name": "user_id",
                                    "autoIncrement": false,
                                    "unsigned": true,
                                    "table": "sessions",
                                    "creatorMethod": "foreignId",
                                    "nullable": true,
                                    "index": true
                                },
                                {
                                    "type": "string",
                                    "name": "ip_address",
                                    "length": 45,
                                    "table": "sessions",
                                    "creatorMethod": "string",
                                    "nullable": true
                                },
                                {
                                    "type": "text",
                                    "name": "user_agent",
                                    "table": "sessions",
                                    "creatorMethod": "text",
                                    "nullable": true
                                },
                                {
                                    "type": "longText",
                                    "name": "payload",
                                    "table": "sessions",
                                    "creatorMethod": "longText"
                                },
                                {
                                    "type": "integer",
                                    "name": "last_activity",
                                    "autoIncrement": false,
                                    "unsigned": false,
                                    "table": "sessions",
                                    "creatorMethod": "integer",
                                    "index": true
                                }
                            ],
                            "changedColumns": [],
                            "droppedColumns": [],
                            "renamedColumns": [],
                            "commands": [
                                {
                                    "name": "create",
                                    "table": "users"
                                },
                                {
                                    "name": "create",
                                    "table": "password_reset_tokens"
                                },
                                {
                                    "name": "create",
                                    "table": "sessions"
                                }
                            ],
                            "createdTables": [
                                "users",
                                "password_reset_tokens",
                                "sessions"
                            ],
                            "renamedTables": [],
                            "droppedTables": []
                        }
                    ]
                },
                "id": 1,
                "createdAt": "2025-01-24 12:02:52",
                "updatedAt": "2025-01-27 14:50:30",
                "positionX": "-1556.25",
                "positionY": "-764",
                "sectionId": 1,
                "removed": false
            },
            "__tableData": {
                "count": 15,
                "lastPrimaryKey": 21,
                "index": {
                    "1": {
                        "hasMany": {
                            "columns.tableId": [
                                1,
                                2,
                                3,
                                4,
                                5,
                                6,
                                7,
                                8,
                                48,
                                49,
                                50,
                                51
                            ],
                            "models.tableId": [
                                1
                            ],
                            "indices.onTableId": [
                                3
                            ]
                        }
                    },
                    "2": {
                        "hasMany": {
                            "columns.tableId": [
                                9,
                                10,
                                11
                            ]
                        }
                    },
                    "3": {
                        "hasMany": {
                            "columns.tableId": [
                                12,
                                13,
                                14,
                                15,
                                16,
                                17
                            ]
                        }
                    },
                    "4": {
                        "hasMany": {
                            "columns.tableId": [
                                18,
                                19,
                                20
                            ]
                        }
                    },
                    "5": {
                        "hasMany": {
                            "columns.tableId": [
                                21,
                                22,
                                23
                            ]
                        }
                    },
                    "6": {
                        "hasMany": {
                            "columns.tableId": [
                                24,
                                25,
                                26,
                                27,
                                28,
                                29,
                                30
                            ]
                        }
                    },
                    "7": {
                        "hasMany": {
                            "columns.tableId": [
                                31,
                                32,
                                33,
                                34,
                                35,
                                36,
                                37,
                                38,
                                39,
                                40
                            ]
                        }
                    },
                    "8": {
                        "hasMany": {
                            "columns.tableId": [
                                41,
                                42,
                                43,
                                44,
                                45,
                                46,
                                47
                            ]
                        }
                    },
                    "9": {
                        "hasMany": {
                            "columns.tableId": [
                                52,
                                53,
                                54,
                                55,
                                56,
                                57
                            ],
                            "models.tableId": [
                                2
                            ],
                            "cruds.tableId": [
                                1
                            ],
                            "indices.onTableId": [
                                1
                            ]
                        }
                    },
                    "10": {
                        "hasMany": {
                            "columns.tableId": [
                                58,
                                59,
                                60,
                                61,
                                62,
                                63,
                                64,
                                65,
                                66,
                                67
                            ],
                            "models.tableId": [
                                3
                            ],
                            "indices.tableId": [
                                1
                            ],
                            "cruds.tableId": [
                                2
                            ],
                            "indices.onTableId": [
                                11,
                                12
                            ]
                        }
                    },
                    "12": {
                        "hasMany": {
                            "columns.tableId": [
                                76,
                                77,
                                78,
                                79,
                                80,
                                81,
                                82,
                                83
                            ],
                            "models.tableId": [
                                5
                            ],
                            "indices.tableId": [
                                3
                            ],
                            "cruds.tableId": []
                        }
                    },
                    "15": {
                        "hasMany": {
                            "columns.tableId": [
                                107,
                                108,
                                109,
                                110,
                                111,
                                112,
                                113,
                                114,
                                115
                            ],
                            "models.tableId": [
                                11
                            ],
                            "indices.tableId": [
                                11
                            ],
                            "cruds.tableId": [
                                7
                            ]
                        }
                    },
                    "16": {
                        "hasMany": {
                            "columns.tableId": [
                                116,
                                117,
                                118,
                                119,
                                120,
                                121,
                                122,
                                123
                            ],
                            "indices.tableId": [
                                12
                            ],
                            "models.tableId": [
                                12
                            ],
                            "cruds.tableId": [
                                8
                            ]
                        }
                    },
                    "17": {
                        "hasMany": {
                            "columns.tableId": [
                                124,
                                125,
                                126,
                                127,
                                128,
                                129
                            ],
                            "models.tableId": [
                                13
                            ],
                            "cruds.tableId": [
                                9
                            ]
                        }
                    },
                    "21": {
                        "hasMany": {
                            "columns.tableId": [
                                159,
                                160,
                                161,
                                162,
                                163,
                                164,
                                165,
                                166,
                                167
                            ],
                            "models.tableId": [
                                18
                            ],
                            "cruds.tableId": [
                                15
                            ]
                        }
                    }
                },
                "additionalIndexes": {},
                "items": [],
                "relations": []
            },
            "item_2": {
                "projectId": 1,
                "name": "password_reset_tokens",
                "migrations": [
                    {
                        "migration": "/Users/greelogix/Sites/Taskat/database/migrations/0001_01_01_000000_create_users_table.php",
                        "relativePath": "/database/migrations/0001_01_01_000000_create_users_table.php",
                        "migrationName": "0001_01_01_000000_create_users_table",
                        "datePrefix": "0001_01_01",
                        "fullPrefix": "0001_01_01_000000",
                        "addedColumns": [
                            {
                                "type": "bigInteger",
                                "name": "id",
                                "autoIncrement": true,
                                "unsigned": true,
                                "table": "users",
                                "creatorMethod": "id"
                            },
                            {
                                "type": "string",
                                "name": "name",
                                "length": 255,
                                "table": "users",
                                "creatorMethod": "string"
                            },
                            {
                                "type": "string",
                                "name": "email",
                                "length": 255,
                                "table": "users",
                                "creatorMethod": "string",
                                "unique": true
                            },
                            {
                                "type": "timestamp",
                                "name": "email_verified_at",
                                "precision": 0,
                                "table": "users",
                                "creatorMethod": "timestamp",
                                "nullable": true
                            },
                            {
                                "type": "string",
                                "name": "password",
                                "length": 255,
                                "table": "users",
                                "creatorMethod": "string"
                            },
                            {
                                "type": "string",
                                "name": "remember_token",
                                "length": 100,
                                "table": "users",
                                "creatorMethod": "string",
                                "nullable": true
                            },
                            {
                                "type": "string",
                                "name": "phone",
                                "length": 255,
                                "table": "users",
                                "creatorMethod": "string",
                                "unique": true
                            },
                            {
                                "type": "text",
                                "name": "image",
                                "table": "users",
                                "creatorMethod": "text",
                                "nullable": true
                            },
                            {
                                "type": "string",
                                "name": "type",
                                "length": 255,
                                "table": "users",
                                "creatorMethod": "string",
                                "default": "Customer",
                                "nullable": true
                            },
                            {
                                "type": "string",
                                "name": "status",
                                "length": 255,
                                "table": "users",
                                "creatorMethod": "string",
                                "default": "active",
                                "nullable": true
                            },
                            {
                                "type": "timestamp",
                                "name": "created_at",
                                "precision": 0,
                                "table": "users",
                                "creatorMethod": "timestamp",
                                "nullable": true
                            },
                            {
                                "type": "timestamp",
                                "name": "updated_at",
                                "precision": 0,
                                "table": "users",
                                "creatorMethod": "timestamp",
                                "nullable": true
                            },
                            {
                                "type": "string",
                                "name": "email",
                                "length": 255,
                                "table": "password_reset_tokens",
                                "creatorMethod": "string",
                                "primary": true
                            },
                            {
                                "type": "string",
                                "name": "token",
                                "length": 255,
                                "table": "password_reset_tokens",
                                "creatorMethod": "string"
                            },
                            {
                                "type": "timestamp",
                                "name": "created_at",
                                "precision": 0,
                                "table": "password_reset_tokens",
                                "creatorMethod": "timestamp",
                                "nullable": true
                            },
                            {
                                "type": "string",
                                "name": "id",
                                "length": 255,
                                "table": "sessions",
                                "creatorMethod": "string",
                                "primary": true
                            },
                            {
                                "type": "bigInteger",
                                "name": "user_id",
                                "autoIncrement": false,
                                "unsigned": true,
                                "table": "sessions",
                                "creatorMethod": "foreignId",
                                "nullable": true,
                                "index": true
                            },
                            {
                                "type": "string",
                                "name": "ip_address",
                                "length": 45,
                                "table": "sessions",
                                "creatorMethod": "string",
                                "nullable": true
                            },
                            {
                                "type": "text",
                                "name": "user_agent",
                                "table": "sessions",
                                "creatorMethod": "text",
                                "nullable": true
                            },
                            {
                                "type": "longText",
                                "name": "payload",
                                "table": "sessions",
                                "creatorMethod": "longText"
                            },
                            {
                                "type": "integer",
                                "name": "last_activity",
                                "autoIncrement": false,
                                "unsigned": false,
                                "table": "sessions",
                                "creatorMethod": "integer",
                                "index": true
                            }
                        ],
                        "changedColumns": [],
                        "droppedColumns": [],
                        "renamedColumns": [],
                        "commands": [
                            {
                                "name": "create",
                                "table": "users"
                            },
                            {
                                "name": "create",
                                "table": "password_reset_tokens"
                            },
                            {
                                "name": "create",
                                "table": "sessions"
                            }
                        ],
                        "createdTables": [
                            "users",
                            "password_reset_tokens",
                            "sessions"
                        ],
                        "renamedTables": [],
                        "droppedTables": []
                    }
                ],
                "oldNames": [],
                "createdFromInterface": false,
                "labelColumnId": null,
                "schemaState": {
                    "name": "password_reset_tokens",
                    "oldNames": [],
                    "migrations": [
                        {
                            "migration": "/Users/greelogix/Sites/Taskat/database/migrations/0001_01_01_000000_create_users_table.php",
                            "relativePath": "/database/migrations/0001_01_01_000000_create_users_table.php",
                            "migrationName": "0001_01_01_000000_create_users_table",
                            "datePrefix": "0001_01_01",
                            "fullPrefix": "0001_01_01_000000",
                            "addedColumns": [
                                {
                                    "type": "bigInteger",
                                    "name": "id",
                                    "autoIncrement": true,
                                    "unsigned": true,
                                    "table": "users",
                                    "creatorMethod": "id"
                                },
                                {
                                    "type": "string",
                                    "name": "name",
                                    "length": 255,
                                    "table": "users",
                                    "creatorMethod": "string"
                                },
                                {
                                    "type": "string",
                                    "name": "email",
                                    "length": 255,
                                    "table": "users",
                                    "creatorMethod": "string",
                                    "unique": true
                                },
                                {
                                    "type": "timestamp",
                                    "name": "email_verified_at",
                                    "precision": 0,
                                    "table": "users",
                                    "creatorMethod": "timestamp",
                                    "nullable": true
                                },
                                {
                                    "type": "string",
                                    "name": "password",
                                    "length": 255,
                                    "table": "users",
                                    "creatorMethod": "string"
                                },
                                {
                                    "type": "string",
                                    "name": "remember_token",
                                    "length": 100,
                                    "table": "users",
                                    "creatorMethod": "string",
                                    "nullable": true
                                },
                                {
                                    "type": "string",
                                    "name": "phone",
                                    "length": 255,
                                    "table": "users",
                                    "creatorMethod": "string",
                                    "unique": true
                                },
                                {
                                    "type": "text",
                                    "name": "image",
                                    "table": "users",
                                    "creatorMethod": "text",
                                    "nullable": true
                                },
                                {
                                    "type": "string",
                                    "name": "type",
                                    "length": 255,
                                    "table": "users",
                                    "creatorMethod": "string",
                                    "default": "Customer",
                                    "nullable": true
                                },
                                {
                                    "type": "string",
                                    "name": "status",
                                    "length": 255,
                                    "table": "users",
                                    "creatorMethod": "string",
                                    "default": "active",
                                    "nullable": true
                                },
                                {
                                    "type": "timestamp",
                                    "name": "created_at",
                                    "precision": 0,
                                    "table": "users",
                                    "creatorMethod": "timestamp",
                                    "nullable": true
                                },
                                {
                                    "type": "timestamp",
                                    "name": "updated_at",
                                    "precision": 0,
                                    "table": "users",
                                    "creatorMethod": "timestamp",
                                    "nullable": true
                                },
                                {
                                    "type": "string",
                                    "name": "email",
                                    "length": 255,
                                    "table": "password_reset_tokens",
                                    "creatorMethod": "string",
                                    "primary": true
                                },
                                {
                                    "type": "string",
                                    "name": "token",
                                    "length": 255,
                                    "table": "password_reset_tokens",
                                    "creatorMethod": "string"
                                },
                                {
                                    "type": "timestamp",
                                    "name": "created_at",
                                    "precision": 0,
                                    "table": "password_reset_tokens",
                                    "creatorMethod": "timestamp",
                                    "nullable": true
                                },
                                {
                                    "type": "string",
                                    "name": "id",
                                    "length": 255,
                                    "table": "sessions",
                                    "creatorMethod": "string",
                                    "primary": true
                                },
                                {
                                    "type": "bigInteger",
                                    "name": "user_id",
                                    "autoIncrement": false,
                                    "unsigned": true,
                                    "table": "sessions",
                                    "creatorMethod": "foreignId",
                                    "nullable": true,
                                    "index": true
                                },
                                {
                                    "type": "string",
                                    "name": "ip_address",
                                    "length": 45,
                                    "table": "sessions",
                                    "creatorMethod": "string",
                                    "nullable": true
                                },
                                {
                                    "type": "text",
                                    "name": "user_agent",
                                    "table": "sessions",
                                    "creatorMethod": "text",
                                    "nullable": true
                                },
                                {
                                    "type": "longText",
                                    "name": "payload",
                                    "table": "sessions",
                                    "creatorMethod": "longText"
                                },
                                {
                                    "type": "integer",
                                    "name": "last_activity",
                                    "autoIncrement": false,
                                    "unsigned": false,
                                    "table": "sessions",
                                    "creatorMethod": "integer",
                                    "index": true
                                }
                            ],
                            "changedColumns": [],
                            "droppedColumns": [],
                            "renamedColumns": [],
                            "commands": [
                                {
                                    "name": "create",
                                    "table": "users"
                                },
                                {
                                    "name": "create",
                                    "table": "password_reset_tokens"
                                },
                                {
                                    "name": "create",
                                    "table": "sessions"
                                }
                            ],
                            "createdTables": [
                                "users",
                                "password_reset_tokens",
                                "sessions"
                            ],
                            "renamedTables": [],
                            "droppedTables": []
                        }
                    ]
                },
                "id": 2,
                "createdAt": "2025-01-24 12:02:52",
                "updatedAt": "2025-01-27 14:50:30",
                "positionX": 0,
                "positionY": 0,
                "sectionId": 2,
                "removed": false
            },
            "item_3": {
                "projectId": 1,
                "name": "sessions",
                "migrations": [
                    {
                        "migration": "/Users/greelogix/Sites/Taskat/database/migrations/0001_01_01_000000_create_users_table.php",
                        "relativePath": "/database/migrations/0001_01_01_000000_create_users_table.php",
                        "migrationName": "0001_01_01_000000_create_users_table",
                        "datePrefix": "0001_01_01",
                        "fullPrefix": "0001_01_01_000000",
                        "addedColumns": [
                            {
                                "type": "bigInteger",
                                "name": "id",
                                "autoIncrement": true,
                                "unsigned": true,
                                "table": "users",
                                "creatorMethod": "id"
                            },
                            {
                                "type": "string",
                                "name": "name",
                                "length": 255,
                                "table": "users",
                                "creatorMethod": "string"
                            },
                            {
                                "type": "string",
                                "name": "email",
                                "length": 255,
                                "table": "users",
                                "creatorMethod": "string",
                                "unique": true
                            },
                            {
                                "type": "timestamp",
                                "name": "email_verified_at",
                                "precision": 0,
                                "table": "users",
                                "creatorMethod": "timestamp",
                                "nullable": true
                            },
                            {
                                "type": "string",
                                "name": "password",
                                "length": 255,
                                "table": "users",
                                "creatorMethod": "string"
                            },
                            {
                                "type": "string",
                                "name": "remember_token",
                                "length": 100,
                                "table": "users",
                                "creatorMethod": "string",
                                "nullable": true
                            },
                            {
                                "type": "string",
                                "name": "phone",
                                "length": 255,
                                "table": "users",
                                "creatorMethod": "string",
                                "unique": true
                            },
                            {
                                "type": "text",
                                "name": "image",
                                "table": "users",
                                "creatorMethod": "text",
                                "nullable": true
                            },
                            {
                                "type": "string",
                                "name": "type",
                                "length": 255,
                                "table": "users",
                                "creatorMethod": "string",
                                "default": "Customer",
                                "nullable": true
                            },
                            {
                                "type": "string",
                                "name": "status",
                                "length": 255,
                                "table": "users",
                                "creatorMethod": "string",
                                "default": "active",
                                "nullable": true
                            },
                            {
                                "type": "timestamp",
                                "name": "created_at",
                                "precision": 0,
                                "table": "users",
                                "creatorMethod": "timestamp",
                                "nullable": true
                            },
                            {
                                "type": "timestamp",
                                "name": "updated_at",
                                "precision": 0,
                                "table": "users",
                                "creatorMethod": "timestamp",
                                "nullable": true
                            },
                            {
                                "type": "string",
                                "name": "email",
                                "length": 255,
                                "table": "password_reset_tokens",
                                "creatorMethod": "string",
                                "primary": true
                            },
                            {
                                "type": "string",
                                "name": "token",
                                "length": 255,
                                "table": "password_reset_tokens",
                                "creatorMethod": "string"
                            },
                            {
                                "type": "timestamp",
                                "name": "created_at",
                                "precision": 0,
                                "table": "password_reset_tokens",
                                "creatorMethod": "timestamp",
                                "nullable": true
                            },
                            {
                                "type": "string",
                                "name": "id",
                                "length": 255,
                                "table": "sessions",
                                "creatorMethod": "string",
                                "primary": true
                            },
                            {
                                "type": "bigInteger",
                                "name": "user_id",
                                "autoIncrement": false,
                                "unsigned": true,
                                "table": "sessions",
                                "creatorMethod": "foreignId",
                                "nullable": true,
                                "index": true
                            },
                            {
                                "type": "string",
                                "name": "ip_address",
                                "length": 45,
                                "table": "sessions",
                                "creatorMethod": "string",
                                "nullable": true
                            },
                            {
                                "type": "text",
                                "name": "user_agent",
                                "table": "sessions",
                                "creatorMethod": "text",
                                "nullable": true
                            },
                            {
                                "type": "longText",
                                "name": "payload",
                                "table": "sessions",
                                "creatorMethod": "longText"
                            },
                            {
                                "type": "integer",
                                "name": "last_activity",
                                "autoIncrement": false,
                                "unsigned": false,
                                "table": "sessions",
                                "creatorMethod": "integer",
                                "index": true
                            }
                        ],
                        "changedColumns": [],
                        "droppedColumns": [],
                        "renamedColumns": [],
                        "commands": [
                            {
                                "name": "create",
                                "table": "users"
                            },
                            {
                                "name": "create",
                                "table": "password_reset_tokens"
                            },
                            {
                                "name": "create",
                                "table": "sessions"
                            }
                        ],
                        "createdTables": [
                            "users",
                            "password_reset_tokens",
                            "sessions"
                        ],
                        "renamedTables": [],
                        "droppedTables": []
                    }
                ],
                "oldNames": [],
                "createdFromInterface": false,
                "labelColumnId": null,
                "schemaState": {
                    "name": "sessions",
                    "oldNames": [],
                    "migrations": [
                        {
                            "migration": "/Users/greelogix/Sites/Taskat/database/migrations/0001_01_01_000000_create_users_table.php",
                            "relativePath": "/database/migrations/0001_01_01_000000_create_users_table.php",
                            "migrationName": "0001_01_01_000000_create_users_table",
                            "datePrefix": "0001_01_01",
                            "fullPrefix": "0001_01_01_000000",
                            "addedColumns": [
                                {
                                    "type": "bigInteger",
                                    "name": "id",
                                    "autoIncrement": true,
                                    "unsigned": true,
                                    "table": "users",
                                    "creatorMethod": "id"
                                },
                                {
                                    "type": "string",
                                    "name": "name",
                                    "length": 255,
                                    "table": "users",
                                    "creatorMethod": "string"
                                },
                                {
                                    "type": "string",
                                    "name": "email",
                                    "length": 255,
                                    "table": "users",
                                    "creatorMethod": "string",
                                    "unique": true
                                },
                                {
                                    "type": "timestamp",
                                    "name": "email_verified_at",
                                    "precision": 0,
                                    "table": "users",
                                    "creatorMethod": "timestamp",
                                    "nullable": true
                                },
                                {
                                    "type": "string",
                                    "name": "password",
                                    "length": 255,
                                    "table": "users",
                                    "creatorMethod": "string"
                                },
                                {
                                    "type": "string",
                                    "name": "remember_token",
                                    "length": 100,
                                    "table": "users",
                                    "creatorMethod": "string",
                                    "nullable": true
                                },
                                {
                                    "type": "string",
                                    "name": "phone",
                                    "length": 255,
                                    "table": "users",
                                    "creatorMethod": "string",
                                    "unique": true
                                },
                                {
                                    "type": "text",
                                    "name": "image",
                                    "table": "users",
                                    "creatorMethod": "text",
                                    "nullable": true
                                },
                                {
                                    "type": "string",
                                    "name": "type",
                                    "length": 255,
                                    "table": "users",
                                    "creatorMethod": "string",
                                    "default": "Customer",
                                    "nullable": true
                                },
                                {
                                    "type": "string",
                                    "name": "status",
                                    "length": 255,
                                    "table": "users",
                                    "creatorMethod": "string",
                                    "default": "active",
                                    "nullable": true
                                },
                                {
                                    "type": "timestamp",
                                    "name": "created_at",
                                    "precision": 0,
                                    "table": "users",
                                    "creatorMethod": "timestamp",
                                    "nullable": true
                                },
                                {
                                    "type": "timestamp",
                                    "name": "updated_at",
                                    "precision": 0,
                                    "table": "users",
                                    "creatorMethod": "timestamp",
                                    "nullable": true
                                },
                                {
                                    "type": "string",
                                    "name": "email",
                                    "length": 255,
                                    "table": "password_reset_tokens",
                                    "creatorMethod": "string",
                                    "primary": true
                                },
                                {
                                    "type": "string",
                                    "name": "token",
                                    "length": 255,
                                    "table": "password_reset_tokens",
                                    "creatorMethod": "string"
                                },
                                {
                                    "type": "timestamp",
                                    "name": "created_at",
                                    "precision": 0,
                                    "table": "password_reset_tokens",
                                    "creatorMethod": "timestamp",
                                    "nullable": true
                                },
                                {
                                    "type": "string",
                                    "name": "id",
                                    "length": 255,
                                    "table": "sessions",
                                    "creatorMethod": "string",
                                    "primary": true
                                },
                                {
                                    "type": "bigInteger",
                                    "name": "user_id",
                                    "autoIncrement": false,
                                    "unsigned": true,
                                    "table": "sessions",
                                    "creatorMethod": "foreignId",
                                    "nullable": true,
                                    "index": true
                                },
                                {
                                    "type": "string",
                                    "name": "ip_address",
                                    "length": 45,
                                    "table": "sessions",
                                    "creatorMethod": "string",
                                    "nullable": true
                                },
                                {
                                    "type": "text",
                                    "name": "user_agent",
                                    "table": "sessions",
                                    "creatorMethod": "text",
                                    "nullable": true
                                },
                                {
                                    "type": "longText",
                                    "name": "payload",
                                    "table": "sessions",
                                    "creatorMethod": "longText"
                                },
                                {
                                    "type": "integer",
                                    "name": "last_activity",
                                    "autoIncrement": false,
                                    "unsigned": false,
                                    "table": "sessions",
                                    "creatorMethod": "integer",
                                    "index": true
                                }
                            ],
                            "changedColumns": [],
                            "droppedColumns": [],
                            "renamedColumns": [],
                            "commands": [
                                {
                                    "name": "create",
                                    "table": "users"
                                },
                                {
                                    "name": "create",
                                    "table": "password_reset_tokens"
                                },
                                {
                                    "name": "create",
                                    "table": "sessions"
                                }
                            ],
                            "createdTables": [
                                "users",
                                "password_reset_tokens",
                                "sessions"
                            ],
                            "renamedTables": [],
                            "droppedTables": []
                        }
                    ]
                },
                "id": 3,
                "createdAt": "2025-01-24 12:02:52",
                "updatedAt": "2025-01-27 14:50:30",
                "positionX": 0,
                "positionY": 0,
                "sectionId": 2,
                "removed": false
            },
            "item_4": {
                "projectId": 1,
                "name": "cache",
                "migrations": [
                    {
                        "migration": "/Users/greelogix/Sites/Taskat/database/migrations/0001_01_01_000001_create_cache_table.php",
                        "relativePath": "/database/migrations/0001_01_01_000001_create_cache_table.php",
                        "migrationName": "0001_01_01_000001_create_cache_table",
                        "datePrefix": "0001_01_01",
                        "fullPrefix": "0001_01_01_000001",
                        "addedColumns": [
                            {
                                "type": "string",
                                "name": "key",
                                "length": 255,
                                "table": "cache",
                                "creatorMethod": "string",
                                "primary": true
                            },
                            {
                                "type": "mediumText",
                                "name": "value",
                                "table": "cache",
                                "creatorMethod": "mediumText"
                            },
                            {
                                "type": "integer",
                                "name": "expiration",
                                "autoIncrement": false,
                                "unsigned": false,
                                "table": "cache",
                                "creatorMethod": "integer"
                            },
                            {
                                "type": "string",
                                "name": "key",
                                "length": 255,
                                "table": "cache_locks",
                                "creatorMethod": "string",
                                "primary": true
                            },
                            {
                                "type": "string",
                                "name": "owner",
                                "length": 255,
                                "table": "cache_locks",
                                "creatorMethod": "string"
                            },
                            {
                                "type": "integer",
                                "name": "expiration",
                                "autoIncrement": false,
                                "unsigned": false,
                                "table": "cache_locks",
                                "creatorMethod": "integer"
                            }
                        ],
                        "changedColumns": [],
                        "droppedColumns": [],
                        "renamedColumns": [],
                        "commands": [
                            {
                                "name": "create",
                                "table": "cache"
                            },
                            {
                                "name": "create",
                                "table": "cache_locks"
                            }
                        ],
                        "createdTables": [
                            "cache",
                            "cache_locks"
                        ],
                        "renamedTables": [],
                        "droppedTables": []
                    }
                ],
                "oldNames": [],
                "createdFromInterface": false,
                "labelColumnId": null,
                "schemaState": {
                    "name": "cache",
                    "oldNames": [],
                    "migrations": [
                        {
                            "migration": "/Users/greelogix/Sites/Taskat/database/migrations/0001_01_01_000001_create_cache_table.php",
                            "relativePath": "/database/migrations/0001_01_01_000001_create_cache_table.php",
                            "migrationName": "0001_01_01_000001_create_cache_table",
                            "datePrefix": "0001_01_01",
                            "fullPrefix": "0001_01_01_000001",
                            "addedColumns": [
                                {
                                    "type": "string",
                                    "name": "key",
                                    "length": 255,
                                    "table": "cache",
                                    "creatorMethod": "string",
                                    "primary": true
                                },
                                {
                                    "type": "mediumText",
                                    "name": "value",
                                    "table": "cache",
                                    "creatorMethod": "mediumText"
                                },
                                {
                                    "type": "integer",
                                    "name": "expiration",
                                    "autoIncrement": false,
                                    "unsigned": false,
                                    "table": "cache",
                                    "creatorMethod": "integer"
                                },
                                {
                                    "type": "string",
                                    "name": "key",
                                    "length": 255,
                                    "table": "cache_locks",
                                    "creatorMethod": "string",
                                    "primary": true
                                },
                                {
                                    "type": "string",
                                    "name": "owner",
                                    "length": 255,
                                    "table": "cache_locks",
                                    "creatorMethod": "string"
                                },
                                {
                                    "type": "integer",
                                    "name": "expiration",
                                    "autoIncrement": false,
                                    "unsigned": false,
                                    "table": "cache_locks",
                                    "creatorMethod": "integer"
                                }
                            ],
                            "changedColumns": [],
                            "droppedColumns": [],
                            "renamedColumns": [],
                            "commands": [
                                {
                                    "name": "create",
                                    "table": "cache"
                                },
                                {
                                    "name": "create",
                                    "table": "cache_locks"
                                }
                            ],
                            "createdTables": [
                                "cache",
                                "cache_locks"
                            ],
                            "renamedTables": [],
                            "droppedTables": []
                        }
                    ]
                },
                "id": 4,
                "createdAt": "2025-01-24 12:02:52",
                "updatedAt": "2025-01-27 14:50:30",
                "positionX": 0,
                "positionY": 0,
                "sectionId": 2,
                "removed": false
            },
            "item_5": {
                "projectId": 1,
                "name": "cache_locks",
                "migrations": [
                    {
                        "migration": "/Users/greelogix/Sites/Taskat/database/migrations/0001_01_01_000001_create_cache_table.php",
                        "relativePath": "/database/migrations/0001_01_01_000001_create_cache_table.php",
                        "migrationName": "0001_01_01_000001_create_cache_table",
                        "datePrefix": "0001_01_01",
                        "fullPrefix": "0001_01_01_000001",
                        "addedColumns": [
                            {
                                "type": "string",
                                "name": "key",
                                "length": 255,
                                "table": "cache",
                                "creatorMethod": "string",
                                "primary": true
                            },
                            {
                                "type": "mediumText",
                                "name": "value",
                                "table": "cache",
                                "creatorMethod": "mediumText"
                            },
                            {
                                "type": "integer",
                                "name": "expiration",
                                "autoIncrement": false,
                                "unsigned": false,
                                "table": "cache",
                                "creatorMethod": "integer"
                            },
                            {
                                "type": "string",
                                "name": "key",
                                "length": 255,
                                "table": "cache_locks",
                                "creatorMethod": "string",
                                "primary": true
                            },
                            {
                                "type": "string",
                                "name": "owner",
                                "length": 255,
                                "table": "cache_locks",
                                "creatorMethod": "string"
                            },
                            {
                                "type": "integer",
                                "name": "expiration",
                                "autoIncrement": false,
                                "unsigned": false,
                                "table": "cache_locks",
                                "creatorMethod": "integer"
                            }
                        ],
                        "changedColumns": [],
                        "droppedColumns": [],
                        "renamedColumns": [],
                        "commands": [
                            {
                                "name": "create",
                                "table": "cache"
                            },
                            {
                                "name": "create",
                                "table": "cache_locks"
                            }
                        ],
                        "createdTables": [
                            "cache",
                            "cache_locks"
                        ],
                        "renamedTables": [],
                        "droppedTables": []
                    }
                ],
                "oldNames": [],
                "createdFromInterface": false,
                "labelColumnId": null,
                "schemaState": {
                    "name": "cache_locks",
                    "oldNames": [],
                    "migrations": [
                        {
                            "migration": "/Users/greelogix/Sites/Taskat/database/migrations/0001_01_01_000001_create_cache_table.php",
                            "relativePath": "/database/migrations/0001_01_01_000001_create_cache_table.php",
                            "migrationName": "0001_01_01_000001_create_cache_table",
                            "datePrefix": "0001_01_01",
                            "fullPrefix": "0001_01_01_000001",
                            "addedColumns": [
                                {
                                    "type": "string",
                                    "name": "key",
                                    "length": 255,
                                    "table": "cache",
                                    "creatorMethod": "string",
                                    "primary": true
                                },
                                {
                                    "type": "mediumText",
                                    "name": "value",
                                    "table": "cache",
                                    "creatorMethod": "mediumText"
                                },
                                {
                                    "type": "integer",
                                    "name": "expiration",
                                    "autoIncrement": false,
                                    "unsigned": false,
                                    "table": "cache",
                                    "creatorMethod": "integer"
                                },
                                {
                                    "type": "string",
                                    "name": "key",
                                    "length": 255,
                                    "table": "cache_locks",
                                    "creatorMethod": "string",
                                    "primary": true
                                },
                                {
                                    "type": "string",
                                    "name": "owner",
                                    "length": 255,
                                    "table": "cache_locks",
                                    "creatorMethod": "string"
                                },
                                {
                                    "type": "integer",
                                    "name": "expiration",
                                    "autoIncrement": false,
                                    "unsigned": false,
                                    "table": "cache_locks",
                                    "creatorMethod": "integer"
                                }
                            ],
                            "changedColumns": [],
                            "droppedColumns": [],
                            "renamedColumns": [],
                            "commands": [
                                {
                                    "name": "create",
                                    "table": "cache"
                                },
                                {
                                    "name": "create",
                                    "table": "cache_locks"
                                }
                            ],
                            "createdTables": [
                                "cache",
                                "cache_locks"
                            ],
                            "renamedTables": [],
                            "droppedTables": []
                        }
                    ]
                },
                "id": 5,
                "createdAt": "2025-01-24 12:02:52",
                "updatedAt": "2025-01-27 14:50:30",
                "positionX": 0,
                "positionY": 0,
                "sectionId": 2,
                "removed": false
            },
            "item_6": {
                "projectId": 1,
                "name": "jobs",
                "migrations": [
                    {
                        "migration": "/Users/greelogix/Sites/Taskat/database/migrations/0001_01_01_000002_create_jobs_table.php",
                        "relativePath": "/database/migrations/0001_01_01_000002_create_jobs_table.php",
                        "migrationName": "0001_01_01_000002_create_jobs_table",
                        "datePrefix": "0001_01_01",
                        "fullPrefix": "0001_01_01_000002",
                        "addedColumns": [
                            {
                                "type": "bigInteger",
                                "name": "id",
                                "autoIncrement": true,
                                "unsigned": true,
                                "table": "jobs",
                                "creatorMethod": "id"
                            },
                            {
                                "type": "string",
                                "name": "queue",
                                "length": 255,
                                "table": "jobs",
                                "creatorMethod": "string",
                                "index": true
                            },
                            {
                                "type": "longText",
                                "name": "payload",
                                "table": "jobs",
                                "creatorMethod": "longText"
                            },
                            {
                                "type": "tinyInteger",
                                "name": "attempts",
                                "autoIncrement": false,
                                "unsigned": true,
                                "table": "jobs",
                                "creatorMethod": "unsignedTinyInteger"
                            },
                            {
                                "type": "integer",
                                "name": "reserved_at",
                                "autoIncrement": false,
                                "unsigned": true,
                                "table": "jobs",
                                "creatorMethod": "unsignedInteger",
                                "nullable": true
                            },
                            {
                                "type": "integer",
                                "name": "available_at",
                                "autoIncrement": false,
                                "unsigned": true,
                                "table": "jobs",
                                "creatorMethod": "unsignedInteger"
                            },
                            {
                                "type": "integer",
                                "name": "created_at",
                                "autoIncrement": false,
                                "unsigned": true,
                                "table": "jobs",
                                "creatorMethod": "unsignedInteger"
                            },
                            {
                                "type": "string",
                                "name": "id",
                                "length": 255,
                                "table": "job_batches",
                                "creatorMethod": "string",
                                "primary": true
                            },
                            {
                                "type": "string",
                                "name": "name",
                                "length": 255,
                                "table": "job_batches",
                                "creatorMethod": "string"
                            },
                            {
                                "type": "integer",
                                "name": "total_jobs",
                                "autoIncrement": false,
                                "unsigned": false,
                                "table": "job_batches",
                                "creatorMethod": "integer"
                            },
                            {
                                "type": "integer",
                                "name": "pending_jobs",
                                "autoIncrement": false,
                                "unsigned": false,
                                "table": "job_batches",
                                "creatorMethod": "integer"
                            },
                            {
                                "type": "integer",
                                "name": "failed_jobs",
                                "autoIncrement": false,
                                "unsigned": false,
                                "table": "job_batches",
                                "creatorMethod": "integer"
                            },
                            {
                                "type": "longText",
                                "name": "failed_job_ids",
                                "table": "job_batches",
                                "creatorMethod": "longText"
                            },
                            {
                                "type": "mediumText",
                                "name": "options",
                                "table": "job_batches",
                                "creatorMethod": "mediumText",
                                "nullable": true
                            },
                            {
                                "type": "integer",
                                "name": "cancelled_at",
                                "autoIncrement": false,
                                "unsigned": false,
                                "table": "job_batches",
                                "creatorMethod": "integer",
                                "nullable": true
                            },
                            {
                                "type": "integer",
                                "name": "created_at",
                                "autoIncrement": false,
                                "unsigned": false,
                                "table": "job_batches",
                                "creatorMethod": "integer"
                            },
                            {
                                "type": "integer",
                                "name": "finished_at",
                                "autoIncrement": false,
                                "unsigned": false,
                                "table": "job_batches",
                                "creatorMethod": "integer",
                                "nullable": true
                            },
                            {
                                "type": "bigInteger",
                                "name": "id",
                                "autoIncrement": true,
                                "unsigned": true,
                                "table": "failed_jobs",
                                "creatorMethod": "id"
                            },
                            {
                                "type": "string",
                                "name": "uuid",
                                "length": 255,
                                "table": "failed_jobs",
                                "creatorMethod": "string",
                                "unique": true
                            },
                            {
                                "type": "text",
                                "name": "connection",
                                "table": "failed_jobs",
                                "creatorMethod": "text"
                            },
                            {
                                "type": "text",
                                "name": "queue",
                                "table": "failed_jobs",
                                "creatorMethod": "text"
                            },
                            {
                                "type": "longText",
                                "name": "payload",
                                "table": "failed_jobs",
                                "creatorMethod": "longText"
                            },
                            {
                                "type": "longText",
                                "name": "exception",
                                "table": "failed_jobs",
                                "creatorMethod": "longText"
                            },
                            {
                                "type": "timestamp",
                                "name": "failed_at",
                                "precision": 0,
                                "table": "failed_jobs",
                                "creatorMethod": "timestamp",
                                "useCurrent": true
                            }
                        ],
                        "changedColumns": [],
                        "droppedColumns": [],
                        "renamedColumns": [],
                        "commands": [
                            {
                                "name": "create",
                                "table": "jobs"
                            },
                            {
                                "name": "create",
                                "table": "job_batches"
                            },
                            {
                                "name": "create",
                                "table": "failed_jobs"
                            }
                        ],
                        "createdTables": [
                            "jobs",
                            "job_batches",
                            "failed_jobs"
                        ],
                        "renamedTables": [],
                        "droppedTables": []
                    }
                ],
                "oldNames": [],
                "createdFromInterface": false,
                "labelColumnId": null,
                "schemaState": {
                    "name": "jobs",
                    "oldNames": [],
                    "migrations": [
                        {
                            "migration": "/Users/greelogix/Sites/Taskat/database/migrations/0001_01_01_000002_create_jobs_table.php",
                            "relativePath": "/database/migrations/0001_01_01_000002_create_jobs_table.php",
                            "migrationName": "0001_01_01_000002_create_jobs_table",
                            "datePrefix": "0001_01_01",
                            "fullPrefix": "0001_01_01_000002",
                            "addedColumns": [
                                {
                                    "type": "bigInteger",
                                    "name": "id",
                                    "autoIncrement": true,
                                    "unsigned": true,
                                    "table": "jobs",
                                    "creatorMethod": "id"
                                },
                                {
                                    "type": "string",
                                    "name": "queue",
                                    "length": 255,
                                    "table": "jobs",
                                    "creatorMethod": "string",
                                    "index": true
                                },
                                {
                                    "type": "longText",
                                    "name": "payload",
                                    "table": "jobs",
                                    "creatorMethod": "longText"
                                },
                                {
                                    "type": "tinyInteger",
                                    "name": "attempts",
                                    "autoIncrement": false,
                                    "unsigned": true,
                                    "table": "jobs",
                                    "creatorMethod": "unsignedTinyInteger"
                                },
                                {
                                    "type": "integer",
                                    "name": "reserved_at",
                                    "autoIncrement": false,
                                    "unsigned": true,
                                    "table": "jobs",
                                    "creatorMethod": "unsignedInteger",
                                    "nullable": true
                                },
                                {
                                    "type": "integer",
                                    "name": "available_at",
                                    "autoIncrement": false,
                                    "unsigned": true,
                                    "table": "jobs",
                                    "creatorMethod": "unsignedInteger"
                                },
                                {
                                    "type": "integer",
                                    "name": "created_at",
                                    "autoIncrement": false,
                                    "unsigned": true,
                                    "table": "jobs",
                                    "creatorMethod": "unsignedInteger"
                                },
                                {
                                    "type": "string",
                                    "name": "id",
                                    "length": 255,
                                    "table": "job_batches",
                                    "creatorMethod": "string",
                                    "primary": true
                                },
                                {
                                    "type": "string",
                                    "name": "name",
                                    "length": 255,
                                    "table": "job_batches",
                                    "creatorMethod": "string"
                                },
                                {
                                    "type": "integer",
                                    "name": "total_jobs",
                                    "autoIncrement": false,
                                    "unsigned": false,
                                    "table": "job_batches",
                                    "creatorMethod": "integer"
                                },
                                {
                                    "type": "integer",
                                    "name": "pending_jobs",
                                    "autoIncrement": false,
                                    "unsigned": false,
                                    "table": "job_batches",
                                    "creatorMethod": "integer"
                                },
                                {
                                    "type": "integer",
                                    "name": "failed_jobs",
                                    "autoIncrement": false,
                                    "unsigned": false,
                                    "table": "job_batches",
                                    "creatorMethod": "integer"
                                },
                                {
                                    "type": "longText",
                                    "name": "failed_job_ids",
                                    "table": "job_batches",
                                    "creatorMethod": "longText"
                                },
                                {
                                    "type": "mediumText",
                                    "name": "options",
                                    "table": "job_batches",
                                    "creatorMethod": "mediumText",
                                    "nullable": true
                                },
                                {
                                    "type": "integer",
                                    "name": "cancelled_at",
                                    "autoIncrement": false,
                                    "unsigned": false,
                                    "table": "job_batches",
                                    "creatorMethod": "integer",
                                    "nullable": true
                                },
                                {
                                    "type": "integer",
                                    "name": "created_at",
                                    "autoIncrement": false,
                                    "unsigned": false,
                                    "table": "job_batches",
                                    "creatorMethod": "integer"
                                },
                                {
                                    "type": "integer",
                                    "name": "finished_at",
                                    "autoIncrement": false,
                                    "unsigned": false,
                                    "table": "job_batches",
                                    "creatorMethod": "integer",
                                    "nullable": true
                                },
                                {
                                    "type": "bigInteger",
                                    "name": "id",
                                    "autoIncrement": true,
                                    "unsigned": true,
                                    "table": "failed_jobs",
                                    "creatorMethod": "id"
                                },
                                {
                                    "type": "string",
                                    "name": "uuid",
                                    "length": 255,
                                    "table": "failed_jobs",
                                    "creatorMethod": "string",
                                    "unique": true
                                },
                                {
                                    "type": "text",
                                    "name": "connection",
                                    "table": "failed_jobs",
                                    "creatorMethod": "text"
                                },
                                {
                                    "type": "text",
                                    "name": "queue",
                                    "table": "failed_jobs",
                                    "creatorMethod": "text"
                                },
                                {
                                    "type": "longText",
                                    "name": "payload",
                                    "table": "failed_jobs",
                                    "creatorMethod": "longText"
                                },
                                {
                                    "type": "longText",
                                    "name": "exception",
                                    "table": "failed_jobs",
                                    "creatorMethod": "longText"
                                },
                                {
                                    "type": "timestamp",
                                    "name": "failed_at",
                                    "precision": 0,
                                    "table": "failed_jobs",
                                    "creatorMethod": "timestamp",
                                    "useCurrent": true
                                }
                            ],
                            "changedColumns": [],
                            "droppedColumns": [],
                            "renamedColumns": [],
                            "commands": [
                                {
                                    "name": "create",
                                    "table": "jobs"
                                },
                                {
                                    "name": "create",
                                    "table": "job_batches"
                                },
                                {
                                    "name": "create",
                                    "table": "failed_jobs"
                                }
                            ],
                            "createdTables": [
                                "jobs",
                                "job_batches",
                                "failed_jobs"
                            ],
                            "renamedTables": [],
                            "droppedTables": []
                        }
                    ]
                },
                "id": 6,
                "createdAt": "2025-01-24 12:02:52",
                "updatedAt": "2025-01-27 14:50:30",
                "positionX": 0,
                "positionY": 0,
                "sectionId": 2,
                "removed": false
            },
            "item_7": {
                "projectId": 1,
                "name": "job_batches",
                "migrations": [
                    {
                        "migration": "/Users/greelogix/Sites/Taskat/database/migrations/0001_01_01_000002_create_jobs_table.php",
                        "relativePath": "/database/migrations/0001_01_01_000002_create_jobs_table.php",
                        "migrationName": "0001_01_01_000002_create_jobs_table",
                        "datePrefix": "0001_01_01",
                        "fullPrefix": "0001_01_01_000002",
                        "addedColumns": [
                            {
                                "type": "bigInteger",
                                "name": "id",
                                "autoIncrement": true,
                                "unsigned": true,
                                "table": "jobs",
                                "creatorMethod": "id"
                            },
                            {
                                "type": "string",
                                "name": "queue",
                                "length": 255,
                                "table": "jobs",
                                "creatorMethod": "string",
                                "index": true
                            },
                            {
                                "type": "longText",
                                "name": "payload",
                                "table": "jobs",
                                "creatorMethod": "longText"
                            },
                            {
                                "type": "tinyInteger",
                                "name": "attempts",
                                "autoIncrement": false,
                                "unsigned": true,
                                "table": "jobs",
                                "creatorMethod": "unsignedTinyInteger"
                            },
                            {
                                "type": "integer",
                                "name": "reserved_at",
                                "autoIncrement": false,
                                "unsigned": true,
                                "table": "jobs",
                                "creatorMethod": "unsignedInteger",
                                "nullable": true
                            },
                            {
                                "type": "integer",
                                "name": "available_at",
                                "autoIncrement": false,
                                "unsigned": true,
                                "table": "jobs",
                                "creatorMethod": "unsignedInteger"
                            },
                            {
                                "type": "integer",
                                "name": "created_at",
                                "autoIncrement": false,
                                "unsigned": true,
                                "table": "jobs",
                                "creatorMethod": "unsignedInteger"
                            },
                            {
                                "type": "string",
                                "name": "id",
                                "length": 255,
                                "table": "job_batches",
                                "creatorMethod": "string",
                                "primary": true
                            },
                            {
                                "type": "string",
                                "name": "name",
                                "length": 255,
                                "table": "job_batches",
                                "creatorMethod": "string"
                            },
                            {
                                "type": "integer",
                                "name": "total_jobs",
                                "autoIncrement": false,
                                "unsigned": false,
                                "table": "job_batches",
                                "creatorMethod": "integer"
                            },
                            {
                                "type": "integer",
                                "name": "pending_jobs",
                                "autoIncrement": false,
                                "unsigned": false,
                                "table": "job_batches",
                                "creatorMethod": "integer"
                            },
                            {
                                "type": "integer",
                                "name": "failed_jobs",
                                "autoIncrement": false,
                                "unsigned": false,
                                "table": "job_batches",
                                "creatorMethod": "integer"
                            },
                            {
                                "type": "longText",
                                "name": "failed_job_ids",
                                "table": "job_batches",
                                "creatorMethod": "longText"
                            },
                            {
                                "type": "mediumText",
                                "name": "options",
                                "table": "job_batches",
                                "creatorMethod": "mediumText",
                                "nullable": true
                            },
                            {
                                "type": "integer",
                                "name": "cancelled_at",
                                "autoIncrement": false,
                                "unsigned": false,
                                "table": "job_batches",
                                "creatorMethod": "integer",
                                "nullable": true
                            },
                            {
                                "type": "integer",
                                "name": "created_at",
                                "autoIncrement": false,
                                "unsigned": false,
                                "table": "job_batches",
                                "creatorMethod": "integer"
                            },
                            {
                                "type": "integer",
                                "name": "finished_at",
                                "autoIncrement": false,
                                "unsigned": false,
                                "table": "job_batches",
                                "creatorMethod": "integer",
                                "nullable": true
                            },
                            {
                                "type": "bigInteger",
                                "name": "id",
                                "autoIncrement": true,
                                "unsigned": true,
                                "table": "failed_jobs",
                                "creatorMethod": "id"
                            },
                            {
                                "type": "string",
                                "name": "uuid",
                                "length": 255,
                                "table": "failed_jobs",
                                "creatorMethod": "string",
                                "unique": true
                            },
                            {
                                "type": "text",
                                "name": "connection",
                                "table": "failed_jobs",
                                "creatorMethod": "text"
                            },
                            {
                                "type": "text",
                                "name": "queue",
                                "table": "failed_jobs",
                                "creatorMethod": "text"
                            },
                            {
                                "type": "longText",
                                "name": "payload",
                                "table": "failed_jobs",
                                "creatorMethod": "longText"
                            },
                            {
                                "type": "longText",
                                "name": "exception",
                                "table": "failed_jobs",
                                "creatorMethod": "longText"
                            },
                            {
                                "type": "timestamp",
                                "name": "failed_at",
                                "precision": 0,
                                "table": "failed_jobs",
                                "creatorMethod": "timestamp",
                                "useCurrent": true
                            }
                        ],
                        "changedColumns": [],
                        "droppedColumns": [],
                        "renamedColumns": [],
                        "commands": [
                            {
                                "name": "create",
                                "table": "jobs"
                            },
                            {
                                "name": "create",
                                "table": "job_batches"
                            },
                            {
                                "name": "create",
                                "table": "failed_jobs"
                            }
                        ],
                        "createdTables": [
                            "jobs",
                            "job_batches",
                            "failed_jobs"
                        ],
                        "renamedTables": [],
                        "droppedTables": []
                    }
                ],
                "oldNames": [],
                "createdFromInterface": false,
                "labelColumnId": null,
                "schemaState": {
                    "name": "job_batches",
                    "oldNames": [],
                    "migrations": [
                        {
                            "migration": "/Users/greelogix/Sites/Taskat/database/migrations/0001_01_01_000002_create_jobs_table.php",
                            "relativePath": "/database/migrations/0001_01_01_000002_create_jobs_table.php",
                            "migrationName": "0001_01_01_000002_create_jobs_table",
                            "datePrefix": "0001_01_01",
                            "fullPrefix": "0001_01_01_000002",
                            "addedColumns": [
                                {
                                    "type": "bigInteger",
                                    "name": "id",
                                    "autoIncrement": true,
                                    "unsigned": true,
                                    "table": "jobs",
                                    "creatorMethod": "id"
                                },
                                {
                                    "type": "string",
                                    "name": "queue",
                                    "length": 255,
                                    "table": "jobs",
                                    "creatorMethod": "string",
                                    "index": true
                                },
                                {
                                    "type": "longText",
                                    "name": "payload",
                                    "table": "jobs",
                                    "creatorMethod": "longText"
                                },
                                {
                                    "type": "tinyInteger",
                                    "name": "attempts",
                                    "autoIncrement": false,
                                    "unsigned": true,
                                    "table": "jobs",
                                    "creatorMethod": "unsignedTinyInteger"
                                },
                                {
                                    "type": "integer",
                                    "name": "reserved_at",
                                    "autoIncrement": false,
                                    "unsigned": true,
                                    "table": "jobs",
                                    "creatorMethod": "unsignedInteger",
                                    "nullable": true
                                },
                                {
                                    "type": "integer",
                                    "name": "available_at",
                                    "autoIncrement": false,
                                    "unsigned": true,
                                    "table": "jobs",
                                    "creatorMethod": "unsignedInteger"
                                },
                                {
                                    "type": "integer",
                                    "name": "created_at",
                                    "autoIncrement": false,
                                    "unsigned": true,
                                    "table": "jobs",
                                    "creatorMethod": "unsignedInteger"
                                },
                                {
                                    "type": "string",
                                    "name": "id",
                                    "length": 255,
                                    "table": "job_batches",
                                    "creatorMethod": "string",
                                    "primary": true
                                },
                                {
                                    "type": "string",
                                    "name": "name",
                                    "length": 255,
                                    "table": "job_batches",
                                    "creatorMethod": "string"
                                },
                                {
                                    "type": "integer",
                                    "name": "total_jobs",
                                    "autoIncrement": false,
                                    "unsigned": false,
                                    "table": "job_batches",
                                    "creatorMethod": "integer"
                                },
                                {
                                    "type": "integer",
                                    "name": "pending_jobs",
                                    "autoIncrement": false,
                                    "unsigned": false,
                                    "table": "job_batches",
                                    "creatorMethod": "integer"
                                },
                                {
                                    "type": "integer",
                                    "name": "failed_jobs",
                                    "autoIncrement": false,
                                    "unsigned": false,
                                    "table": "job_batches",
                                    "creatorMethod": "integer"
                                },
                                {
                                    "type": "longText",
                                    "name": "failed_job_ids",
                                    "table": "job_batches",
                                    "creatorMethod": "longText"
                                },
                                {
                                    "type": "mediumText",
                                    "name": "options",
                                    "table": "job_batches",
                                    "creatorMethod": "mediumText",
                                    "nullable": true
                                },
                                {
                                    "type": "integer",
                                    "name": "cancelled_at",
                                    "autoIncrement": false,
                                    "unsigned": false,
                                    "table": "job_batches",
                                    "creatorMethod": "integer",
                                    "nullable": true
                                },
                                {
                                    "type": "integer",
                                    "name": "created_at",
                                    "autoIncrement": false,
                                    "unsigned": false,
                                    "table": "job_batches",
                                    "creatorMethod": "integer"
                                },
                                {
                                    "type": "integer",
                                    "name": "finished_at",
                                    "autoIncrement": false,
                                    "unsigned": false,
                                    "table": "job_batches",
                                    "creatorMethod": "integer",
                                    "nullable": true
                                },
                                {
                                    "type": "bigInteger",
                                    "name": "id",
                                    "autoIncrement": true,
                                    "unsigned": true,
                                    "table": "failed_jobs",
                                    "creatorMethod": "id"
                                },
                                {
                                    "type": "string",
                                    "name": "uuid",
                                    "length": 255,
                                    "table": "failed_jobs",
                                    "creatorMethod": "string",
                                    "unique": true
                                },
                                {
                                    "type": "text",
                                    "name": "connection",
                                    "table": "failed_jobs",
                                    "creatorMethod": "text"
                                },
                                {
                                    "type": "text",
                                    "name": "queue",
                                    "table": "failed_jobs",
                                    "creatorMethod": "text"
                                },
                                {
                                    "type": "longText",
                                    "name": "payload",
                                    "table": "failed_jobs",
                                    "creatorMethod": "longText"
                                },
                                {
                                    "type": "longText",
                                    "name": "exception",
                                    "table": "failed_jobs",
                                    "creatorMethod": "longText"
                                },
                                {
                                    "type": "timestamp",
                                    "name": "failed_at",
                                    "precision": 0,
                                    "table": "failed_jobs",
                                    "creatorMethod": "timestamp",
                                    "useCurrent": true
                                }
                            ],
                            "changedColumns": [],
                            "droppedColumns": [],
                            "renamedColumns": [],
                            "commands": [
                                {
                                    "name": "create",
                                    "table": "jobs"
                                },
                                {
                                    "name": "create",
                                    "table": "job_batches"
                                },
                                {
                                    "name": "create",
                                    "table": "failed_jobs"
                                }
                            ],
                            "createdTables": [
                                "jobs",
                                "job_batches",
                                "failed_jobs"
                            ],
                            "renamedTables": [],
                            "droppedTables": []
                        }
                    ]
                },
                "id": 7,
                "createdAt": "2025-01-24 12:02:52",
                "updatedAt": "2025-01-27 14:50:30",
                "positionX": 0,
                "positionY": 0,
                "sectionId": 2,
                "removed": false
            },
            "item_8": {
                "projectId": 1,
                "name": "failed_jobs",
                "migrations": [
                    {
                        "migration": "/Users/greelogix/Sites/Taskat/database/migrations/0001_01_01_000002_create_jobs_table.php",
                        "relativePath": "/database/migrations/0001_01_01_000002_create_jobs_table.php",
                        "migrationName": "0001_01_01_000002_create_jobs_table",
                        "datePrefix": "0001_01_01",
                        "fullPrefix": "0001_01_01_000002",
                        "addedColumns": [
                            {
                                "type": "bigInteger",
                                "name": "id",
                                "autoIncrement": true,
                                "unsigned": true,
                                "table": "jobs",
                                "creatorMethod": "id"
                            },
                            {
                                "type": "string",
                                "name": "queue",
                                "length": 255,
                                "table": "jobs",
                                "creatorMethod": "string",
                                "index": true
                            },
                            {
                                "type": "longText",
                                "name": "payload",
                                "table": "jobs",
                                "creatorMethod": "longText"
                            },
                            {
                                "type": "tinyInteger",
                                "name": "attempts",
                                "autoIncrement": false,
                                "unsigned": true,
                                "table": "jobs",
                                "creatorMethod": "unsignedTinyInteger"
                            },
                            {
                                "type": "integer",
                                "name": "reserved_at",
                                "autoIncrement": false,
                                "unsigned": true,
                                "table": "jobs",
                                "creatorMethod": "unsignedInteger",
                                "nullable": true
                            },
                            {
                                "type": "integer",
                                "name": "available_at",
                                "autoIncrement": false,
                                "unsigned": true,
                                "table": "jobs",
                                "creatorMethod": "unsignedInteger"
                            },
                            {
                                "type": "integer",
                                "name": "created_at",
                                "autoIncrement": false,
                                "unsigned": true,
                                "table": "jobs",
                                "creatorMethod": "unsignedInteger"
                            },
                            {
                                "type": "string",
                                "name": "id",
                                "length": 255,
                                "table": "job_batches",
                                "creatorMethod": "string",
                                "primary": true
                            },
                            {
                                "type": "string",
                                "name": "name",
                                "length": 255,
                                "table": "job_batches",
                                "creatorMethod": "string"
                            },
                            {
                                "type": "integer",
                                "name": "total_jobs",
                                "autoIncrement": false,
                                "unsigned": false,
                                "table": "job_batches",
                                "creatorMethod": "integer"
                            },
                            {
                                "type": "integer",
                                "name": "pending_jobs",
                                "autoIncrement": false,
                                "unsigned": false,
                                "table": "job_batches",
                                "creatorMethod": "integer"
                            },
                            {
                                "type": "integer",
                                "name": "failed_jobs",
                                "autoIncrement": false,
                                "unsigned": false,
                                "table": "job_batches",
                                "creatorMethod": "integer"
                            },
                            {
                                "type": "longText",
                                "name": "failed_job_ids",
                                "table": "job_batches",
                                "creatorMethod": "longText"
                            },
                            {
                                "type": "mediumText",
                                "name": "options",
                                "table": "job_batches",
                                "creatorMethod": "mediumText",
                                "nullable": true
                            },
                            {
                                "type": "integer",
                                "name": "cancelled_at",
                                "autoIncrement": false,
                                "unsigned": false,
                                "table": "job_batches",
                                "creatorMethod": "integer",
                                "nullable": true
                            },
                            {
                                "type": "integer",
                                "name": "created_at",
                                "autoIncrement": false,
                                "unsigned": false,
                                "table": "job_batches",
                                "creatorMethod": "integer"
                            },
                            {
                                "type": "integer",
                                "name": "finished_at",
                                "autoIncrement": false,
                                "unsigned": false,
                                "table": "job_batches",
                                "creatorMethod": "integer",
                                "nullable": true
                            },
                            {
                                "type": "bigInteger",
                                "name": "id",
                                "autoIncrement": true,
                                "unsigned": true,
                                "table": "failed_jobs",
                                "creatorMethod": "id"
                            },
                            {
                                "type": "string",
                                "name": "uuid",
                                "length": 255,
                                "table": "failed_jobs",
                                "creatorMethod": "string",
                                "unique": true
                            },
                            {
                                "type": "text",
                                "name": "connection",
                                "table": "failed_jobs",
                                "creatorMethod": "text"
                            },
                            {
                                "type": "text",
                                "name": "queue",
                                "table": "failed_jobs",
                                "creatorMethod": "text"
                            },
                            {
                                "type": "longText",
                                "name": "payload",
                                "table": "failed_jobs",
                                "creatorMethod": "longText"
                            },
                            {
                                "type": "longText",
                                "name": "exception",
                                "table": "failed_jobs",
                                "creatorMethod": "longText"
                            },
                            {
                                "type": "timestamp",
                                "name": "failed_at",
                                "precision": 0,
                                "table": "failed_jobs",
                                "creatorMethod": "timestamp",
                                "useCurrent": true
                            }
                        ],
                        "changedColumns": [],
                        "droppedColumns": [],
                        "renamedColumns": [],
                        "commands": [
                            {
                                "name": "create",
                                "table": "jobs"
                            },
                            {
                                "name": "create",
                                "table": "job_batches"
                            },
                            {
                                "name": "create",
                                "table": "failed_jobs"
                            }
                        ],
                        "createdTables": [
                            "jobs",
                            "job_batches",
                            "failed_jobs"
                        ],
                        "renamedTables": [],
                        "droppedTables": []
                    }
                ],
                "oldNames": [],
                "createdFromInterface": false,
                "labelColumnId": null,
                "schemaState": {
                    "name": "failed_jobs",
                    "oldNames": [],
                    "migrations": [
                        {
                            "migration": "/Users/greelogix/Sites/Taskat/database/migrations/0001_01_01_000002_create_jobs_table.php",
                            "relativePath": "/database/migrations/0001_01_01_000002_create_jobs_table.php",
                            "migrationName": "0001_01_01_000002_create_jobs_table",
                            "datePrefix": "0001_01_01",
                            "fullPrefix": "0001_01_01_000002",
                            "addedColumns": [
                                {
                                    "type": "bigInteger",
                                    "name": "id",
                                    "autoIncrement": true,
                                    "unsigned": true,
                                    "table": "jobs",
                                    "creatorMethod": "id"
                                },
                                {
                                    "type": "string",
                                    "name": "queue",
                                    "length": 255,
                                    "table": "jobs",
                                    "creatorMethod": "string",
                                    "index": true
                                },
                                {
                                    "type": "longText",
                                    "name": "payload",
                                    "table": "jobs",
                                    "creatorMethod": "longText"
                                },
                                {
                                    "type": "tinyInteger",
                                    "name": "attempts",
                                    "autoIncrement": false,
                                    "unsigned": true,
                                    "table": "jobs",
                                    "creatorMethod": "unsignedTinyInteger"
                                },
                                {
                                    "type": "integer",
                                    "name": "reserved_at",
                                    "autoIncrement": false,
                                    "unsigned": true,
                                    "table": "jobs",
                                    "creatorMethod": "unsignedInteger",
                                    "nullable": true
                                },
                                {
                                    "type": "integer",
                                    "name": "available_at",
                                    "autoIncrement": false,
                                    "unsigned": true,
                                    "table": "jobs",
                                    "creatorMethod": "unsignedInteger"
                                },
                                {
                                    "type": "integer",
                                    "name": "created_at",
                                    "autoIncrement": false,
                                    "unsigned": true,
                                    "table": "jobs",
                                    "creatorMethod": "unsignedInteger"
                                },
                                {
                                    "type": "string",
                                    "name": "id",
                                    "length": 255,
                                    "table": "job_batches",
                                    "creatorMethod": "string",
                                    "primary": true
                                },
                                {
                                    "type": "string",
                                    "name": "name",
                                    "length": 255,
                                    "table": "job_batches",
                                    "creatorMethod": "string"
                                },
                                {
                                    "type": "integer",
                                    "name": "total_jobs",
                                    "autoIncrement": false,
                                    "unsigned": false,
                                    "table": "job_batches",
                                    "creatorMethod": "integer"
                                },
                                {
                                    "type": "integer",
                                    "name": "pending_jobs",
                                    "autoIncrement": false,
                                    "unsigned": false,
                                    "table": "job_batches",
                                    "creatorMethod": "integer"
                                },
                                {
                                    "type": "integer",
                                    "name": "failed_jobs",
                                    "autoIncrement": false,
                                    "unsigned": false,
                                    "table": "job_batches",
                                    "creatorMethod": "integer"
                                },
                                {
                                    "type": "longText",
                                    "name": "failed_job_ids",
                                    "table": "job_batches",
                                    "creatorMethod": "longText"
                                },
                                {
                                    "type": "mediumText",
                                    "name": "options",
                                    "table": "job_batches",
                                    "creatorMethod": "mediumText",
                                    "nullable": true
                                },
                                {
                                    "type": "integer",
                                    "name": "cancelled_at",
                                    "autoIncrement": false,
                                    "unsigned": false,
                                    "table": "job_batches",
                                    "creatorMethod": "integer",
                                    "nullable": true
                                },
                                {
                                    "type": "integer",
                                    "name": "created_at",
                                    "autoIncrement": false,
                                    "unsigned": false,
                                    "table": "job_batches",
                                    "creatorMethod": "integer"
                                },
                                {
                                    "type": "integer",
                                    "name": "finished_at",
                                    "autoIncrement": false,
                                    "unsigned": false,
                                    "table": "job_batches",
                                    "creatorMethod": "integer",
                                    "nullable": true
                                },
                                {
                                    "type": "bigInteger",
                                    "name": "id",
                                    "autoIncrement": true,
                                    "unsigned": true,
                                    "table": "failed_jobs",
                                    "creatorMethod": "id"
                                },
                                {
                                    "type": "string",
                                    "name": "uuid",
                                    "length": 255,
                                    "table": "failed_jobs",
                                    "creatorMethod": "string",
                                    "unique": true
                                },
                                {
                                    "type": "text",
                                    "name": "connection",
                                    "table": "failed_jobs",
                                    "creatorMethod": "text"
                                },
                                {
                                    "type": "text",
                                    "name": "queue",
                                    "table": "failed_jobs",
                                    "creatorMethod": "text"
                                },
                                {
                                    "type": "longText",
                                    "name": "payload",
                                    "table": "failed_jobs",
                                    "creatorMethod": "longText"
                                },
                                {
                                    "type": "longText",
                                    "name": "exception",
                                    "table": "failed_jobs",
                                    "creatorMethod": "longText"
                                },
                                {
                                    "type": "timestamp",
                                    "name": "failed_at",
                                    "precision": 0,
                                    "table": "failed_jobs",
                                    "creatorMethod": "timestamp",
                                    "useCurrent": true
                                }
                            ],
                            "changedColumns": [],
                            "droppedColumns": [],
                            "renamedColumns": [],
                            "commands": [
                                {
                                    "name": "create",
                                    "table": "jobs"
                                },
                                {
                                    "name": "create",
                                    "table": "job_batches"
                                },
                                {
                                    "name": "create",
                                    "table": "failed_jobs"
                                }
                            ],
                            "createdTables": [
                                "jobs",
                                "job_batches",
                                "failed_jobs"
                            ],
                            "renamedTables": [],
                            "droppedTables": []
                        }
                    ]
                },
                "id": 8,
                "createdAt": "2025-01-24 12:02:52",
                "updatedAt": "2025-01-27 14:50:30",
                "positionX": 0,
                "positionY": 0,
                "sectionId": 2,
                "removed": false
            },
            "item_9": {
                "projectId": 1,
                "name": "services",
                "migrations": [
                    {
                        "migration": "/Users/greelogix/Sites/Taskat/database/migrations/2025_01_24_070728_create_services_table.php",
                        "relativePath": "/database/migrations/2025_01_24_070728_create_services_table.php",
                        "migrationName": "2025_01_24_070728_create_services_table",
                        "datePrefix": "2025_01_24",
                        "fullPrefix": "2025_01_24_070728",
                        "addedColumns": [
                            {
                                "type": "bigInteger",
                                "name": "id",
                                "autoIncrement": true,
                                "unsigned": true,
                                "table": "services",
                                "creatorMethod": "id"
                            },
                            {
                                "type": "string",
                                "name": "title",
                                "length": 255,
                                "table": "services",
                                "creatorMethod": "string",
                                "unique": true
                            },
                            {
                                "type": "text",
                                "name": "description",
                                "table": "services",
                                "creatorMethod": "text",
                                "nullable": true
                            },
                            {
                                "type": "string",
                                "name": "image",
                                "length": 255,
                                "table": "services",
                                "creatorMethod": "string",
                                "nullable": true
                            },
                            {
                                "type": "timestamp",
                                "name": "created_at",
                                "precision": 0,
                                "table": "services",
                                "creatorMethod": "timestamp",
                                "nullable": true
                            },
                            {
                                "type": "timestamp",
                                "name": "updated_at",
                                "precision": 0,
                                "table": "services",
                                "creatorMethod": "timestamp",
                                "nullable": true
                            }
                        ],
                        "changedColumns": [],
                        "droppedColumns": [],
                        "renamedColumns": [],
                        "commands": [
                            {
                                "name": "create",
                                "table": "services"
                            }
                        ],
                        "createdTables": [
                            "services"
                        ],
                        "renamedTables": [],
                        "droppedTables": []
                    }
                ],
                "oldNames": [],
                "createdFromInterface": false,
                "labelColumnId": null,
                "schemaState": {
                    "name": "services",
                    "oldNames": [],
                    "migrations": [
                        {
                            "migration": "/Users/greelogix/Sites/Taskat/database/migrations/2025_01_24_070728_create_services_table.php",
                            "relativePath": "/database/migrations/2025_01_24_070728_create_services_table.php",
                            "migrationName": "2025_01_24_070728_create_services_table",
                            "datePrefix": "2025_01_24",
                            "fullPrefix": "2025_01_24_070728",
                            "addedColumns": [
                                {
                                    "type": "bigInteger",
                                    "name": "id",
                                    "autoIncrement": true,
                                    "unsigned": true,
                                    "table": "services",
                                    "creatorMethod": "id"
                                },
                                {
                                    "type": "string",
                                    "name": "title",
                                    "length": 255,
                                    "table": "services",
                                    "creatorMethod": "string",
                                    "unique": true
                                },
                                {
                                    "type": "text",
                                    "name": "description",
                                    "table": "services",
                                    "creatorMethod": "text",
                                    "nullable": true
                                },
                                {
                                    "type": "string",
                                    "name": "image",
                                    "length": 255,
                                    "table": "services",
                                    "creatorMethod": "string",
                                    "nullable": true
                                },
                                {
                                    "type": "timestamp",
                                    "name": "created_at",
                                    "precision": 0,
                                    "table": "services",
                                    "creatorMethod": "timestamp",
                                    "nullable": true
                                },
                                {
                                    "type": "timestamp",
                                    "name": "updated_at",
                                    "precision": 0,
                                    "table": "services",
                                    "creatorMethod": "timestamp",
                                    "nullable": true
                                }
                            ],
                            "changedColumns": [],
                            "droppedColumns": [],
                            "renamedColumns": [],
                            "commands": [
                                {
                                    "name": "create",
                                    "table": "services"
                                }
                            ],
                            "createdTables": [
                                "services"
                            ],
                            "renamedTables": [],
                            "droppedTables": []
                        }
                    ]
                },
                "sectionId": 1,
                "id": 9,
                "createdAt": "2025-01-24 12:23:53",
                "updatedAt": "2025-01-27 14:50:30",
                "positionX": "-999.5",
                "positionY": "-730.5",
                "removed": false
            },
            "item_10": {
                "projectId": 1,
                "sectionId": 1,
                "name": "sub_services",
                "createdFromInterface": false,
                "id": 10,
                "createdAt": "2025-01-24 12:52:51",
                "updatedAt": "2025-01-27 14:50:30",
                "positionX": "-524.25",
                "positionY": "-776.75",
                "removed": false,
                "migrations": [
                    {
                        "migration": "/Users/greelogix/Sites/Taskat/database/migrations/2025_01_24_075755_001_create_sub_services_table.php",
                        "relativePath": "/database/migrations/2025_01_24_075755_001_create_sub_services_table.php",
                        "migrationName": "2025_01_24_075755_001_create_sub_services_table",
                        "datePrefix": "2025_01_24",
                        "fullPrefix": "2025_01_24_075755",
                        "addedColumns": [
                            {
                                "type": "bigInteger",
                                "name": "id",
                                "autoIncrement": true,
                                "unsigned": true,
                                "table": "sub_services",
                                "creatorMethod": "id"
                            },
                            {
                                "type": "bigInteger",
                                "name": "service_id",
                                "autoIncrement": false,
                                "unsigned": true,
                                "table": "sub_services",
                                "creatorMethod": "unsignedBigInteger"
                            },
                            {
                                "type": "string",
                                "name": "name",
                                "length": 255,
                                "table": "sub_services",
                                "creatorMethod": "string"
                            },
                            {
                                "type": "string",
                                "name": "description",
                                "length": 255,
                                "table": "sub_services",
                                "creatorMethod": "string",
                                "nullable": true
                            },
                            {
                                "type": "string",
                                "name": "image",
                                "length": 255,
                                "table": "sub_services",
                                "creatorMethod": "string",
                                "nullable": true
                            },
                            {
                                "type": "enum",
                                "name": "status",
                                "allowed": [
                                    "Active",
                                    "Inactive"
                                ],
                                "table": "sub_services",
                                "creatorMethod": "enum",
                                "default": "Active",
                                "nullable": true
                            },
                            {
                                "type": "double",
                                "name": "price",
                                "table": "sub_services",
                                "creatorMethod": "double"
                            },
                            {
                                "type": "boolean",
                                "name": "has_template",
                                "table": "sub_services",
                                "creatorMethod": "boolean",
                                "default": 0
                            },
                            {
                                "type": "timestamp",
                                "name": "created_at",
                                "precision": 0,
                                "table": "sub_services",
                                "creatorMethod": "timestamp",
                                "nullable": true
                            },
                            {
                                "type": "timestamp",
                                "name": "updated_at",
                                "precision": 0,
                                "table": "sub_services",
                                "creatorMethod": "timestamp",
                                "nullable": true
                            }
                        ],
                        "changedColumns": [],
                        "droppedColumns": [],
                        "renamedColumns": [],
                        "commands": [
                            {
                                "name": "create",
                                "table": "sub_services"
                            },
                            {
                                "name": "foreign",
                                "index": "sub_services_service_id_foreign",
                                "columns": [
                                    "service_id"
                                ],
                                "algorithm": null,
                                "references": "id",
                                "on": "services",
                                "onDelete": "cascade",
                                "onUpdate": "cascade",
                                "table": "sub_services"
                            }
                        ],
                        "createdTables": [
                            "sub_services"
                        ],
                        "renamedTables": [],
                        "droppedTables": []
                    }
                ],
                "oldNames": [],
                "labelColumnId": null,
                "schemaState": {
                    "name": "sub_services",
                    "oldNames": [],
                    "migrations": [
                        {
                            "migration": "/Users/greelogix/Sites/Taskat/database/migrations/2025_01_24_075755_001_create_sub_services_table.php",
                            "relativePath": "/database/migrations/2025_01_24_075755_001_create_sub_services_table.php",
                            "migrationName": "2025_01_24_075755_001_create_sub_services_table",
                            "datePrefix": "2025_01_24",
                            "fullPrefix": "2025_01_24_075755",
                            "addedColumns": [
                                {
                                    "type": "bigInteger",
                                    "name": "id",
                                    "autoIncrement": true,
                                    "unsigned": true,
                                    "table": "sub_services",
                                    "creatorMethod": "id"
                                },
                                {
                                    "type": "bigInteger",
                                    "name": "service_id",
                                    "autoIncrement": false,
                                    "unsigned": true,
                                    "table": "sub_services",
                                    "creatorMethod": "unsignedBigInteger"
                                },
                                {
                                    "type": "string",
                                    "name": "name",
                                    "length": 255,
                                    "table": "sub_services",
                                    "creatorMethod": "string"
                                },
                                {
                                    "type": "string",
                                    "name": "description",
                                    "length": 255,
                                    "table": "sub_services",
                                    "creatorMethod": "string",
                                    "nullable": true
                                },
                                {
                                    "type": "string",
                                    "name": "image",
                                    "length": 255,
                                    "table": "sub_services",
                                    "creatorMethod": "string",
                                    "nullable": true
                                },
                                {
                                    "type": "enum",
                                    "name": "status",
                                    "allowed": [
                                        "Active",
                                        "Inactive"
                                    ],
                                    "table": "sub_services",
                                    "creatorMethod": "enum",
                                    "default": "Active",
                                    "nullable": true
                                },
                                {
                                    "type": "double",
                                    "name": "price",
                                    "table": "sub_services",
                                    "creatorMethod": "double"
                                },
                                {
                                    "type": "boolean",
                                    "name": "has_template",
                                    "table": "sub_services",
                                    "creatorMethod": "boolean",
                                    "default": 0
                                },
                                {
                                    "type": "timestamp",
                                    "name": "created_at",
                                    "precision": 0,
                                    "table": "sub_services",
                                    "creatorMethod": "timestamp",
                                    "nullable": true
                                },
                                {
                                    "type": "timestamp",
                                    "name": "updated_at",
                                    "precision": 0,
                                    "table": "sub_services",
                                    "creatorMethod": "timestamp",
                                    "nullable": true
                                }
                            ],
                            "changedColumns": [],
                            "droppedColumns": [],
                            "renamedColumns": [],
                            "commands": [
                                {
                                    "name": "create",
                                    "table": "sub_services"
                                },
                                {
                                    "name": "foreign",
                                    "index": "sub_services_service_id_foreign",
                                    "columns": [
                                        "service_id"
                                    ],
                                    "algorithm": null,
                                    "references": "id",
                                    "on": "services",
                                    "onDelete": "cascade",
                                    "onUpdate": "cascade",
                                    "table": "sub_services"
                                }
                            ],
                            "createdTables": [
                                "sub_services"
                            ],
                            "renamedTables": [],
                            "droppedTables": []
                        }
                    ]
                }
            },
            "item_12": {
                "projectId": 1,
                "sectionId": 1,
                "name": "user_cards",
                "createdFromInterface": false,
                "id": 12,
                "createdAt": "2025-01-24 14:46:30",
                "updatedAt": "2025-01-27 14:50:30",
                "positionX": "-1331",
                "positionY": "-181",
                "removed": false,
                "migrations": [
                    {
                        "migration": "/Users/greelogix/Sites/Taskat/database/migrations/2025_01_24_092342_001_create_user_cards_table.php",
                        "relativePath": "/database/migrations/2025_01_24_092342_001_create_user_cards_table.php",
                        "migrationName": "2025_01_24_092342_001_create_user_cards_table",
                        "datePrefix": "2025_01_24",
                        "fullPrefix": "2025_01_24_092342",
                        "addedColumns": [
                            {
                                "type": "bigInteger",
                                "name": "id",
                                "autoIncrement": true,
                                "unsigned": true,
                                "table": "user_cards",
                                "creatorMethod": "id"
                            },
                            {
                                "type": "bigInteger",
                                "name": "user_id",
                                "autoIncrement": false,
                                "unsigned": true,
                                "table": "user_cards",
                                "creatorMethod": "unsignedBigInteger"
                            },
                            {
                                "type": "string",
                                "name": "holder_name",
                                "length": 255,
                                "table": "user_cards",
                                "creatorMethod": "string"
                            },
                            {
                                "type": "text",
                                "name": "card_number",
                                "table": "user_cards",
                                "creatorMethod": "text",
                                "nullable": true
                            },
                            {
                                "type": "string",
                                "name": "valid_date",
                                "length": 255,
                                "table": "user_cards",
                                "creatorMethod": "string",
                                "nullable": true
                            },
                            {
                                "type": "enum",
                                "name": "default",
                                "allowed": [
                                    "yes",
                                    "no"
                                ],
                                "table": "user_cards",
                                "creatorMethod": "enum"
                            },
                            {
                                "type": "timestamp",
                                "name": "created_at",
                                "precision": 0,
                                "table": "user_cards",
                                "creatorMethod": "timestamp",
                                "nullable": true
                            },
                            {
                                "type": "timestamp",
                                "name": "updated_at",
                                "precision": 0,
                                "table": "user_cards",
                                "creatorMethod": "timestamp",
                                "nullable": true
                            }
                        ],
                        "changedColumns": [],
                        "droppedColumns": [],
                        "renamedColumns": [],
                        "commands": [
                            {
                                "name": "create",
                                "table": "user_cards"
                            },
                            {
                                "name": "foreign",
                                "index": "user_cards_user_id_foreign",
                                "columns": [
                                    "user_id"
                                ],
                                "algorithm": null,
                                "references": "id",
                                "on": "users",
                                "onDelete": "cascade",
                                "onUpdate": "cascade",
                                "table": "user_cards"
                            }
                        ],
                        "createdTables": [
                            "user_cards"
                        ],
                        "renamedTables": [],
                        "droppedTables": []
                    }
                ],
                "oldNames": [],
                "labelColumnId": null,
                "schemaState": {
                    "name": "user_cards",
                    "oldNames": [],
                    "migrations": [
                        {
                            "migration": "/Users/greelogix/Sites/Taskat/database/migrations/2025_01_24_092342_001_create_user_cards_table.php",
                            "relativePath": "/database/migrations/2025_01_24_092342_001_create_user_cards_table.php",
                            "migrationName": "2025_01_24_092342_001_create_user_cards_table",
                            "datePrefix": "2025_01_24",
                            "fullPrefix": "2025_01_24_092342",
                            "addedColumns": [
                                {
                                    "type": "bigInteger",
                                    "name": "id",
                                    "autoIncrement": true,
                                    "unsigned": true,
                                    "table": "user_cards",
                                    "creatorMethod": "id"
                                },
                                {
                                    "type": "bigInteger",
                                    "name": "user_id",
                                    "autoIncrement": false,
                                    "unsigned": true,
                                    "table": "user_cards",
                                    "creatorMethod": "unsignedBigInteger"
                                },
                                {
                                    "type": "string",
                                    "name": "holder_name",
                                    "length": 255,
                                    "table": "user_cards",
                                    "creatorMethod": "string"
                                },
                                {
                                    "type": "text",
                                    "name": "card_number",
                                    "table": "user_cards",
                                    "creatorMethod": "text",
                                    "nullable": true
                                },
                                {
                                    "type": "string",
                                    "name": "valid_date",
                                    "length": 255,
                                    "table": "user_cards",
                                    "creatorMethod": "string",
                                    "nullable": true
                                },
                                {
                                    "type": "enum",
                                    "name": "default",
                                    "allowed": [
                                        "yes",
                                        "no"
                                    ],
                                    "table": "user_cards",
                                    "creatorMethod": "enum"
                                },
                                {
                                    "type": "timestamp",
                                    "name": "created_at",
                                    "precision": 0,
                                    "table": "user_cards",
                                    "creatorMethod": "timestamp",
                                    "nullable": true
                                },
                                {
                                    "type": "timestamp",
                                    "name": "updated_at",
                                    "precision": 0,
                                    "table": "user_cards",
                                    "creatorMethod": "timestamp",
                                    "nullable": true
                                }
                            ],
                            "changedColumns": [],
                            "droppedColumns": [],
                            "renamedColumns": [],
                            "commands": [
                                {
                                    "name": "create",
                                    "table": "user_cards"
                                },
                                {
                                    "name": "foreign",
                                    "index": "user_cards_user_id_foreign",
                                    "columns": [
                                        "user_id"
                                    ],
                                    "algorithm": null,
                                    "references": "id",
                                    "on": "users",
                                    "onDelete": "cascade",
                                    "onUpdate": "cascade",
                                    "table": "user_cards"
                                }
                            ],
                            "createdTables": [
                                "user_cards"
                            ],
                            "renamedTables": [],
                            "droppedTables": []
                        }
                    ]
                }
            },
            "item_15": {
                "projectId": 1,
                "sectionId": 1,
                "name": "sub_service_templates",
                "createdFromInterface": false,
                "id": 15,
                "createdAt": "2025-01-24 15:25:29",
                "updatedAt": "2025-01-27 14:50:30",
                "positionX": "-197",
                "positionY": "-168.25",
                "removed": false,
                "migrations": [
                    {
                        "migration": "/Users/greelogix/Sites/Taskat/database/migrations/2025_01_24_102917_001_create_sub_service_templates_table.php",
                        "relativePath": "/database/migrations/2025_01_24_102917_001_create_sub_service_templates_table.php",
                        "migrationName": "2025_01_24_102917_001_create_sub_service_templates_table",
                        "datePrefix": "2025_01_24",
                        "fullPrefix": "2025_01_24_102917",
                        "addedColumns": [
                            {
                                "type": "bigInteger",
                                "name": "id",
                                "autoIncrement": true,
                                "unsigned": true,
                                "table": "sub_service_templates",
                                "creatorMethod": "id"
                            },
                            {
                                "type": "bigInteger",
                                "name": "sub_service_id",
                                "autoIncrement": false,
                                "unsigned": true,
                                "table": "sub_service_templates",
                                "creatorMethod": "unsignedBigInteger"
                            },
                            {
                                "type": "string",
                                "name": "name",
                                "length": 255,
                                "table": "sub_service_templates",
                                "creatorMethod": "string"
                            },
                            {
                                "type": "text",
                                "name": "description",
                                "table": "sub_service_templates",
                                "creatorMethod": "text",
                                "nullable": true
                            },
                            {
                                "type": "string",
                                "name": "image",
                                "length": 255,
                                "table": "sub_service_templates",
                                "creatorMethod": "string",
                                "nullable": true
                            },
                            {
                                "type": "string",
                                "name": "url",
                                "length": 255,
                                "table": "sub_service_templates",
                                "creatorMethod": "string",
                                "nullable": true
                            },
                            {
                                "type": "enum",
                                "name": "status",
                                "allowed": [
                                    "Active",
                                    "Inactive"
                                ],
                                "table": "sub_service_templates",
                                "creatorMethod": "enum",
                                "default": "Active"
                            },
                            {
                                "type": "timestamp",
                                "name": "created_at",
                                "precision": 0,
                                "table": "sub_service_templates",
                                "creatorMethod": "timestamp",
                                "nullable": true
                            },
                            {
                                "type": "timestamp",
                                "name": "updated_at",
                                "precision": 0,
                                "table": "sub_service_templates",
                                "creatorMethod": "timestamp",
                                "nullable": true
                            }
                        ],
                        "changedColumns": [],
                        "droppedColumns": [],
                        "renamedColumns": [],
                        "commands": [
                            {
                                "name": "create",
                                "table": "sub_service_templates"
                            },
                            {
                                "name": "foreign",
                                "index": "sub_service_templates_sub_service_id_foreign",
                                "columns": [
                                    "sub_service_id"
                                ],
                                "algorithm": null,
                                "references": "id",
                                "on": "sub_services",
                                "onDelete": "cascade",
                                "onUpdate": "cascade",
                                "table": "sub_service_templates"
                            }
                        ],
                        "createdTables": [
                            "sub_service_templates"
                        ],
                        "renamedTables": [],
                        "droppedTables": []
                    }
                ],
                "oldNames": [],
                "labelColumnId": null,
                "schemaState": {
                    "name": "sub_service_templates",
                    "oldNames": [],
                    "migrations": [
                        {
                            "migration": "/Users/greelogix/Sites/Taskat/database/migrations/2025_01_24_102917_001_create_sub_service_templates_table.php",
                            "relativePath": "/database/migrations/2025_01_24_102917_001_create_sub_service_templates_table.php",
                            "migrationName": "2025_01_24_102917_001_create_sub_service_templates_table",
                            "datePrefix": "2025_01_24",
                            "fullPrefix": "2025_01_24_102917",
                            "addedColumns": [
                                {
                                    "type": "bigInteger",
                                    "name": "id",
                                    "autoIncrement": true,
                                    "unsigned": true,
                                    "table": "sub_service_templates",
                                    "creatorMethod": "id"
                                },
                                {
                                    "type": "bigInteger",
                                    "name": "sub_service_id",
                                    "autoIncrement": false,
                                    "unsigned": true,
                                    "table": "sub_service_templates",
                                    "creatorMethod": "unsignedBigInteger"
                                },
                                {
                                    "type": "string",
                                    "name": "name",
                                    "length": 255,
                                    "table": "sub_service_templates",
                                    "creatorMethod": "string"
                                },
                                {
                                    "type": "text",
                                    "name": "description",
                                    "table": "sub_service_templates",
                                    "creatorMethod": "text",
                                    "nullable": true
                                },
                                {
                                    "type": "string",
                                    "name": "image",
                                    "length": 255,
                                    "table": "sub_service_templates",
                                    "creatorMethod": "string",
                                    "nullable": true
                                },
                                {
                                    "type": "string",
                                    "name": "url",
                                    "length": 255,
                                    "table": "sub_service_templates",
                                    "creatorMethod": "string",
                                    "nullable": true
                                },
                                {
                                    "type": "enum",
                                    "name": "status",
                                    "allowed": [
                                        "Active",
                                        "Inactive"
                                    ],
                                    "table": "sub_service_templates",
                                    "creatorMethod": "enum",
                                    "default": "Active"
                                },
                                {
                                    "type": "timestamp",
                                    "name": "created_at",
                                    "precision": 0,
                                    "table": "sub_service_templates",
                                    "creatorMethod": "timestamp",
                                    "nullable": true
                                },
                                {
                                    "type": "timestamp",
                                    "name": "updated_at",
                                    "precision": 0,
                                    "table": "sub_service_templates",
                                    "creatorMethod": "timestamp",
                                    "nullable": true
                                }
                            ],
                            "changedColumns": [],
                            "droppedColumns": [],
                            "renamedColumns": [],
                            "commands": [
                                {
                                    "name": "create",
                                    "table": "sub_service_templates"
                                },
                                {
                                    "name": "foreign",
                                    "index": "sub_service_templates_sub_service_id_foreign",
                                    "columns": [
                                        "sub_service_id"
                                    ],
                                    "algorithm": null,
                                    "references": "id",
                                    "on": "sub_services",
                                    "onDelete": "cascade",
                                    "onUpdate": "cascade",
                                    "table": "sub_service_templates"
                                }
                            ],
                            "createdTables": [
                                "sub_service_templates"
                            ],
                            "renamedTables": [],
                            "droppedTables": []
                        }
                    ]
                }
            },
            "item_16": {
                "projectId": 1,
                "name": "delivery_days",
                "migrations": [
                    {
                        "migration": "/Users/greelogix/Sites/Taskat/database/migrations/2025_01_24_102022_001_create_delivery_days_table.php",
                        "relativePath": "/database/migrations/2025_01_24_102022_001_create_delivery_days_table.php",
                        "migrationName": "2025_01_24_102022_001_create_delivery_days_table",
                        "datePrefix": "2025_01_24",
                        "fullPrefix": "2025_01_24_102022",
                        "addedColumns": [
                            {
                                "type": "bigInteger",
                                "name": "id",
                                "autoIncrement": true,
                                "unsigned": true,
                                "table": "delivery_days",
                                "creatorMethod": "id"
                            },
                            {
                                "type": "bigInteger",
                                "name": "sub_service_id",
                                "autoIncrement": false,
                                "unsigned": true,
                                "table": "delivery_days",
                                "creatorMethod": "unsignedBigInteger"
                            },
                            {
                                "type": "string",
                                "name": "name",
                                "length": 255,
                                "table": "delivery_days",
                                "creatorMethod": "string"
                            },
                            {
                                "type": "text",
                                "name": "description",
                                "table": "delivery_days",
                                "creatorMethod": "text",
                                "nullable": true
                            },
                            {
                                "type": "double",
                                "name": "price",
                                "table": "delivery_days",
                                "creatorMethod": "double",
                                "nullable": true
                            },
                            {
                                "type": "enum",
                                "name": "status",
                                "allowed": [
                                    "Active",
                                    "Inactive"
                                ],
                                "table": "delivery_days",
                                "creatorMethod": "enum",
                                "default": "Active"
                            },
                            {
                                "type": "timestamp",
                                "name": "created_at",
                                "precision": 0,
                                "table": "delivery_days",
                                "creatorMethod": "timestamp",
                                "nullable": true
                            },
                            {
                                "type": "timestamp",
                                "name": "updated_at",
                                "precision": 0,
                                "table": "delivery_days",
                                "creatorMethod": "timestamp",
                                "nullable": true
                            }
                        ],
                        "changedColumns": [],
                        "droppedColumns": [],
                        "renamedColumns": [],
                        "commands": [
                            {
                                "name": "create",
                                "table": "delivery_days"
                            },
                            {
                                "name": "foreign",
                                "index": "delivery_days_sub_service_id_foreign",
                                "columns": [
                                    "sub_service_id"
                                ],
                                "algorithm": null,
                                "references": "id",
                                "on": "sub_services",
                                "onDelete": "cascade",
                                "onUpdate": "cascade",
                                "table": "delivery_days"
                            }
                        ],
                        "createdTables": [
                            "delivery_days"
                        ],
                        "renamedTables": [],
                        "droppedTables": []
                    }
                ],
                "oldNames": [],
                "createdFromInterface": false,
                "labelColumnId": null,
                "schemaState": {
                    "name": "delivery_days",
                    "oldNames": [],
                    "migrations": [
                        {
                            "migration": "/Users/greelogix/Sites/Taskat/database/migrations/2025_01_24_102022_001_create_delivery_days_table.php",
                            "relativePath": "/database/migrations/2025_01_24_102022_001_create_delivery_days_table.php",
                            "migrationName": "2025_01_24_102022_001_create_delivery_days_table",
                            "datePrefix": "2025_01_24",
                            "fullPrefix": "2025_01_24_102022",
                            "addedColumns": [
                                {
                                    "type": "bigInteger",
                                    "name": "id",
                                    "autoIncrement": true,
                                    "unsigned": true,
                                    "table": "delivery_days",
                                    "creatorMethod": "id"
                                },
                                {
                                    "type": "bigInteger",
                                    "name": "sub_service_id",
                                    "autoIncrement": false,
                                    "unsigned": true,
                                    "table": "delivery_days",
                                    "creatorMethod": "unsignedBigInteger"
                                },
                                {
                                    "type": "string",
                                    "name": "name",
                                    "length": 255,
                                    "table": "delivery_days",
                                    "creatorMethod": "string"
                                },
                                {
                                    "type": "text",
                                    "name": "description",
                                    "table": "delivery_days",
                                    "creatorMethod": "text",
                                    "nullable": true
                                },
                                {
                                    "type": "double",
                                    "name": "price",
                                    "table": "delivery_days",
                                    "creatorMethod": "double",
                                    "nullable": true
                                },
                                {
                                    "type": "enum",
                                    "name": "status",
                                    "allowed": [
                                        "Active",
                                        "Inactive"
                                    ],
                                    "table": "delivery_days",
                                    "creatorMethod": "enum",
                                    "default": "Active"
                                },
                                {
                                    "type": "timestamp",
                                    "name": "created_at",
                                    "precision": 0,
                                    "table": "delivery_days",
                                    "creatorMethod": "timestamp",
                                    "nullable": true
                                },
                                {
                                    "type": "timestamp",
                                    "name": "updated_at",
                                    "precision": 0,
                                    "table": "delivery_days",
                                    "creatorMethod": "timestamp",
                                    "nullable": true
                                }
                            ],
                            "changedColumns": [],
                            "droppedColumns": [],
                            "renamedColumns": [],
                            "commands": [
                                {
                                    "name": "create",
                                    "table": "delivery_days"
                                },
                                {
                                    "name": "foreign",
                                    "index": "delivery_days_sub_service_id_foreign",
                                    "columns": [
                                        "sub_service_id"
                                    ],
                                    "algorithm": null,
                                    "references": "id",
                                    "on": "sub_services",
                                    "onDelete": "cascade",
                                    "onUpdate": "cascade",
                                    "table": "delivery_days"
                                }
                            ],
                            "createdTables": [
                                "delivery_days"
                            ],
                            "renamedTables": [],
                            "droppedTables": []
                        }
                    ]
                },
                "sectionId": 1,
                "id": 16,
                "createdAt": "2025-01-24 15:32:11",
                "updatedAt": "2025-01-27 14:50:30",
                "positionX": "-837.5",
                "positionY": "-182.5",
                "removed": false
            },
            "item_17": {
                "projectId": 1,
                "sectionId": 1,
                "name": "content_category",
                "createdFromInterface": false,
                "id": 17,
                "createdAt": "2025-01-24 16:46:39",
                "updatedAt": "2025-01-27 14:50:30",
                "positionX": "-1688.25",
                "positionY": "-189.5",
                "removed": false,
                "migrations": [
                    {
                        "migration": "/Users/greelogix/Sites/Taskat/database/migrations/2025_01_24_115051_001_create_content_category_table.php",
                        "relativePath": "/database/migrations/2025_01_24_115051_001_create_content_category_table.php",
                        "migrationName": "2025_01_24_115051_001_create_content_category_table",
                        "datePrefix": "2025_01_24",
                        "fullPrefix": "2025_01_24_115051",
                        "addedColumns": [
                            {
                                "type": "bigInteger",
                                "name": "id",
                                "autoIncrement": true,
                                "unsigned": true,
                                "table": "content_category",
                                "creatorMethod": "id"
                            },
                            {
                                "type": "string",
                                "name": "name",
                                "length": 255,
                                "table": "content_category",
                                "creatorMethod": "string"
                            },
                            {
                                "type": "text",
                                "name": "decription",
                                "table": "content_category",
                                "creatorMethod": "text"
                            },
                            {
                                "type": "enum",
                                "name": "status",
                                "allowed": [
                                    "Active",
                                    "Inactive"
                                ],
                                "table": "content_category",
                                "creatorMethod": "enum",
                                "default": "Active"
                            },
                            {
                                "type": "timestamp",
                                "name": "created_at",
                                "precision": 0,
                                "table": "content_category",
                                "creatorMethod": "timestamp",
                                "nullable": true
                            },
                            {
                                "type": "timestamp",
                                "name": "updated_at",
                                "precision": 0,
                                "table": "content_category",
                                "creatorMethod": "timestamp",
                                "nullable": true
                            }
                        ],
                        "changedColumns": [],
                        "droppedColumns": [],
                        "renamedColumns": [],
                        "commands": [
                            {
                                "name": "create",
                                "table": "content_category"
                            }
                        ],
                        "createdTables": [
                            "content_category"
                        ],
                        "renamedTables": [],
                        "droppedTables": []
                    }
                ],
                "oldNames": [],
                "labelColumnId": null,
                "schemaState": {
                    "name": "content_category",
                    "oldNames": [],
                    "migrations": [
                        {
                            "migration": "/Users/greelogix/Sites/Taskat/database/migrations/2025_01_24_115051_001_create_content_category_table.php",
                            "relativePath": "/database/migrations/2025_01_24_115051_001_create_content_category_table.php",
                            "migrationName": "2025_01_24_115051_001_create_content_category_table",
                            "datePrefix": "2025_01_24",
                            "fullPrefix": "2025_01_24_115051",
                            "addedColumns": [
                                {
                                    "type": "bigInteger",
                                    "name": "id",
                                    "autoIncrement": true,
                                    "unsigned": true,
                                    "table": "content_category",
                                    "creatorMethod": "id"
                                },
                                {
                                    "type": "string",
                                    "name": "name",
                                    "length": 255,
                                    "table": "content_category",
                                    "creatorMethod": "string"
                                },
                                {
                                    "type": "text",
                                    "name": "decription",
                                    "table": "content_category",
                                    "creatorMethod": "text"
                                },
                                {
                                    "type": "enum",
                                    "name": "status",
                                    "allowed": [
                                        "Active",
                                        "Inactive"
                                    ],
                                    "table": "content_category",
                                    "creatorMethod": "enum",
                                    "default": "Active"
                                },
                                {
                                    "type": "timestamp",
                                    "name": "created_at",
                                    "precision": 0,
                                    "table": "content_category",
                                    "creatorMethod": "timestamp",
                                    "nullable": true
                                },
                                {
                                    "type": "timestamp",
                                    "name": "updated_at",
                                    "precision": 0,
                                    "table": "content_category",
                                    "creatorMethod": "timestamp",
                                    "nullable": true
                                }
                            ],
                            "changedColumns": [],
                            "droppedColumns": [],
                            "renamedColumns": [],
                            "commands": [
                                {
                                    "name": "create",
                                    "table": "content_category"
                                }
                            ],
                            "createdTables": [
                                "content_category"
                            ],
                            "renamedTables": [],
                            "droppedTables": []
                        }
                    ]
                }
            },
            "item_21": {
                "projectId": 1,
                "sectionId": 1,
                "name": "influencers",
                "createdFromInterface": false,
                "id": 21,
                "createdAt": "2025-01-27 14:47:18",
                "updatedAt": "2025-01-27 14:50:30",
                "positionX": "6.75",
                "positionY": "-727",
                "removed": false,
                "migrations": [
                    {
                        "migration": "/Users/greelogix/Sites/Taskat/database/migrations/2025_01_27_095024_001_create_influencers_table.php",
                        "relativePath": "/database/migrations/2025_01_27_095024_001_create_influencers_table.php",
                        "migrationName": "2025_01_27_095024_001_create_influencers_table",
                        "datePrefix": "2025_01_27",
                        "fullPrefix": "2025_01_27_095024",
                        "addedColumns": [
                            {
                                "type": "bigInteger",
                                "name": "id",
                                "autoIncrement": true,
                                "unsigned": true,
                                "table": "influencers",
                                "creatorMethod": "id"
                            },
                            {
                                "type": "string",
                                "name": "name",
                                "length": 255,
                                "table": "influencers",
                                "creatorMethod": "string",
                                "nullable": true
                            },
                            {
                                "type": "text",
                                "name": "bio",
                                "table": "influencers",
                                "creatorMethod": "text",
                                "nullable": true
                            },
                            {
                                "type": "string",
                                "name": "lat",
                                "length": 255,
                                "table": "influencers",
                                "creatorMethod": "string",
                                "nullable": true
                            },
                            {
                                "type": "string",
                                "name": "long",
                                "length": 255,
                                "table": "influencers",
                                "creatorMethod": "string",
                                "nullable": true
                            },
                            {
                                "type": "string",
                                "name": "address",
                                "length": 255,
                                "table": "influencers",
                                "creatorMethod": "string",
                                "nullable": true
                            },
                            {
                                "type": "text",
                                "name": "image",
                                "table": "influencers",
                                "creatorMethod": "text",
                                "nullable": true
                            },
                            {
                                "type": "timestamp",
                                "name": "created_at",
                                "precision": 0,
                                "table": "influencers",
                                "creatorMethod": "timestamp",
                                "nullable": true
                            },
                            {
                                "type": "timestamp",
                                "name": "updated_at",
                                "precision": 0,
                                "table": "influencers",
                                "creatorMethod": "timestamp",
                                "nullable": true
                            }
                        ],
                        "changedColumns": [],
                        "droppedColumns": [],
                        "renamedColumns": [],
                        "commands": [
                            {
                                "name": "create",
                                "table": "influencers"
                            }
                        ],
                        "createdTables": [
                            "influencers"
                        ],
                        "renamedTables": [],
                        "droppedTables": []
                    }
                ],
                "oldNames": [],
                "labelColumnId": null,
                "schemaState": {
                    "name": "influencers",
                    "oldNames": [],
                    "migrations": [
                        {
                            "migration": "/Users/greelogix/Sites/Taskat/database/migrations/2025_01_27_095024_001_create_influencers_table.php",
                            "relativePath": "/database/migrations/2025_01_27_095024_001_create_influencers_table.php",
                            "migrationName": "2025_01_27_095024_001_create_influencers_table",
                            "datePrefix": "2025_01_27",
                            "fullPrefix": "2025_01_27_095024",
                            "addedColumns": [
                                {
                                    "type": "bigInteger",
                                    "name": "id",
                                    "autoIncrement": true,
                                    "unsigned": true,
                                    "table": "influencers",
                                    "creatorMethod": "id"
                                },
                                {
                                    "type": "string",
                                    "name": "name",
                                    "length": 255,
                                    "table": "influencers",
                                    "creatorMethod": "string",
                                    "nullable": true
                                },
                                {
                                    "type": "text",
                                    "name": "bio",
                                    "table": "influencers",
                                    "creatorMethod": "text",
                                    "nullable": true
                                },
                                {
                                    "type": "string",
                                    "name": "lat",
                                    "length": 255,
                                    "table": "influencers",
                                    "creatorMethod": "string",
                                    "nullable": true
                                },
                                {
                                    "type": "string",
                                    "name": "long",
                                    "length": 255,
                                    "table": "influencers",
                                    "creatorMethod": "string",
                                    "nullable": true
                                },
                                {
                                    "type": "string",
                                    "name": "address",
                                    "length": 255,
                                    "table": "influencers",
                                    "creatorMethod": "string",
                                    "nullable": true
                                },
                                {
                                    "type": "text",
                                    "name": "image",
                                    "table": "influencers",
                                    "creatorMethod": "text",
                                    "nullable": true
                                },
                                {
                                    "type": "timestamp",
                                    "name": "created_at",
                                    "precision": 0,
                                    "table": "influencers",
                                    "creatorMethod": "timestamp",
                                    "nullable": true
                                },
                                {
                                    "type": "timestamp",
                                    "name": "updated_at",
                                    "precision": 0,
                                    "table": "influencers",
                                    "creatorMethod": "timestamp",
                                    "nullable": true
                                }
                            ],
                            "changedColumns": [],
                            "droppedColumns": [],
                            "renamedColumns": [],
                            "commands": [
                                {
                                    "name": "create",
                                    "table": "influencers"
                                }
                            ],
                            "createdTables": [
                                "influencers"
                            ],
                            "renamedTables": [],
                            "droppedTables": []
                        }
                    ]
                }
            }
        },
        "columns": {
            "item_1": {
                "name": "id",
                "type": "bigInteger",
                "index": false,
                "length": null,
                "unique": false,
                "tableId": 1,
                "removed": false,
                "schemaState": {
                    "name": "id",
                    "unsigned": true,
                    "autoIncrement": true,
                    "type": "bigInteger",
                    "options": []
                },
                "nullable": false,
                "unsigned": true,
                "default": "",
                "autoIncrement": true,
                "faker": "",
                "order": 0,
                "options": [],
                "id": 1,
                "createdAt": "2025-01-24 12:02:52",
                "updatedAt": "2025-01-27 14:50:30"
            },
            "__tableData": {
                "count": 107,
                "lastPrimaryKey": 167,
                "index": {
                    "1": {
                        "hasMany": {
                            "indices.referencesColumnId": [
                                3
                            ],
                            "relationships.parentKeyId": [
                                5,
                                6
                            ]
                        }
                    },
                    "2": {
                        "hasMany": {
                            "fillable_model_column.columnId": [
                                1
                            ]
                        }
                    },
                    "3": {
                        "hasMany": {
                            "fillable_model_column.columnId": [
                                2
                            ]
                        }
                    },
                    "4": {
                        "hasMany": {
                            "casts_model_column.columnId": [
                                1
                            ]
                        }
                    },
                    "5": {
                        "hasMany": {
                            "fillable_model_column.columnId": [
                                3
                            ],
                            "hidden_model_column.columnId": [
                                1
                            ],
                            "casts_model_column.columnId": [
                                2
                            ]
                        }
                    },
                    "6": {
                        "hasMany": {
                            "hidden_model_column.columnId": [
                                2
                            ]
                        }
                    },
                    "7": {
                        "hasMany": {}
                    },
                    "8": {
                        "hasMany": {}
                    },
                    "9": {
                        "hasMany": {}
                    },
                    "10": {
                        "hasMany": {}
                    },
                    "11": {
                        "hasMany": {}
                    },
                    "12": {
                        "hasMany": {}
                    },
                    "13": {
                        "hasMany": {}
                    },
                    "14": {
                        "hasMany": {}
                    },
                    "15": {
                        "hasMany": {}
                    },
                    "16": {
                        "hasMany": {}
                    },
                    "17": {
                        "hasMany": {}
                    },
                    "18": {
                        "hasMany": {}
                    },
                    "19": {
                        "hasMany": {}
                    },
                    "20": {
                        "hasMany": {}
                    },
                    "21": {
                        "hasMany": {}
                    },
                    "22": {
                        "hasMany": {}
                    },
                    "23": {
                        "hasMany": {}
                    },
                    "24": {
                        "hasMany": {}
                    },
                    "25": {
                        "hasMany": {}
                    },
                    "26": {
                        "hasMany": {}
                    },
                    "27": {
                        "hasMany": {}
                    },
                    "28": {
                        "hasMany": {}
                    },
                    "29": {
                        "hasMany": {}
                    },
                    "30": {
                        "hasMany": {}
                    },
                    "31": {
                        "hasMany": {}
                    },
                    "32": {
                        "hasMany": {}
                    },
                    "33": {
                        "hasMany": {}
                    },
                    "34": {
                        "hasMany": {}
                    },
                    "35": {
                        "hasMany": {}
                    },
                    "36": {
                        "hasMany": {}
                    },
                    "37": {
                        "hasMany": {}
                    },
                    "38": {
                        "hasMany": {}
                    },
                    "39": {
                        "hasMany": {}
                    },
                    "40": {
                        "hasMany": {}
                    },
                    "41": {
                        "hasMany": {}
                    },
                    "42": {
                        "hasMany": {}
                    },
                    "43": {
                        "hasMany": {}
                    },
                    "44": {
                        "hasMany": {}
                    },
                    "45": {
                        "hasMany": {}
                    },
                    "46": {
                        "hasMany": {}
                    },
                    "47": {
                        "hasMany": {}
                    },
                    "48": {
                        "hasMany": {}
                    },
                    "49": {
                        "hasMany": {}
                    },
                    "50": {
                        "hasMany": {}
                    },
                    "51": {
                        "hasMany": {}
                    },
                    "52": {
                        "hasMany": {
                            "indices.referencesColumnId": [
                                1
                            ],
                            "relationships.parentKeyId": [
                                1,
                                2
                            ]
                        }
                    },
                    "53": {
                        "hasMany": {
                            "fillable_model_column.columnId": [
                                4
                            ],
                            "cruds.defaultSearchColumnId": [
                                1
                            ],
                            "inputs.columnId": [
                                1
                            ]
                        }
                    },
                    "54": {
                        "hasMany": {
                            "fillable_model_column.columnId": [
                                5
                            ],
                            "inputs.columnId": [
                                2
                            ]
                        }
                    },
                    "55": {
                        "hasMany": {
                            "fillable_model_column.columnId": [
                                6
                            ],
                            "inputs.columnId": [
                                3
                            ]
                        }
                    },
                    "56": {
                        "hasMany": {}
                    },
                    "57": {
                        "hasMany": {
                            "cruds.defaultSortColumnId": [
                                1
                            ]
                        }
                    },
                    "58": {
                        "hasMany": {
                            "indices.referencesColumnId": [
                                11,
                                12
                            ],
                            "relationships.parentKeyId": [
                                12,
                                13,
                                14,
                                15
                            ]
                        }
                    },
                    "59": {
                        "hasMany": {}
                    },
                    "60": {
                        "hasMany": {
                            "cruds.defaultSortColumnId": [
                                2
                            ]
                        }
                    },
                    "61": {
                        "hasMany": {
                            "index_column.columnId": [
                                1
                            ],
                            "relationships.foreignKeyId": [
                                1,
                                2
                            ],
                            "inputs.columnId": [
                                4
                            ]
                        }
                    },
                    "62": {
                        "hasMany": {
                            "cruds.defaultSearchColumnId": [
                                2
                            ],
                            "inputs.columnId": [
                                5
                            ]
                        }
                    },
                    "63": {
                        "hasMany": {
                            "inputs.columnId": [
                                6
                            ]
                        }
                    },
                    "64": {
                        "hasMany": {
                            "inputs.columnId": [
                                7
                            ]
                        }
                    },
                    "65": {
                        "hasMany": {
                            "inputs.columnId": [
                                8
                            ]
                        }
                    },
                    "66": {
                        "hasMany": {
                            "inputs.columnId": [
                                9
                            ]
                        }
                    },
                    "67": {
                        "hasMany": {
                            "inputs.columnId": []
                        }
                    },
                    "76": {
                        "hasMany": {}
                    },
                    "77": {
                        "hasMany": {}
                    },
                    "78": {
                        "hasMany": {
                            "cruds.defaultSortColumnId": []
                        }
                    },
                    "79": {
                        "hasMany": {
                            "cruds.defaultSearchColumnId": [],
                            "inputs.columnId": []
                        }
                    },
                    "80": {
                        "hasMany": {
                            "inputs.columnId": []
                        }
                    },
                    "81": {
                        "hasMany": {
                            "inputs.columnId": []
                        }
                    },
                    "82": {
                        "hasMany": {
                            "inputs.columnId": []
                        }
                    },
                    "83": {
                        "hasMany": {
                            "index_column.columnId": [
                                3
                            ],
                            "relationships.foreignKeyId": [
                                5,
                                6
                            ],
                            "inputs.columnId": []
                        }
                    },
                    "107": {
                        "hasMany": {}
                    },
                    "108": {
                        "hasMany": {}
                    },
                    "109": {
                        "hasMany": {
                            "cruds.defaultSortColumnId": [
                                7
                            ]
                        }
                    },
                    "110": {
                        "hasMany": {
                            "index_column.columnId": [
                                11
                            ],
                            "relationships.foreignKeyId": [
                                12,
                                13
                            ],
                            "inputs.columnId": [
                                33
                            ]
                        }
                    },
                    "111": {
                        "hasMany": {
                            "cruds.defaultSearchColumnId": [
                                7
                            ],
                            "inputs.columnId": [
                                34
                            ]
                        }
                    },
                    "112": {
                        "hasMany": {
                            "inputs.columnId": [
                                35
                            ]
                        }
                    },
                    "113": {
                        "hasMany": {
                            "inputs.columnId": [
                                36
                            ]
                        }
                    },
                    "114": {
                        "hasMany": {
                            "inputs.columnId": [
                                37
                            ]
                        }
                    },
                    "115": {
                        "hasMany": {
                            "inputs.columnId": [
                                38
                            ]
                        }
                    },
                    "116": {
                        "hasMany": {}
                    },
                    "117": {
                        "hasMany": {
                            "index_column.columnId": [
                                12
                            ],
                            "relationships.foreignKeyId": [
                                14,
                                15
                            ],
                            "inputs.columnId": [
                                39
                            ]
                        }
                    },
                    "118": {
                        "hasMany": {
                            "cruds.defaultSearchColumnId": [
                                8
                            ],
                            "inputs.columnId": [
                                40
                            ]
                        }
                    },
                    "119": {
                        "hasMany": {
                            "inputs.columnId": [
                                41
                            ]
                        }
                    },
                    "120": {
                        "hasMany": {
                            "inputs.columnId": [
                                42
                            ]
                        }
                    },
                    "121": {
                        "hasMany": {
                            "inputs.columnId": [
                                43
                            ]
                        }
                    },
                    "122": {
                        "hasMany": {}
                    },
                    "123": {
                        "hasMany": {
                            "cruds.defaultSortColumnId": [
                                8
                            ]
                        }
                    },
                    "124": {
                        "hasMany": {}
                    },
                    "125": {
                        "hasMany": {}
                    },
                    "126": {
                        "hasMany": {
                            "cruds.defaultSortColumnId": [
                                9
                            ]
                        }
                    },
                    "127": {
                        "hasMany": {
                            "cruds.defaultSearchColumnId": [
                                9
                            ],
                            "inputs.columnId": [
                                44
                            ]
                        }
                    },
                    "128": {
                        "hasMany": {
                            "inputs.columnId": [
                                45
                            ]
                        }
                    },
                    "129": {
                        "hasMany": {
                            "inputs.columnId": [
                                46
                            ]
                        }
                    },
                    "159": {
                        "hasMany": {}
                    },
                    "160": {
                        "hasMany": {}
                    },
                    "161": {
                        "hasMany": {
                            "cruds.defaultSortColumnId": [
                                15
                            ]
                        }
                    },
                    "162": {
                        "hasMany": {
                            "cruds.defaultSearchColumnId": [
                                15
                            ],
                            "inputs.columnId": [
                                74
                            ]
                        }
                    },
                    "163": {
                        "hasMany": {
                            "inputs.columnId": [
                                75
                            ]
                        }
                    },
                    "164": {
                        "hasMany": {
                            "inputs.columnId": [
                                76
                            ]
                        }
                    },
                    "165": {
                        "hasMany": {
                            "inputs.columnId": [
                                77
                            ]
                        }
                    },
                    "166": {
                        "hasMany": {
                            "inputs.columnId": [
                                78
                            ]
                        }
                    },
                    "167": {
                        "hasMany": {
                            "inputs.columnId": [
                                79
                            ]
                        }
                    }
                },
                "additionalIndexes": {},
                "items": [],
                "relations": []
            },
            "item_2": {
                "name": "name",
                "type": "string",
                "length": 255,
                "tableId": 1,
                "removed": false,
                "schemaState": {
                    "name": "name",
                    "length": 255,
                    "type": "string",
                    "options": []
                },
                "faker": "fake()->name()",
                "order": 1,
                "options": [],
                "id": 2,
                "createdAt": "2025-01-24 12:02:52",
                "updatedAt": "2025-01-27 14:50:30"
            },
            "item_3": {
                "name": "email",
                "type": "string",
                "length": 255,
                "unique": true,
                "tableId": 1,
                "removed": false,
                "schemaState": {
                    "name": "email",
                    "length": 255,
                    "type": "string",
                    "unique": true,
                    "options": []
                },
                "faker": "fake()->unique()->safeEmail()",
                "order": 2,
                "options": [],
                "id": 3,
                "createdAt": "2025-01-24 12:02:52",
                "updatedAt": "2025-01-27 14:50:30"
            },
            "item_4": {
                "name": "email_verified_at",
                "type": "timestamp",
                "tableId": 1,
                "removed": false,
                "schemaState": {
                    "name": "email_verified_at",
                    "nullable": true,
                    "type": "timestamp",
                    "options": []
                },
                "nullable": true,
                "faker": "now()",
                "order": 3,
                "options": [],
                "id": 4,
                "createdAt": "2025-01-24 12:02:52",
                "updatedAt": "2025-01-27 14:50:30"
            },
            "item_5": {
                "name": "password",
                "type": "string",
                "length": 255,
                "tableId": 1,
                "removed": false,
                "schemaState": {
                    "name": "password",
                    "length": 255,
                    "type": "string",
                    "options": []
                },
                "faker": "\\Hash::make('password')",
                "order": 4,
                "options": [],
                "id": 5,
                "createdAt": "2025-01-24 12:02:52",
                "updatedAt": "2025-01-27 14:50:30"
            },
            "item_6": {
                "name": "remember_token",
                "type": "string",
                "length": 100,
                "tableId": 1,
                "removed": false,
                "schemaState": {
                    "name": "remember_token",
                    "length": 100,
                    "nullable": true,
                    "type": "string",
                    "options": []
                },
                "nullable": true,
                "faker": "Str::random(10)",
                "order": 5,
                "options": [],
                "id": 6,
                "createdAt": "2025-01-24 12:02:52",
                "updatedAt": "2025-01-27 14:50:30"
            },
            "item_7": {
                "name": "created_at",
                "type": "timestamp",
                "tableId": 1,
                "removed": false,
                "schemaState": {
                    "name": "created_at",
                    "nullable": true,
                    "type": "timestamp",
                    "options": []
                },
                "nullable": true,
                "faker": "fake()->dateTime()",
                "order": 10,
                "options": [],
                "id": 7,
                "createdAt": "2025-01-24 12:02:52",
                "updatedAt": "2025-01-27 14:50:30"
            },
            "item_8": {
                "name": "updated_at",
                "type": "timestamp",
                "tableId": 1,
                "removed": false,
                "schemaState": {
                    "name": "updated_at",
                    "nullable": true,
                    "type": "timestamp",
                    "options": []
                },
                "nullable": true,
                "faker": "fake()->dateTime()",
                "order": 11,
                "options": [],
                "id": 8,
                "createdAt": "2025-01-24 12:02:52",
                "updatedAt": "2025-01-27 14:50:30"
            },
            "item_9": {
                "name": "email",
                "type": "string",
                "index": false,
                "length": 255,
                "unique": false,
                "tableId": 2,
                "removed": false,
                "schemaState": {
                    "name": "email",
                    "length": 255,
                    "type": "string",
                    "options": []
                },
                "nullable": false,
                "unsigned": false,
                "default": "",
                "autoIncrement": false,
                "faker": "fake()->unique()->safeEmail()",
                "order": 0,
                "options": [],
                "id": 9,
                "createdAt": "2025-01-24 12:02:52",
                "updatedAt": "2025-01-27 14:50:30"
            },
            "item_10": {
                "name": "token",
                "type": "string",
                "length": 255,
                "tableId": 2,
                "removed": false,
                "schemaState": {
                    "name": "token",
                    "length": 255,
                    "type": "string",
                    "options": []
                },
                "faker": "fake()->text({LENGTH})",
                "order": 1,
                "options": [],
                "id": 10,
                "createdAt": "2025-01-24 12:02:52",
                "updatedAt": "2025-01-27 14:50:30"
            },
            "item_11": {
                "name": "created_at",
                "type": "timestamp",
                "tableId": 2,
                "removed": false,
                "schemaState": {
                    "name": "created_at",
                    "nullable": true,
                    "type": "timestamp",
                    "options": []
                },
                "nullable": true,
                "faker": "fake()->dateTime()",
                "order": 2,
                "options": [],
                "id": 11,
                "createdAt": "2025-01-24 12:02:52",
                "updatedAt": "2025-01-27 14:50:30"
            },
            "item_12": {
                "name": "id",
                "type": "string",
                "index": false,
                "length": 255,
                "unique": false,
                "tableId": 3,
                "removed": false,
                "schemaState": {
                    "name": "id",
                    "length": 255,
                    "type": "string",
                    "options": []
                },
                "nullable": false,
                "unsigned": false,
                "default": "",
                "autoIncrement": false,
                "faker": "",
                "order": 0,
                "options": [],
                "id": 12,
                "createdAt": "2025-01-24 12:02:52",
                "updatedAt": "2025-01-27 14:50:30"
            },
            "item_13": {
                "name": "user_id",
                "type": "bigInteger",
                "index": true,
                "tableId": 3,
                "removed": false,
                "schemaState": {
                    "name": "user_id",
                    "nullable": true,
                    "unsigned": true,
                    "autoIncrement": false,
                    "type": "bigInteger",
                    "index": true,
                    "options": []
                },
                "nullable": true,
                "unsigned": true,
                "autoIncrement": false,
                "faker": "fake()->randomNumber()",
                "order": 1,
                "options": [],
                "id": 13,
                "createdAt": "2025-01-24 12:02:52",
                "updatedAt": "2025-01-27 14:50:30"
            },
            "item_14": {
                "name": "ip_address",
                "type": "string",
                "length": 45,
                "tableId": 3,
                "removed": false,
                "schemaState": {
                    "name": "ip_address",
                    "length": 45,
                    "nullable": true,
                    "type": "string",
                    "options": []
                },
                "nullable": true,
                "faker": "fake()->ipv4()",
                "order": 2,
                "options": [],
                "id": 14,
                "createdAt": "2025-01-24 12:02:52",
                "updatedAt": "2025-01-27 14:50:30"
            },
            "item_15": {
                "name": "user_agent",
                "type": "text",
                "tableId": 3,
                "removed": false,
                "schemaState": {
                    "name": "user_agent",
                    "nullable": true,
                    "type": "text",
                    "options": []
                },
                "nullable": true,
                "faker": "fake()->userAgent()",
                "order": 3,
                "options": [],
                "id": 15,
                "createdAt": "2025-01-24 12:02:52",
                "updatedAt": "2025-01-27 14:50:30"
            },
            "item_16": {
                "name": "payload",
                "type": "longText",
                "tableId": 3,
                "removed": false,
                "schemaState": {
                    "name": "payload",
                    "type": "longText",
                    "options": []
                },
                "faker": "fake()->text()",
                "order": 4,
                "options": [],
                "id": 16,
                "createdAt": "2025-01-24 12:02:52",
                "updatedAt": "2025-01-27 14:50:30"
            },
            "item_17": {
                "name": "last_activity",
                "type": "integer",
                "index": true,
                "tableId": 3,
                "removed": false,
                "schemaState": {
                    "name": "last_activity",
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "integer",
                    "index": true,
                    "options": []
                },
                "unsigned": false,
                "autoIncrement": false,
                "faker": "fake()->randomNumber(0)",
                "order": 5,
                "options": [],
                "id": 17,
                "createdAt": "2025-01-24 12:02:52",
                "updatedAt": "2025-01-27 14:50:30"
            },
            "item_18": {
                "name": "key",
                "type": "string",
                "index": false,
                "length": 255,
                "unique": false,
                "tableId": 4,
                "removed": false,
                "schemaState": {
                    "name": "key",
                    "length": 255,
                    "type": "string",
                    "options": []
                },
                "nullable": false,
                "unsigned": false,
                "default": "",
                "autoIncrement": false,
                "faker": "fake()->text({LENGTH})",
                "order": 0,
                "options": [],
                "id": 18,
                "createdAt": "2025-01-24 12:02:52",
                "updatedAt": "2025-01-27 14:50:30"
            },
            "item_19": {
                "name": "value",
                "type": "mediumText",
                "tableId": 4,
                "removed": false,
                "schemaState": {
                    "name": "value",
                    "type": "mediumText",
                    "options": []
                },
                "faker": "fake()->text()",
                "order": 1,
                "options": [],
                "id": 19,
                "createdAt": "2025-01-24 12:02:52",
                "updatedAt": "2025-01-27 14:50:30"
            },
            "item_20": {
                "name": "expiration",
                "type": "integer",
                "tableId": 4,
                "removed": false,
                "schemaState": {
                    "name": "expiration",
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "integer",
                    "options": []
                },
                "unsigned": false,
                "autoIncrement": false,
                "faker": "fake()->randomNumber(0)",
                "order": 2,
                "options": [],
                "id": 20,
                "createdAt": "2025-01-24 12:02:52",
                "updatedAt": "2025-01-27 14:50:30"
            },
            "item_21": {
                "name": "key",
                "type": "string",
                "index": false,
                "length": 255,
                "unique": false,
                "tableId": 5,
                "removed": false,
                "schemaState": {
                    "name": "key",
                    "length": 255,
                    "type": "string",
                    "options": []
                },
                "nullable": false,
                "unsigned": false,
                "default": "",
                "autoIncrement": false,
                "faker": "fake()->text({LENGTH})",
                "order": 0,
                "options": [],
                "id": 21,
                "createdAt": "2025-01-24 12:02:52",
                "updatedAt": "2025-01-27 14:50:30"
            },
            "item_22": {
                "name": "owner",
                "type": "string",
                "length": 255,
                "tableId": 5,
                "removed": false,
                "schemaState": {
                    "name": "owner",
                    "length": 255,
                    "type": "string",
                    "options": []
                },
                "faker": "fake()->text({LENGTH})",
                "order": 1,
                "options": [],
                "id": 22,
                "createdAt": "2025-01-24 12:02:52",
                "updatedAt": "2025-01-27 14:50:30"
            },
            "item_23": {
                "name": "expiration",
                "type": "integer",
                "tableId": 5,
                "removed": false,
                "schemaState": {
                    "name": "expiration",
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "integer",
                    "options": []
                },
                "unsigned": false,
                "autoIncrement": false,
                "faker": "fake()->randomNumber(0)",
                "order": 2,
                "options": [],
                "id": 23,
                "createdAt": "2025-01-24 12:02:52",
                "updatedAt": "2025-01-27 14:50:30"
            },
            "item_24": {
                "name": "id",
                "type": "bigInteger",
                "index": false,
                "length": null,
                "unique": false,
                "tableId": 6,
                "removed": false,
                "schemaState": {
                    "name": "id",
                    "unsigned": true,
                    "autoIncrement": true,
                    "type": "bigInteger",
                    "options": []
                },
                "nullable": false,
                "unsigned": true,
                "default": "",
                "autoIncrement": true,
                "faker": "",
                "order": 0,
                "options": [],
                "id": 24,
                "createdAt": "2025-01-24 12:02:52",
                "updatedAt": "2025-01-27 14:50:30"
            },
            "item_25": {
                "name": "queue",
                "type": "string",
                "index": true,
                "length": 255,
                "tableId": 6,
                "removed": false,
                "schemaState": {
                    "name": "queue",
                    "length": 255,
                    "type": "string",
                    "index": true,
                    "options": []
                },
                "faker": "fake()->text({LENGTH})",
                "order": 1,
                "options": [],
                "id": 25,
                "createdAt": "2025-01-24 12:02:52",
                "updatedAt": "2025-01-27 14:50:30"
            },
            "item_26": {
                "name": "payload",
                "type": "longText",
                "tableId": 6,
                "removed": false,
                "schemaState": {
                    "name": "payload",
                    "type": "longText",
                    "options": []
                },
                "faker": "fake()->text()",
                "order": 2,
                "options": [],
                "id": 26,
                "createdAt": "2025-01-24 12:02:52",
                "updatedAt": "2025-01-27 14:50:30"
            },
            "item_27": {
                "name": "attempts",
                "type": "tinyInteger",
                "tableId": 6,
                "removed": false,
                "schemaState": {
                    "name": "attempts",
                    "unsigned": true,
                    "autoIncrement": false,
                    "type": "tinyInteger",
                    "options": []
                },
                "unsigned": true,
                "autoIncrement": false,
                "faker": "fake()->numberBetween(0, 127)",
                "order": 3,
                "options": [],
                "id": 27,
                "createdAt": "2025-01-24 12:02:52",
                "updatedAt": "2025-01-27 14:50:30"
            },
            "item_28": {
                "name": "reserved_at",
                "type": "integer",
                "tableId": 6,
                "removed": false,
                "schemaState": {
                    "name": "reserved_at",
                    "nullable": true,
                    "unsigned": true,
                    "autoIncrement": false,
                    "type": "integer",
                    "options": []
                },
                "nullable": true,
                "unsigned": true,
                "autoIncrement": false,
                "faker": "fake()->randomNumber(0)",
                "order": 4,
                "options": [],
                "id": 28,
                "createdAt": "2025-01-24 12:02:52",
                "updatedAt": "2025-01-27 14:50:30"
            },
            "item_29": {
                "name": "available_at",
                "type": "integer",
                "tableId": 6,
                "removed": false,
                "schemaState": {
                    "name": "available_at",
                    "unsigned": true,
                    "autoIncrement": false,
                    "type": "integer",
                    "options": []
                },
                "unsigned": true,
                "autoIncrement": false,
                "faker": "fake()->randomNumber(0)",
                "order": 5,
                "options": [],
                "id": 29,
                "createdAt": "2025-01-24 12:02:52",
                "updatedAt": "2025-01-27 14:50:30"
            },
            "item_30": {
                "name": "created_at",
                "type": "integer",
                "tableId": 6,
                "removed": false,
                "schemaState": {
                    "name": "created_at",
                    "unsigned": true,
                    "autoIncrement": false,
                    "type": "integer",
                    "options": []
                },
                "unsigned": true,
                "autoIncrement": false,
                "faker": "fake()->dateTime()",
                "order": 6,
                "options": [],
                "id": 30,
                "createdAt": "2025-01-24 12:02:52",
                "updatedAt": "2025-01-27 14:50:30"
            },
            "item_31": {
                "name": "id",
                "type": "string",
                "index": false,
                "length": 255,
                "unique": false,
                "tableId": 7,
                "removed": false,
                "schemaState": {
                    "name": "id",
                    "length": 255,
                    "type": "string",
                    "options": []
                },
                "nullable": false,
                "unsigned": false,
                "default": "",
                "autoIncrement": false,
                "faker": "",
                "order": 0,
                "options": [],
                "id": 31,
                "createdAt": "2025-01-24 12:02:52",
                "updatedAt": "2025-01-27 14:50:30"
            },
            "item_32": {
                "name": "name",
                "type": "string",
                "length": 255,
                "tableId": 7,
                "removed": false,
                "schemaState": {
                    "name": "name",
                    "length": 255,
                    "type": "string",
                    "options": []
                },
                "faker": "fake()->name()",
                "order": 1,
                "options": [],
                "id": 32,
                "createdAt": "2025-01-24 12:02:52",
                "updatedAt": "2025-01-27 14:50:30"
            },
            "item_33": {
                "name": "total_jobs",
                "type": "integer",
                "tableId": 7,
                "removed": false,
                "schemaState": {
                    "name": "total_jobs",
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "integer",
                    "options": []
                },
                "unsigned": false,
                "autoIncrement": false,
                "faker": "fake()->randomNumber(0)",
                "order": 2,
                "options": [],
                "id": 33,
                "createdAt": "2025-01-24 12:02:52",
                "updatedAt": "2025-01-27 14:50:30"
            },
            "item_34": {
                "name": "pending_jobs",
                "type": "integer",
                "tableId": 7,
                "removed": false,
                "schemaState": {
                    "name": "pending_jobs",
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "integer",
                    "options": []
                },
                "unsigned": false,
                "autoIncrement": false,
                "faker": "fake()->randomNumber(0)",
                "order": 3,
                "options": [],
                "id": 34,
                "createdAt": "2025-01-24 12:02:52",
                "updatedAt": "2025-01-27 14:50:30"
            },
            "item_35": {
                "name": "failed_jobs",
                "type": "integer",
                "tableId": 7,
                "removed": false,
                "schemaState": {
                    "name": "failed_jobs",
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "integer",
                    "options": []
                },
                "unsigned": false,
                "autoIncrement": false,
                "faker": "fake()->randomNumber(0)",
                "order": 4,
                "options": [],
                "id": 35,
                "createdAt": "2025-01-24 12:02:52",
                "updatedAt": "2025-01-27 14:50:30"
            },
            "item_36": {
                "name": "failed_job_ids",
                "type": "longText",
                "tableId": 7,
                "removed": false,
                "schemaState": {
                    "name": "failed_job_ids",
                    "type": "longText",
                    "options": []
                },
                "faker": "fake()->text()",
                "order": 5,
                "options": [],
                "id": 36,
                "createdAt": "2025-01-24 12:02:52",
                "updatedAt": "2025-01-27 14:50:30"
            },
            "item_37": {
                "name": "options",
                "type": "mediumText",
                "tableId": 7,
                "removed": false,
                "schemaState": {
                    "name": "options",
                    "nullable": true,
                    "type": "mediumText",
                    "options": []
                },
                "nullable": true,
                "faker": "[]",
                "order": 6,
                "options": [],
                "id": 37,
                "createdAt": "2025-01-24 12:02:52",
                "updatedAt": "2025-01-27 14:50:30"
            },
            "item_38": {
                "name": "cancelled_at",
                "type": "integer",
                "tableId": 7,
                "removed": false,
                "schemaState": {
                    "name": "cancelled_at",
                    "nullable": true,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "integer",
                    "options": []
                },
                "nullable": true,
                "unsigned": false,
                "autoIncrement": false,
                "faker": "fake()->randomNumber(0)",
                "order": 7,
                "options": [],
                "id": 38,
                "createdAt": "2025-01-24 12:02:52",
                "updatedAt": "2025-01-27 14:50:30"
            },
            "item_39": {
                "name": "created_at",
                "type": "integer",
                "tableId": 7,
                "removed": false,
                "schemaState": {
                    "name": "created_at",
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "integer",
                    "options": []
                },
                "unsigned": false,
                "autoIncrement": false,
                "faker": "fake()->dateTime()",
                "order": 8,
                "options": [],
                "id": 39,
                "createdAt": "2025-01-24 12:02:52",
                "updatedAt": "2025-01-27 14:50:30"
            },
            "item_40": {
                "name": "finished_at",
                "type": "integer",
                "tableId": 7,
                "removed": false,
                "schemaState": {
                    "name": "finished_at",
                    "nullable": true,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "integer",
                    "options": []
                },
                "nullable": true,
                "unsigned": false,
                "autoIncrement": false,
                "faker": "fake()->randomNumber(0)",
                "order": 9,
                "options": [],
                "id": 40,
                "createdAt": "2025-01-24 12:02:52",
                "updatedAt": "2025-01-27 14:50:30"
            },
            "item_41": {
                "name": "id",
                "type": "bigInteger",
                "index": false,
                "length": null,
                "unique": false,
                "tableId": 8,
                "removed": false,
                "schemaState": {
                    "name": "id",
                    "unsigned": true,
                    "autoIncrement": true,
                    "type": "bigInteger",
                    "options": []
                },
                "nullable": false,
                "unsigned": true,
                "default": "",
                "autoIncrement": true,
                "faker": "",
                "order": 0,
                "options": [],
                "id": 41,
                "createdAt": "2025-01-24 12:02:52",
                "updatedAt": "2025-01-27 14:50:30"
            },
            "item_42": {
                "name": "uuid",
                "type": "string",
                "length": 255,
                "unique": true,
                "tableId": 8,
                "removed": false,
                "schemaState": {
                    "name": "uuid",
                    "length": 255,
                    "type": "string",
                    "unique": true,
                    "options": []
                },
                "faker": "fake()->uuid()",
                "order": 1,
                "options": [],
                "id": 42,
                "createdAt": "2025-01-24 12:02:52",
                "updatedAt": "2025-01-27 14:50:30"
            },
            "item_43": {
                "name": "connection",
                "type": "text",
                "tableId": 8,
                "removed": false,
                "schemaState": {
                    "name": "connection",
                    "type": "text",
                    "options": []
                },
                "faker": "fake()->text()",
                "order": 2,
                "options": [],
                "id": 43,
                "createdAt": "2025-01-24 12:02:52",
                "updatedAt": "2025-01-27 14:50:30"
            },
            "item_44": {
                "name": "queue",
                "type": "text",
                "tableId": 8,
                "removed": false,
                "schemaState": {
                    "name": "queue",
                    "type": "text",
                    "options": []
                },
                "faker": "fake()->text()",
                "order": 3,
                "options": [],
                "id": 44,
                "createdAt": "2025-01-24 12:02:52",
                "updatedAt": "2025-01-27 14:50:30"
            },
            "item_45": {
                "name": "payload",
                "type": "longText",
                "tableId": 8,
                "removed": false,
                "schemaState": {
                    "name": "payload",
                    "type": "longText",
                    "options": []
                },
                "faker": "fake()->text()",
                "order": 4,
                "options": [],
                "id": 45,
                "createdAt": "2025-01-24 12:02:52",
                "updatedAt": "2025-01-27 14:50:30"
            },
            "item_46": {
                "name": "exception",
                "type": "longText",
                "tableId": 8,
                "removed": false,
                "schemaState": {
                    "name": "exception",
                    "type": "longText",
                    "options": []
                },
                "faker": "fake()->text()",
                "order": 5,
                "options": [],
                "id": 46,
                "createdAt": "2025-01-24 12:02:52",
                "updatedAt": "2025-01-27 14:50:30"
            },
            "item_47": {
                "name": "failed_at",
                "type": "timestamp",
                "tableId": 8,
                "removed": false,
                "schemaState": {
                    "name": "failed_at",
                    "type": "timestamp",
                    "options": []
                },
                "faker": "fake()->dateTime()",
                "order": 6,
                "options": [],
                "id": 47,
                "createdAt": "2025-01-24 12:02:52",
                "updatedAt": "2025-01-27 14:50:30"
            },
            "item_48": {
                "name": "phone",
                "type": "string",
                "length": 255,
                "unique": true,
                "tableId": 1,
                "removed": false,
                "schemaState": {
                    "name": "phone",
                    "length": 255,
                    "type": "string",
                    "unique": true,
                    "options": []
                },
                "faker": "fake()->unique->phoneNumber()",
                "id": 48,
                "createdAt": "2025-01-24 12:18:37",
                "updatedAt": "2025-01-27 14:50:30",
                "order": 6,
                "options": []
            },
            "item_49": {
                "name": "image",
                "type": "text",
                "tableId": 1,
                "removed": false,
                "schemaState": {
                    "name": "image",
                    "nullable": true,
                    "type": "text",
                    "options": []
                },
                "nullable": true,
                "faker": "fake()->word()",
                "id": 49,
                "createdAt": "2025-01-24 12:19:00",
                "updatedAt": "2025-01-27 14:50:30",
                "order": 7,
                "options": []
            },
            "item_50": {
                "name": "type",
                "type": "string",
                "length": 255,
                "tableId": 1,
                "removed": false,
                "schemaState": {
                    "name": "type",
                    "length": 255,
                    "nullable": true,
                    "type": "string",
                    "default": "Customer",
                    "options": []
                },
                "nullable": true,
                "default": "Customer",
                "faker": "fake()->word()",
                "id": 50,
                "createdAt": "2025-01-24 12:19:44",
                "updatedAt": "2025-01-27 14:50:30",
                "order": 8,
                "options": []
            },
            "item_51": {
                "name": "status",
                "type": "string",
                "length": 255,
                "tableId": 1,
                "removed": false,
                "schemaState": {
                    "name": "status",
                    "length": 255,
                    "nullable": true,
                    "type": "string",
                    "default": "active",
                    "options": []
                },
                "nullable": true,
                "default": "active",
                "faker": "fake()->word()",
                "id": 51,
                "createdAt": "2025-01-24 12:20:32",
                "updatedAt": "2025-01-27 14:50:30",
                "order": 9,
                "options": []
            },
            "item_52": {
                "name": "id",
                "type": "bigInteger",
                "index": false,
                "length": null,
                "unique": false,
                "tableId": 9,
                "removed": false,
                "schemaState": {
                    "name": "id",
                    "unsigned": true,
                    "autoIncrement": true,
                    "type": "bigInteger",
                    "options": []
                },
                "nullable": false,
                "unsigned": true,
                "default": "",
                "autoIncrement": true,
                "faker": "",
                "order": 0,
                "options": [],
                "id": 52,
                "createdAt": "2025-01-24 12:23:53",
                "updatedAt": "2025-01-27 14:50:30"
            },
            "item_53": {
                "name": "title",
                "type": "string",
                "length": 255,
                "unique": true,
                "tableId": 9,
                "removed": false,
                "schemaState": {
                    "name": "title",
                    "length": 255,
                    "type": "string",
                    "unique": true,
                    "options": []
                },
                "faker": "fake()->sentence(10)",
                "order": 1,
                "options": [],
                "id": 53,
                "createdAt": "2025-01-24 12:23:53",
                "updatedAt": "2025-01-27 14:50:30"
            },
            "item_54": {
                "name": "description",
                "type": "text",
                "tableId": 9,
                "removed": false,
                "schemaState": {
                    "name": "description",
                    "nullable": true,
                    "type": "text",
                    "options": []
                },
                "nullable": true,
                "faker": "fake()->sentence(15)",
                "order": 2,
                "options": [],
                "id": 54,
                "createdAt": "2025-01-24 12:23:53",
                "updatedAt": "2025-01-27 14:50:30"
            },
            "item_55": {
                "name": "image",
                "type": "string",
                "length": 255,
                "tableId": 9,
                "removed": false,
                "schemaState": {
                    "name": "image",
                    "length": 255,
                    "nullable": true,
                    "type": "string",
                    "options": []
                },
                "nullable": true,
                "faker": "",
                "order": 3,
                "options": [],
                "id": 55,
                "createdAt": "2025-01-24 12:23:53",
                "updatedAt": "2025-01-27 14:50:30"
            },
            "item_56": {
                "name": "created_at",
                "type": "timestamp",
                "tableId": 9,
                "removed": false,
                "schemaState": {
                    "name": "created_at",
                    "nullable": true,
                    "type": "timestamp",
                    "options": []
                },
                "nullable": true,
                "faker": "fake()->dateTime()",
                "order": 4,
                "options": [],
                "id": 56,
                "createdAt": "2025-01-24 12:23:53",
                "updatedAt": "2025-01-27 14:50:30"
            },
            "item_57": {
                "name": "updated_at",
                "type": "timestamp",
                "tableId": 9,
                "removed": false,
                "schemaState": {
                    "name": "updated_at",
                    "nullable": true,
                    "type": "timestamp",
                    "options": []
                },
                "nullable": true,
                "faker": "fake()->dateTime()",
                "order": 5,
                "options": [],
                "id": 57,
                "createdAt": "2025-01-24 12:23:53",
                "updatedAt": "2025-01-27 14:50:30"
            },
            "item_58": {
                "name": "id",
                "type": "bigInteger",
                "index": false,
                "length": null,
                "unique": false,
                "tableId": 10,
                "removed": false,
                "schemaState": {
                    "name": "id",
                    "unsigned": true,
                    "autoIncrement": true,
                    "type": "bigInteger",
                    "options": []
                },
                "nullable": false,
                "unsigned": true,
                "default": "",
                "autoIncrement": true,
                "faker": "",
                "order": 0,
                "id": 58,
                "createdAt": "2025-01-24 12:52:51",
                "updatedAt": "2025-01-27 14:50:30",
                "options": []
            },
            "item_59": {
                "name": "created_at",
                "type": "timestamp",
                "tableId": 10,
                "removed": false,
                "schemaState": {
                    "name": "created_at",
                    "nullable": true,
                    "type": "timestamp",
                    "options": []
                },
                "nullable": true,
                "faker": "fake()->dateTime()",
                "order": 8,
                "id": 59,
                "createdAt": "2025-01-24 12:52:51",
                "updatedAt": "2025-01-27 14:50:30",
                "options": []
            },
            "item_60": {
                "name": "updated_at",
                "type": "timestamp",
                "tableId": 10,
                "removed": false,
                "schemaState": {
                    "name": "updated_at",
                    "nullable": true,
                    "type": "timestamp",
                    "options": []
                },
                "nullable": true,
                "faker": "fake()->dateTime()",
                "order": 9,
                "id": 60,
                "createdAt": "2025-01-24 12:52:51",
                "updatedAt": "2025-01-27 14:50:30",
                "options": []
            },
            "item_61": {
                "name": "service_id",
                "type": "bigInteger",
                "index": true,
                "tableId": 10,
                "removed": false,
                "schemaState": {
                    "name": "service_id",
                    "unsigned": true,
                    "autoIncrement": false,
                    "type": "bigInteger",
                    "index": true,
                    "options": []
                },
                "unsigned": true,
                "autoIncrement": false,
                "faker": "fake()->word()",
                "id": 61,
                "createdAt": "2025-01-24 12:53:07",
                "updatedAt": "2025-01-27 14:50:30",
                "order": 1,
                "options": []
            },
            "item_62": {
                "name": "name",
                "type": "string",
                "length": 255,
                "tableId": 10,
                "removed": false,
                "schemaState": {
                    "name": "name",
                    "length": 255,
                    "type": "string",
                    "options": []
                },
                "faker": "fake()->name()",
                "id": 62,
                "createdAt": "2025-01-24 12:53:15",
                "updatedAt": "2025-01-27 14:50:30",
                "order": 2,
                "options": []
            },
            "item_63": {
                "name": "description",
                "type": "string",
                "length": 255,
                "tableId": 10,
                "removed": false,
                "schemaState": {
                    "name": "description",
                    "length": 255,
                    "nullable": true,
                    "type": "string",
                    "options": []
                },
                "nullable": true,
                "faker": "fake()->sentence(15)",
                "id": 63,
                "createdAt": "2025-01-24 12:53:18",
                "updatedAt": "2025-01-27 14:50:30",
                "order": 3,
                "options": []
            },
            "item_64": {
                "name": "image",
                "type": "string",
                "length": 255,
                "tableId": 10,
                "removed": false,
                "schemaState": {
                    "name": "image",
                    "length": 255,
                    "nullable": true,
                    "type": "string",
                    "options": []
                },
                "nullable": true,
                "faker": "fake()->word()",
                "id": 64,
                "createdAt": "2025-01-24 12:53:47",
                "updatedAt": "2025-01-27 14:50:30",
                "order": 4,
                "options": []
            },
            "item_65": {
                "name": "status",
                "type": "enum",
                "tableId": 10,
                "removed": false,
                "schemaState": {
                    "name": "status",
                    "nullable": true,
                    "type": "enum",
                    "default": "Active",
                    "options": [
                        "Active",
                        "Inactive"
                    ]
                },
                "nullable": true,
                "default": "Active",
                "faker": "fake()->word()",
                "id": 65,
                "createdAt": "2025-01-24 12:54:12",
                "updatedAt": "2025-01-27 14:50:30",
                "order": 5,
                "options": [
                    "Active",
                    "Inactive"
                ]
            },
            "item_66": {
                "name": "price",
                "type": "double",
                "tableId": 10,
                "removed": false,
                "schemaState": {
                    "name": "price",
                    "type": "double",
                    "options": []
                },
                "faker": "fake()->randomFloat(2, 0, 9999)",
                "id": 66,
                "createdAt": "2025-01-24 12:54:31",
                "updatedAt": "2025-01-27 14:50:30",
                "order": 6,
                "options": []
            },
            "item_67": {
                "name": "has_template",
                "type": "boolean",
                "tableId": 10,
                "removed": false,
                "schemaState": {
                    "name": "has_template",
                    "type": "boolean",
                    "default": 0,
                    "options": []
                },
                "default": 0,
                "faker": "fake()->word()",
                "id": 67,
                "createdAt": "2025-01-24 12:54:39",
                "updatedAt": "2025-01-27 14:50:30",
                "order": 7,
                "options": []
            },
            "item_76": {
                "name": "id",
                "type": "bigInteger",
                "index": false,
                "length": null,
                "unique": false,
                "tableId": 12,
                "removed": false,
                "schemaState": {
                    "name": "id",
                    "unsigned": true,
                    "autoIncrement": true,
                    "type": "bigInteger",
                    "options": []
                },
                "nullable": false,
                "unsigned": true,
                "default": "",
                "autoIncrement": true,
                "faker": "",
                "order": 0,
                "id": 76,
                "createdAt": "2025-01-24 14:46:30",
                "updatedAt": "2025-01-27 14:50:30",
                "options": []
            },
            "item_77": {
                "name": "created_at",
                "type": "timestamp",
                "tableId": 12,
                "removed": false,
                "schemaState": {
                    "name": "created_at",
                    "nullable": true,
                    "type": "timestamp",
                    "options": []
                },
                "nullable": true,
                "faker": "fake()->dateTime()",
                "order": 6,
                "id": 77,
                "createdAt": "2025-01-24 14:46:30",
                "updatedAt": "2025-01-27 14:50:30",
                "options": []
            },
            "item_78": {
                "name": "updated_at",
                "type": "timestamp",
                "tableId": 12,
                "removed": false,
                "schemaState": {
                    "name": "updated_at",
                    "nullable": true,
                    "type": "timestamp",
                    "options": []
                },
                "nullable": true,
                "faker": "fake()->dateTime()",
                "order": 7,
                "id": 78,
                "createdAt": "2025-01-24 14:46:30",
                "updatedAt": "2025-01-27 14:50:30",
                "options": []
            },
            "item_79": {
                "name": "holder_name",
                "type": "string",
                "length": 255,
                "tableId": 12,
                "removed": false,
                "schemaState": {
                    "name": "holder_name",
                    "length": 255,
                    "type": "string",
                    "options": []
                },
                "faker": "fake()->word()",
                "id": 79,
                "createdAt": "2025-01-24 14:46:35",
                "updatedAt": "2025-01-27 14:50:30",
                "order": 2,
                "options": []
            },
            "item_80": {
                "name": "card_number",
                "type": "text",
                "tableId": 12,
                "removed": false,
                "schemaState": {
                    "name": "card_number",
                    "nullable": true,
                    "type": "text",
                    "options": []
                },
                "nullable": true,
                "faker": "fake()->word()",
                "id": 80,
                "createdAt": "2025-01-24 14:47:18",
                "updatedAt": "2025-01-27 14:50:30",
                "order": 3,
                "options": []
            },
            "item_81": {
                "name": "valid_date",
                "type": "string",
                "length": 255,
                "tableId": 12,
                "removed": false,
                "schemaState": {
                    "name": "valid_date",
                    "length": 255,
                    "nullable": true,
                    "type": "string",
                    "options": []
                },
                "nullable": true,
                "faker": "fake()->word()",
                "id": 81,
                "createdAt": "2025-01-24 14:47:54",
                "updatedAt": "2025-01-27 14:50:30",
                "order": 4,
                "options": []
            },
            "item_82": {
                "name": "default",
                "type": "enum",
                "tableId": 12,
                "removed": false,
                "schemaState": {
                    "name": "default",
                    "type": "enum",
                    "options": [
                        "yes",
                        "no"
                    ]
                },
                "faker": "fake()->word()",
                "id": 82,
                "createdAt": "2025-01-24 14:48:02",
                "updatedAt": "2025-01-27 14:50:30",
                "order": 5,
                "options": [
                    "yes",
                    "no"
                ]
            },
            "item_83": {
                "name": "user_id",
                "type": "bigInteger",
                "index": true,
                "tableId": 12,
                "removed": false,
                "schemaState": {
                    "name": "user_id",
                    "unsigned": true,
                    "autoIncrement": false,
                    "type": "bigInteger",
                    "index": true,
                    "options": []
                },
                "unsigned": true,
                "autoIncrement": false,
                "faker": "fake()->word()",
                "id": 83,
                "createdAt": "2025-01-24 14:49:07",
                "updatedAt": "2025-01-27 14:50:30",
                "order": 1,
                "options": []
            },
            "item_107": {
                "name": "id",
                "type": "bigInteger",
                "index": false,
                "length": null,
                "unique": false,
                "tableId": 15,
                "removed": false,
                "schemaState": {
                    "name": "id",
                    "unsigned": true,
                    "autoIncrement": true,
                    "type": "bigInteger",
                    "options": []
                },
                "nullable": false,
                "unsigned": true,
                "default": "",
                "autoIncrement": true,
                "faker": "",
                "order": 0,
                "id": 107,
                "createdAt": "2025-01-24 15:25:29",
                "updatedAt": "2025-01-27 14:50:30",
                "options": []
            },
            "item_108": {
                "name": "created_at",
                "type": "timestamp",
                "tableId": 15,
                "removed": false,
                "schemaState": {
                    "name": "created_at",
                    "nullable": true,
                    "type": "timestamp",
                    "options": []
                },
                "nullable": true,
                "faker": "fake()->dateTime()",
                "order": 7,
                "id": 108,
                "createdAt": "2025-01-24 15:25:29",
                "updatedAt": "2025-01-27 14:50:30",
                "options": []
            },
            "item_109": {
                "name": "updated_at",
                "type": "timestamp",
                "tableId": 15,
                "removed": false,
                "schemaState": {
                    "name": "updated_at",
                    "nullable": true,
                    "type": "timestamp",
                    "options": []
                },
                "nullable": true,
                "faker": "fake()->dateTime()",
                "order": 8,
                "id": 109,
                "createdAt": "2025-01-24 15:25:29",
                "updatedAt": "2025-01-27 14:50:30",
                "options": []
            },
            "item_110": {
                "name": "sub_service_id",
                "type": "bigInteger",
                "index": true,
                "tableId": 15,
                "removed": false,
                "schemaState": {
                    "name": "sub_service_id",
                    "unsigned": true,
                    "autoIncrement": false,
                    "type": "bigInteger",
                    "index": true,
                    "options": []
                },
                "unsigned": true,
                "autoIncrement": false,
                "faker": "fake()->word()",
                "id": 110,
                "createdAt": "2025-01-24 15:25:40",
                "updatedAt": "2025-01-27 14:50:30",
                "order": 1,
                "options": []
            },
            "item_111": {
                "name": "name",
                "type": "string",
                "length": 255,
                "tableId": 15,
                "removed": false,
                "schemaState": {
                    "name": "name",
                    "length": 255,
                    "type": "string",
                    "options": []
                },
                "faker": "fake()->name()",
                "id": 111,
                "createdAt": "2025-01-24 15:26:22",
                "updatedAt": "2025-01-27 14:50:30",
                "order": 2,
                "options": []
            },
            "item_112": {
                "name": "description",
                "type": "text",
                "tableId": 15,
                "removed": false,
                "schemaState": {
                    "name": "description",
                    "nullable": true,
                    "type": "text",
                    "options": []
                },
                "nullable": true,
                "faker": "fake()->sentence(15)",
                "id": 112,
                "createdAt": "2025-01-24 15:26:28",
                "updatedAt": "2025-01-27 14:50:30",
                "order": 3,
                "options": []
            },
            "item_113": {
                "name": "image",
                "type": "string",
                "length": 255,
                "tableId": 15,
                "removed": false,
                "schemaState": {
                    "name": "image",
                    "length": 255,
                    "nullable": true,
                    "type": "string",
                    "options": []
                },
                "nullable": true,
                "faker": "fake()->word()",
                "id": 113,
                "createdAt": "2025-01-24 15:26:31",
                "updatedAt": "2025-01-27 14:50:30",
                "order": 4,
                "options": []
            },
            "item_114": {
                "name": "url",
                "type": "string",
                "length": 255,
                "tableId": 15,
                "removed": false,
                "schemaState": {
                    "name": "url",
                    "length": 255,
                    "nullable": true,
                    "type": "string",
                    "options": []
                },
                "nullable": true,
                "faker": "fake()->url()",
                "id": 114,
                "createdAt": "2025-01-24 15:26:38",
                "updatedAt": "2025-01-27 14:50:30",
                "order": 5,
                "options": []
            },
            "item_115": {
                "name": "status",
                "type": "enum",
                "tableId": 15,
                "removed": false,
                "schemaState": {
                    "name": "status",
                    "type": "enum",
                    "default": "Active",
                    "options": [
                        "Active",
                        "Inactive"
                    ]
                },
                "default": "Active",
                "faker": "",
                "id": 115,
                "createdAt": "2025-01-24 15:26:41",
                "updatedAt": "2025-01-27 14:50:30",
                "order": 6,
                "options": [
                    "Active",
                    "Inactive"
                ]
            },
            "item_116": {
                "name": "id",
                "type": "bigInteger",
                "index": false,
                "length": null,
                "unique": false,
                "tableId": 16,
                "removed": false,
                "schemaState": {
                    "name": "id",
                    "unsigned": true,
                    "autoIncrement": true,
                    "type": "bigInteger",
                    "options": []
                },
                "nullable": false,
                "unsigned": true,
                "default": "",
                "autoIncrement": true,
                "faker": "",
                "order": 0,
                "options": [],
                "id": 116,
                "createdAt": "2025-01-24 15:32:11",
                "updatedAt": "2025-01-27 14:50:30"
            },
            "item_117": {
                "name": "sub_service_id",
                "type": "bigInteger",
                "index": true,
                "tableId": 16,
                "removed": false,
                "schemaState": {
                    "name": "sub_service_id",
                    "unsigned": true,
                    "autoIncrement": false,
                    "type": "bigInteger",
                    "index": true,
                    "options": []
                },
                "unsigned": true,
                "autoIncrement": false,
                "faker": "fake()->randomNumber()",
                "order": 1,
                "options": [],
                "id": 117,
                "createdAt": "2025-01-24 15:32:11",
                "updatedAt": "2025-01-27 14:50:30"
            },
            "item_118": {
                "name": "name",
                "type": "string",
                "length": 255,
                "tableId": 16,
                "removed": false,
                "schemaState": {
                    "name": "name",
                    "length": 255,
                    "type": "string",
                    "options": []
                },
                "faker": "fake()->name()",
                "order": 2,
                "options": [],
                "id": 118,
                "createdAt": "2025-01-24 15:32:11",
                "updatedAt": "2025-01-27 14:50:30"
            },
            "item_119": {
                "name": "description",
                "type": "text",
                "tableId": 16,
                "removed": false,
                "schemaState": {
                    "name": "description",
                    "nullable": true,
                    "type": "text",
                    "options": []
                },
                "nullable": true,
                "faker": "fake()->sentence(15)",
                "order": 3,
                "options": [],
                "id": 119,
                "createdAt": "2025-01-24 15:32:11",
                "updatedAt": "2025-01-27 14:50:30"
            },
            "item_120": {
                "name": "price",
                "type": "double",
                "tableId": 16,
                "removed": false,
                "schemaState": {
                    "name": "price",
                    "nullable": true,
                    "type": "double",
                    "options": []
                },
                "nullable": true,
                "faker": "fake()->randomFloat(2, 0, 9999)",
                "order": 4,
                "options": [],
                "id": 120,
                "createdAt": "2025-01-24 15:32:11",
                "updatedAt": "2025-01-27 14:50:30"
            },
            "item_121": {
                "name": "status",
                "type": "enum",
                "tableId": 16,
                "removed": false,
                "schemaState": {
                    "name": "status",
                    "type": "enum",
                    "default": "Active",
                    "options": [
                        "Active",
                        "Inactive"
                    ]
                },
                "default": "Active",
                "faker": "fake()->word()",
                "order": 5,
                "options": [
                    "Active",
                    "Inactive"
                ],
                "id": 121,
                "createdAt": "2025-01-24 15:32:11",
                "updatedAt": "2025-01-27 14:50:30"
            },
            "item_122": {
                "name": "created_at",
                "type": "timestamp",
                "tableId": 16,
                "removed": false,
                "schemaState": {
                    "name": "created_at",
                    "nullable": true,
                    "type": "timestamp",
                    "options": []
                },
                "nullable": true,
                "faker": "fake()->dateTime()",
                "order": 6,
                "options": [],
                "id": 122,
                "createdAt": "2025-01-24 15:32:11",
                "updatedAt": "2025-01-27 14:50:30"
            },
            "item_123": {
                "name": "updated_at",
                "type": "timestamp",
                "tableId": 16,
                "removed": false,
                "schemaState": {
                    "name": "updated_at",
                    "nullable": true,
                    "type": "timestamp",
                    "options": []
                },
                "nullable": true,
                "faker": "fake()->dateTime()",
                "order": 7,
                "options": [],
                "id": 123,
                "createdAt": "2025-01-24 15:32:11",
                "updatedAt": "2025-01-27 14:50:30"
            },
            "item_124": {
                "name": "id",
                "type": "bigInteger",
                "index": false,
                "length": null,
                "unique": false,
                "tableId": 17,
                "removed": false,
                "schemaState": {
                    "name": "id",
                    "unsigned": true,
                    "autoIncrement": true,
                    "type": "bigInteger",
                    "options": []
                },
                "nullable": false,
                "unsigned": true,
                "default": "",
                "autoIncrement": true,
                "faker": "",
                "order": 0,
                "id": 124,
                "createdAt": "2025-01-24 16:46:39",
                "updatedAt": "2025-01-27 14:50:30",
                "options": []
            },
            "item_125": {
                "name": "created_at",
                "type": "timestamp",
                "tableId": 17,
                "removed": false,
                "schemaState": {
                    "name": "created_at",
                    "nullable": true,
                    "type": "timestamp",
                    "options": []
                },
                "nullable": true,
                "faker": "fake()->dateTime()",
                "order": 4,
                "id": 125,
                "createdAt": "2025-01-24 16:46:39",
                "updatedAt": "2025-01-27 14:50:30",
                "options": []
            },
            "item_126": {
                "name": "updated_at",
                "type": "timestamp",
                "tableId": 17,
                "removed": false,
                "schemaState": {
                    "name": "updated_at",
                    "nullable": true,
                    "type": "timestamp",
                    "options": []
                },
                "nullable": true,
                "faker": "fake()->dateTime()",
                "order": 5,
                "id": 126,
                "createdAt": "2025-01-24 16:46:39",
                "updatedAt": "2025-01-27 14:50:30",
                "options": []
            },
            "item_127": {
                "name": "name",
                "type": "string",
                "length": 255,
                "tableId": 17,
                "removed": false,
                "schemaState": {
                    "name": "name",
                    "length": 255,
                    "type": "string",
                    "options": []
                },
                "faker": "fake()->name()",
                "id": 127,
                "createdAt": "2025-01-24 16:46:43",
                "updatedAt": "2025-01-27 14:50:30",
                "order": 1,
                "options": []
            },
            "item_128": {
                "name": "decription",
                "type": "text",
                "tableId": 17,
                "removed": false,
                "schemaState": {
                    "name": "decription",
                    "type": "text",
                    "options": []
                },
                "faker": "fake()->word()",
                "id": 128,
                "createdAt": "2025-01-24 16:46:49",
                "updatedAt": "2025-01-27 14:50:30",
                "order": 2,
                "options": []
            },
            "item_129": {
                "name": "status",
                "type": "enum",
                "tableId": 17,
                "removed": false,
                "schemaState": {
                    "name": "status",
                    "type": "enum",
                    "default": "Active",
                    "options": [
                        "Active",
                        "Inactive"
                    ]
                },
                "default": "Active",
                "faker": "",
                "id": 129,
                "createdAt": "2025-01-24 16:46:57",
                "updatedAt": "2025-01-27 14:50:30",
                "order": 3,
                "options": [
                    "Active",
                    "Inactive"
                ]
            },
            "item_159": {
                "name": "id",
                "type": "bigInteger",
                "tableId": 21,
                "removed": false,
                "schemaState": {
                    "name": "id",
                    "unsigned": true,
                    "autoIncrement": true,
                    "type": "bigInteger",
                    "options": []
                },
                "unsigned": true,
                "autoIncrement": true,
                "order": 0,
                "id": 159,
                "createdAt": "2025-01-27 14:47:18",
                "updatedAt": "2025-01-27 14:50:30",
                "options": []
            },
            "item_160": {
                "name": "created_at",
                "type": "timestamp",
                "tableId": 21,
                "removed": false,
                "schemaState": {
                    "name": "created_at",
                    "nullable": true,
                    "type": "timestamp",
                    "options": []
                },
                "nullable": true,
                "faker": "fake()->dateTime()",
                "order": 7,
                "id": 160,
                "createdAt": "2025-01-27 14:47:18",
                "updatedAt": "2025-01-27 14:50:30",
                "options": []
            },
            "item_161": {
                "name": "updated_at",
                "type": "timestamp",
                "tableId": 21,
                "removed": false,
                "schemaState": {
                    "name": "updated_at",
                    "nullable": true,
                    "type": "timestamp",
                    "options": []
                },
                "nullable": true,
                "faker": "fake()->dateTime()",
                "order": 8,
                "id": 161,
                "createdAt": "2025-01-27 14:47:18",
                "updatedAt": "2025-01-27 14:50:30",
                "options": []
            },
            "item_162": {
                "name": "name",
                "type": "string",
                "length": 255,
                "tableId": 21,
                "removed": false,
                "schemaState": {
                    "name": "name",
                    "length": 255,
                    "nullable": true,
                    "type": "string",
                    "options": []
                },
                "nullable": true,
                "faker": "fake()->name()",
                "id": 162,
                "createdAt": "2025-01-27 14:47:24",
                "updatedAt": "2025-01-27 14:50:30",
                "order": 1,
                "options": []
            },
            "item_163": {
                "name": "bio",
                "type": "text",
                "tableId": 21,
                "removed": false,
                "schemaState": {
                    "name": "bio",
                    "nullable": true,
                    "type": "text",
                    "options": []
                },
                "nullable": true,
                "faker": "fake()->sentence(15)",
                "id": 163,
                "createdAt": "2025-01-27 14:47:30",
                "updatedAt": "2025-01-27 14:50:30",
                "order": 2,
                "options": []
            },
            "item_164": {
                "name": "lat",
                "type": "string",
                "length": 255,
                "tableId": 21,
                "removed": false,
                "schemaState": {
                    "name": "lat",
                    "length": 255,
                    "nullable": true,
                    "type": "string",
                    "options": []
                },
                "nullable": true,
                "faker": "fake()->word()",
                "id": 164,
                "createdAt": "2025-01-27 14:47:46",
                "updatedAt": "2025-01-27 14:50:30",
                "order": 3,
                "options": []
            },
            "item_165": {
                "name": "long",
                "type": "string",
                "length": 255,
                "tableId": 21,
                "removed": false,
                "schemaState": {
                    "name": "long",
                    "length": 255,
                    "nullable": true,
                    "type": "string",
                    "options": []
                },
                "nullable": true,
                "faker": "fake()->word()",
                "id": 165,
                "createdAt": "2025-01-27 14:47:55",
                "updatedAt": "2025-01-27 14:50:30",
                "order": 4,
                "options": []
            },
            "item_166": {
                "name": "address",
                "type": "string",
                "length": 255,
                "tableId": 21,
                "removed": false,
                "schemaState": {
                    "name": "address",
                    "length": 255,
                    "nullable": true,
                    "type": "string",
                    "options": []
                },
                "nullable": true,
                "faker": "fake()->address()",
                "id": 166,
                "createdAt": "2025-01-27 14:48:05",
                "updatedAt": "2025-01-27 14:50:30",
                "order": 5,
                "options": []
            },
            "item_167": {
                "name": "image",
                "type": "text",
                "tableId": 21,
                "removed": false,
                "schemaState": {
                    "name": "image",
                    "nullable": true,
                    "type": "text",
                    "options": []
                },
                "nullable": true,
                "faker": "fake()->word()",
                "id": 167,
                "createdAt": "2025-01-27 14:48:27",
                "updatedAt": "2025-01-27 14:50:30",
                "order": 6,
                "options": []
            }
        },
        "models": {
            "item_1": {
                "projectId": 1,
                "name": "User",
                "fileName": "User.php",
                "tableName": "users",
                "class": "App\\Models\\User",
                "namespace": "App\\Models",
                "path": "Models/User.php",
                "casts": {
                    "email_verified_at": "datetime",
                    "password": "hashed"
                },
                "fillable": [
                    "name",
                    "email",
                    "password"
                ],
                "guarded": [
                    "*"
                ],
                "dates": [],
                "hidden": [
                    "password",
                    "remember_token"
                ],
                "appends": [],
                "methods": [],
                "createdFromInterface": false,
                "parentClass": "Illuminate\\Foundation\\Auth\\User as Authenticatable",
                "interfaces": [],
                "traits": [
                    "Illuminate\\Database\\Eloquent\\Factories\\HasFactory",
                    "Illuminate\\Notifications\\Notifiable"
                ],
                "allImports": [
                    "Illuminate\\Notifications\\Notifiable",
                    "Illuminate\\Contracts\\Auth\\MustVerifyEmail",
                    "Illuminate\\Database\\Eloquent\\Factories\\HasFactory",
                    "Illuminate\\Foundation\\Auth\\User as Authenticatable"
                ],
                "hasGuarded": false,
                "hasFillable": true,
                "hasTimestamps": true,
                "hasSoftDeletes": false,
                "isAuthenticatable": true,
                "schemaState": {
                    "name": "User",
                    "fileName": "User.php",
                    "tableName": "users",
                    "class": "App\\Models\\User",
                    "namespace": "App\\Models",
                    "path": "Models/User.php",
                    "casts": {
                        "email_verified_at": "datetime",
                        "password": "hashed"
                    },
                    "fillable": [
                        "name",
                        "email",
                        "password"
                    ],
                    "guarded": [
                        "*"
                    ],
                    "dates": [],
                    "hidden": [
                        "password",
                        "remember_token"
                    ],
                    "appends": [],
                    "methods": [],
                    "parentClass": "Illuminate\\Foundation\\Auth\\User as Authenticatable",
                    "interfaces": [],
                    "traits": [
                        "Illuminate\\Database\\Eloquent\\Factories\\HasFactory",
                        "Illuminate\\Notifications\\Notifiable"
                    ],
                    "allImports": [
                        "Illuminate\\Notifications\\Notifiable",
                        "Illuminate\\Contracts\\Auth\\MustVerifyEmail",
                        "Illuminate\\Database\\Eloquent\\Factories\\HasFactory",
                        "Illuminate\\Foundation\\Auth\\User as Authenticatable"
                    ],
                    "hasGuarded": false,
                    "hasFillable": true,
                    "hasTimestamps": true,
                    "hasSoftDeletes": false,
                    "isAuthenticatable": true
                },
                "id": 1,
                "createdAt": "2025-01-24 12:02:52",
                "updatedAt": "2025-01-27 14:50:51",
                "plural": "Users",
                "pluralAndSingularAreSame": false,
                "tableId": 1,
                "callSeeder": false,
                "seederQuantity": 5,
                "attributesComments": true,
                "methodsComments": true,
                "removed": false,
                "hooksWhenSchemaWasRead": {}
            },
            "__tableData": {
                "count": 8,
                "lastPrimaryKey": 18,
                "index": {
                    "1": {
                        "hasMany": {
                            "fillable_model_column.modelId": [
                                1,
                                2,
                                3
                            ],
                            "hidden_model_column.modelId": [
                                1,
                                2
                            ],
                            "casts_model_column.modelId": [
                                1,
                                2
                            ],
                            "relationships.modelId": [
                                5
                            ],
                            "relationships.relatedModelId": [
                                6
                            ]
                        }
                    },
                    "2": {
                        "hasMany": {
                            "fillable_model_column.modelId": [
                                4,
                                5,
                                6
                            ],
                            "cruds.modelId": [
                                1
                            ],
                            "relationships.modelId": [
                                1
                            ],
                            "relationships.relatedModelId": [
                                2
                            ]
                        }
                    },
                    "3": {
                        "hasMany": {
                            "relationships.relatedModelId": [
                                1,
                                13,
                                14
                            ],
                            "relationships.modelId": [
                                2,
                                12,
                                15
                            ],
                            "cruds.modelId": [
                                2
                            ]
                        }
                    },
                    "5": {
                        "hasMany": {
                            "relationships.relatedModelId": [
                                5
                            ],
                            "relationships.modelId": [
                                6
                            ],
                            "cruds.modelId": []
                        }
                    },
                    "11": {
                        "hasMany": {
                            "relationships.relatedModelId": [
                                12
                            ],
                            "relationships.modelId": [
                                13
                            ],
                            "cruds.modelId": [
                                7
                            ]
                        }
                    },
                    "12": {
                        "hasMany": {
                            "relationships.modelId": [
                                14
                            ],
                            "relationships.relatedModelId": [
                                15
                            ],
                            "cruds.modelId": [
                                8
                            ]
                        }
                    },
                    "13": {
                        "hasMany": {
                            "cruds.modelId": [
                                9
                            ]
                        }
                    },
                    "18": {
                        "hasMany": {
                            "cruds.modelId": [
                                15
                            ]
                        }
                    }
                },
                "additionalIndexes": {},
                "items": [],
                "relations": []
            },
            "item_2": {
                "projectId": 1,
                "name": "Service",
                "fileName": "Service.php",
                "tableName": "services",
                "class": "App\\Models\\Service",
                "namespace": "App\\Models",
                "path": "Models/Service.php",
                "casts": [],
                "fillable": [
                    "title",
                    "description",
                    "image"
                ],
                "guarded": [
                    "*"
                ],
                "dates": [],
                "hidden": [],
                "appends": [],
                "methods": [],
                "createdFromInterface": false,
                "parentClass": "Illuminate\\Database\\Eloquent\\Model",
                "interfaces": [],
                "traits": [],
                "allImports": [
                    "Illuminate\\Database\\Eloquent\\Model"
                ],
                "hasGuarded": false,
                "hasFillable": true,
                "hasTimestamps": true,
                "hasSoftDeletes": false,
                "isAuthenticatable": false,
                "schemaState": {
                    "name": "Service",
                    "fileName": "Service.php",
                    "tableName": "services",
                    "class": "App\\Models\\Service",
                    "namespace": "App\\Models",
                    "path": "Models/Service.php",
                    "casts": [],
                    "fillable": [
                        "title",
                        "description",
                        "image"
                    ],
                    "guarded": [
                        "*"
                    ],
                    "dates": [],
                    "hidden": [],
                    "appends": [],
                    "methods": [],
                    "parentClass": "Illuminate\\Database\\Eloquent\\Model",
                    "interfaces": [],
                    "traits": [],
                    "allImports": [
                        "Illuminate\\Database\\Eloquent\\Model"
                    ],
                    "hasGuarded": false,
                    "hasFillable": true,
                    "hasTimestamps": true,
                    "hasSoftDeletes": false,
                    "isAuthenticatable": false
                },
                "id": 2,
                "createdAt": "2025-01-24 12:23:53",
                "updatedAt": "2025-01-27 14:50:51",
                "plural": "Services",
                "pluralAndSingularAreSame": false,
                "tableId": 9,
                "callSeeder": true,
                "seederQuantity": 5,
                "attributesComments": false,
                "methodsComments": false,
                "removed": false,
                "hooksWhenSchemaWasRead": {}
            },
            "item_3": {
                "tableId": 10,
                "projectId": 1,
                "namespace": "App\\Models",
                "hasGuarded": true,
                "hasTimestamps": true,
                "guarded": [],
                "name": "SubService",
                "plural": "SubServices",
                "pluralAndSingularAreSame": false,
                "class": "App\\Models\\SubService",
                "fileName": "SubService.php",
                "createdFromInterface": false,
                "parentClass": "Illuminate\\Database\\Eloquent\\Model",
                "traits": [
                    "Illuminate\\Database\\Eloquent\\Factories\\HasFactory"
                ],
                "interfaces": [],
                "callSeeder": true,
                "seederQuantity": 5,
                "attributesComments": false,
                "methodsComments": false,
                "methods": [],
                "allImports": [
                    "Illuminate\\Database\\Eloquent\\Model",
                    "Illuminate\\Database\\Eloquent\\Factories\\HasFactory"
                ],
                "fillable": [],
                "hidden": [],
                "dates": [],
                "casts": [],
                "appends": [],
                "id": 3,
                "createdAt": "2025-01-24 12:52:51",
                "updatedAt": "2025-01-27 14:50:51",
                "hooksWhenSchemaWasRead": {},
                "removed": false,
                "tableName": "sub_services",
                "path": "Models/SubService.php",
                "hasFillable": false,
                "hasSoftDeletes": false,
                "isAuthenticatable": false,
                "schemaState": {
                    "name": "SubService",
                    "fileName": "SubService.php",
                    "tableName": "sub_services",
                    "class": "App\\Models\\SubService",
                    "namespace": "App\\Models",
                    "path": "Models/SubService.php",
                    "casts": [],
                    "fillable": [],
                    "guarded": [],
                    "dates": [],
                    "hidden": [],
                    "appends": [],
                    "methods": [],
                    "parentClass": "Illuminate\\Database\\Eloquent\\Model",
                    "interfaces": [],
                    "traits": [
                        "Illuminate\\Database\\Eloquent\\Factories\\HasFactory"
                    ],
                    "allImports": [
                        "Illuminate\\Database\\Eloquent\\Model",
                        "Illuminate\\Database\\Eloquent\\Factories\\HasFactory"
                    ],
                    "hasGuarded": true,
                    "hasFillable": false,
                    "hasTimestamps": true,
                    "hasSoftDeletes": false,
                    "isAuthenticatable": false
                }
            },
            "item_5": {
                "tableId": 12,
                "projectId": 1,
                "namespace": "App\\Models",
                "hasGuarded": true,
                "hasTimestamps": true,
                "guarded": [],
                "name": "UserCard",
                "plural": "UserCards",
                "pluralAndSingularAreSame": false,
                "class": "App\\Models\\UserCard",
                "fileName": "UserCard.php",
                "createdFromInterface": false,
                "parentClass": "Illuminate\\Database\\Eloquent\\Model",
                "traits": [
                    "Illuminate\\Database\\Eloquent\\Factories\\HasFactory"
                ],
                "interfaces": [],
                "callSeeder": true,
                "seederQuantity": 5,
                "attributesComments": false,
                "methodsComments": false,
                "methods": [],
                "allImports": [
                    "Illuminate\\Database\\Eloquent\\Model",
                    "Illuminate\\Database\\Eloquent\\Factories\\HasFactory"
                ],
                "fillable": [],
                "hidden": [],
                "dates": [],
                "casts": [],
                "appends": [],
                "id": 5,
                "createdAt": "2025-01-24 14:46:30",
                "updatedAt": "2025-01-27 14:50:51",
                "hasFillable": false,
                "removed": false,
                "tableName": "user_cards",
                "path": "Models/UserCard.php",
                "hasSoftDeletes": false,
                "isAuthenticatable": false,
                "schemaState": {
                    "name": "UserCard",
                    "fileName": "UserCard.php",
                    "tableName": "user_cards",
                    "class": "App\\Models\\UserCard",
                    "namespace": "App\\Models",
                    "path": "Models/UserCard.php",
                    "casts": [],
                    "fillable": [],
                    "guarded": [],
                    "dates": [],
                    "hidden": [],
                    "appends": [],
                    "methods": [],
                    "parentClass": "Illuminate\\Database\\Eloquent\\Model",
                    "interfaces": [],
                    "traits": [
                        "Illuminate\\Database\\Eloquent\\Factories\\HasFactory"
                    ],
                    "allImports": [
                        "Illuminate\\Database\\Eloquent\\Model",
                        "Illuminate\\Database\\Eloquent\\Factories\\HasFactory"
                    ],
                    "hasGuarded": true,
                    "hasFillable": false,
                    "hasTimestamps": true,
                    "hasSoftDeletes": false,
                    "isAuthenticatable": false
                },
                "hooksWhenSchemaWasRead": {}
            },
            "item_11": {
                "tableId": 15,
                "projectId": 1,
                "namespace": "App\\Models",
                "hasGuarded": true,
                "hasTimestamps": true,
                "guarded": [],
                "name": "SubServiceTemplate",
                "plural": "SubServiceTemplates",
                "pluralAndSingularAreSame": false,
                "class": "App\\Models\\SubServiceTemplate",
                "fileName": "SubServiceTemplate.php",
                "createdFromInterface": false,
                "parentClass": "Illuminate\\Database\\Eloquent\\Model",
                "traits": [
                    "Illuminate\\Database\\Eloquent\\Factories\\HasFactory"
                ],
                "interfaces": [],
                "callSeeder": true,
                "seederQuantity": 5,
                "attributesComments": false,
                "methodsComments": false,
                "methods": [],
                "allImports": [
                    "Illuminate\\Database\\Eloquent\\Model",
                    "Illuminate\\Database\\Eloquent\\Factories\\HasFactory"
                ],
                "fillable": [],
                "hidden": [],
                "dates": [],
                "casts": [],
                "appends": [],
                "id": 11,
                "createdAt": "2025-01-24 15:25:29",
                "updatedAt": "2025-01-27 14:50:51",
                "hooksWhenSchemaWasRead": {},
                "removed": false,
                "tableName": "sub_service_templates",
                "path": "Models/SubServiceTemplate.php",
                "hasFillable": false,
                "hasSoftDeletes": false,
                "isAuthenticatable": false,
                "schemaState": {
                    "name": "SubServiceTemplate",
                    "fileName": "SubServiceTemplate.php",
                    "tableName": "sub_service_templates",
                    "class": "App\\Models\\SubServiceTemplate",
                    "namespace": "App\\Models",
                    "path": "Models/SubServiceTemplate.php",
                    "casts": [],
                    "fillable": [],
                    "guarded": [],
                    "dates": [],
                    "hidden": [],
                    "appends": [],
                    "methods": [],
                    "parentClass": "Illuminate\\Database\\Eloquent\\Model",
                    "interfaces": [],
                    "traits": [
                        "Illuminate\\Database\\Eloquent\\Factories\\HasFactory"
                    ],
                    "allImports": [
                        "Illuminate\\Database\\Eloquent\\Model",
                        "Illuminate\\Database\\Eloquent\\Factories\\HasFactory"
                    ],
                    "hasGuarded": true,
                    "hasFillable": false,
                    "hasTimestamps": true,
                    "hasSoftDeletes": false,
                    "isAuthenticatable": false
                }
            },
            "item_12": {
                "projectId": 1,
                "name": "DeliveryDays",
                "fileName": "DeliveryDays.php",
                "tableName": "delivery_days",
                "class": "App\\Models\\DeliveryDays",
                "namespace": "App\\Models",
                "path": "Models/DeliveryDays.php",
                "casts": [],
                "fillable": [],
                "guarded": [],
                "dates": [],
                "hidden": [],
                "appends": [],
                "methods": [],
                "createdFromInterface": false,
                "parentClass": "Illuminate\\Database\\Eloquent\\Model",
                "interfaces": [],
                "traits": [
                    "Illuminate\\Database\\Eloquent\\Factories\\HasFactory"
                ],
                "allImports": [
                    "Illuminate\\Database\\Eloquent\\Model",
                    "Illuminate\\Database\\Eloquent\\Factories\\HasFactory"
                ],
                "hasGuarded": true,
                "hasFillable": false,
                "hasTimestamps": true,
                "hasSoftDeletes": false,
                "isAuthenticatable": false,
                "schemaState": {
                    "name": "DeliveryDays",
                    "fileName": "DeliveryDays.php",
                    "tableName": "delivery_days",
                    "class": "App\\Models\\DeliveryDays",
                    "namespace": "App\\Models",
                    "path": "Models/DeliveryDays.php",
                    "casts": [],
                    "fillable": [],
                    "guarded": [],
                    "dates": [],
                    "hidden": [],
                    "appends": [],
                    "methods": [],
                    "parentClass": "Illuminate\\Database\\Eloquent\\Model",
                    "interfaces": [],
                    "traits": [
                        "Illuminate\\Database\\Eloquent\\Factories\\HasFactory"
                    ],
                    "allImports": [
                        "Illuminate\\Database\\Eloquent\\Model",
                        "Illuminate\\Database\\Eloquent\\Factories\\HasFactory"
                    ],
                    "hasGuarded": true,
                    "hasFillable": false,
                    "hasTimestamps": true,
                    "hasSoftDeletes": false,
                    "isAuthenticatable": false
                },
                "id": 12,
                "createdAt": "2025-01-24 15:32:11",
                "updatedAt": "2025-01-27 14:50:51",
                "plural": "AllDeliveryDays",
                "pluralAndSingularAreSame": false,
                "tableId": 16,
                "callSeeder": true,
                "seederQuantity": 5,
                "attributesComments": false,
                "methodsComments": false,
                "removed": false
            },
            "item_13": {
                "tableId": 17,
                "projectId": 1,
                "namespace": "App\\Models",
                "hasGuarded": true,
                "hasTimestamps": true,
                "guarded": [],
                "name": "ContentCategory",
                "plural": "ContentCategories",
                "pluralAndSingularAreSame": false,
                "class": "App\\Models\\ContentCategory",
                "fileName": "ContentCategory.php",
                "createdFromInterface": false,
                "parentClass": "Illuminate\\Database\\Eloquent\\Model",
                "traits": [
                    "Illuminate\\Database\\Eloquent\\Factories\\HasFactory"
                ],
                "interfaces": [],
                "callSeeder": true,
                "seederQuantity": 5,
                "attributesComments": false,
                "methodsComments": false,
                "methods": [],
                "allImports": [
                    "Illuminate\\Database\\Eloquent\\Model",
                    "Illuminate\\Database\\Eloquent\\Factories\\HasFactory"
                ],
                "fillable": [],
                "hidden": [],
                "dates": [],
                "casts": [],
                "appends": [],
                "id": 13,
                "createdAt": "2025-01-24 16:46:39",
                "updatedAt": "2025-01-27 14:50:51",
                "hooksWhenSchemaWasRead": {},
                "removed": false,
                "tableName": "content_category",
                "path": "Models/ContentCategory.php",
                "hasFillable": false,
                "hasSoftDeletes": false,
                "isAuthenticatable": false,
                "schemaState": {
                    "name": "ContentCategory",
                    "fileName": "ContentCategory.php",
                    "tableName": "content_category",
                    "class": "App\\Models\\ContentCategory",
                    "namespace": "App\\Models",
                    "path": "Models/ContentCategory.php",
                    "casts": [],
                    "fillable": [],
                    "guarded": [],
                    "dates": [],
                    "hidden": [],
                    "appends": [],
                    "methods": [],
                    "parentClass": "Illuminate\\Database\\Eloquent\\Model",
                    "interfaces": [],
                    "traits": [
                        "Illuminate\\Database\\Eloquent\\Factories\\HasFactory"
                    ],
                    "allImports": [
                        "Illuminate\\Database\\Eloquent\\Model",
                        "Illuminate\\Database\\Eloquent\\Factories\\HasFactory"
                    ],
                    "hasGuarded": true,
                    "hasFillable": false,
                    "hasTimestamps": true,
                    "hasSoftDeletes": false,
                    "isAuthenticatable": false
                }
            },
            "item_18": {
                "tableId": 21,
                "projectId": 1,
                "namespace": "App\\Models",
                "hasGuarded": true,
                "hasTimestamps": true,
                "guarded": [],
                "name": "Influencer",
                "plural": "Influencers",
                "pluralAndSingularAreSame": false,
                "class": "App\\Models\\Influencer",
                "fileName": "Influencer.php",
                "createdFromInterface": false,
                "parentClass": "Illuminate\\Database\\Eloquent\\Model",
                "traits": [
                    "Illuminate\\Database\\Eloquent\\Factories\\HasFactory"
                ],
                "interfaces": [],
                "callSeeder": true,
                "seederQuantity": 5,
                "attributesComments": false,
                "methodsComments": false,
                "methods": [],
                "allImports": [
                    "Illuminate\\Database\\Eloquent\\Model",
                    "Illuminate\\Database\\Eloquent\\Factories\\HasFactory"
                ],
                "fillable": [],
                "hidden": [],
                "dates": [],
                "casts": [],
                "appends": [],
                "id": 18,
                "createdAt": "2025-01-27 14:47:18",
                "updatedAt": "2025-01-27 14:50:51",
                "hooksWhenSchemaWasRead": {},
                "removed": false,
                "tableName": "influencers",
                "path": "Models/Influencer.php",
                "hasFillable": false,
                "hasSoftDeletes": false,
                "isAuthenticatable": false,
                "schemaState": {
                    "name": "Influencer",
                    "fileName": "Influencer.php",
                    "tableName": "influencers",
                    "class": "App\\Models\\Influencer",
                    "namespace": "App\\Models",
                    "path": "Models/Influencer.php",
                    "casts": [],
                    "fillable": [],
                    "guarded": [],
                    "dates": [],
                    "hidden": [],
                    "appends": [],
                    "methods": [],
                    "parentClass": "Illuminate\\Database\\Eloquent\\Model",
                    "interfaces": [],
                    "traits": [
                        "Illuminate\\Database\\Eloquent\\Factories\\HasFactory"
                    ],
                    "allImports": [
                        "Illuminate\\Database\\Eloquent\\Model",
                        "Illuminate\\Database\\Eloquent\\Factories\\HasFactory"
                    ],
                    "hasGuarded": true,
                    "hasFillable": false,
                    "hasTimestamps": true,
                    "hasSoftDeletes": false,
                    "isAuthenticatable": false
                }
            }
        },
        "fillable_model_column": {
            "item_1": {
                "modelId": 1,
                "columnId": 2,
                "id": 1,
                "createdAt": "2025-01-24 12:02:52",
                "updatedAt": "2025-01-24 12:02:52"
            },
            "__tableData": {
                "count": 6,
                "lastPrimaryKey": 11,
                "index": {
                    "1": {
                        "hasMany": {}
                    },
                    "2": {
                        "hasMany": {}
                    },
                    "3": {
                        "hasMany": {}
                    },
                    "4": {
                        "hasMany": {}
                    },
                    "5": {
                        "hasMany": {}
                    },
                    "6": {
                        "hasMany": {}
                    }
                },
                "additionalIndexes": {},
                "items": [],
                "relations": []
            },
            "item_2": {
                "modelId": 1,
                "columnId": 3,
                "id": 2,
                "createdAt": "2025-01-24 12:02:52",
                "updatedAt": "2025-01-24 12:02:52"
            },
            "item_3": {
                "modelId": 1,
                "columnId": 5,
                "id": 3,
                "createdAt": "2025-01-24 12:02:52",
                "updatedAt": "2025-01-24 12:02:52"
            },
            "item_4": {
                "modelId": 2,
                "columnId": 53,
                "id": 4,
                "createdAt": "2025-01-24 12:23:53",
                "updatedAt": "2025-01-24 12:23:53"
            },
            "item_5": {
                "modelId": 2,
                "columnId": 54,
                "id": 5,
                "createdAt": "2025-01-24 12:23:53",
                "updatedAt": "2025-01-24 12:23:53"
            },
            "item_6": {
                "modelId": 2,
                "columnId": 55,
                "id": 6,
                "createdAt": "2025-01-24 12:23:53",
                "updatedAt": "2025-01-24 12:23:53"
            }
        },
        "hidden_model_column": {
            "item_1": {
                "modelId": 1,
                "columnId": 5,
                "id": 1,
                "createdAt": "2025-01-24 12:02:52",
                "updatedAt": "2025-01-24 12:02:52"
            },
            "__tableData": {
                "count": 2,
                "lastPrimaryKey": 2,
                "index": {
                    "1": {
                        "hasMany": {}
                    },
                    "2": {
                        "hasMany": {}
                    }
                },
                "additionalIndexes": {},
                "items": [],
                "relations": []
            },
            "item_2": {
                "modelId": 1,
                "columnId": 6,
                "id": 2,
                "createdAt": "2025-01-24 12:02:52",
                "updatedAt": "2025-01-24 12:02:52"
            }
        },
        "casts_model_column": {
            "item_1": {
                "modelId": 1,
                "columnId": 4,
                "id": 1,
                "createdAt": "2025-01-24 12:02:52",
                "updatedAt": "2025-01-24 12:02:52",
                "type": "datetime"
            },
            "__tableData": {
                "count": 2,
                "lastPrimaryKey": 2,
                "index": {
                    "1": {
                        "hasMany": {}
                    },
                    "2": {
                        "hasMany": {}
                    }
                },
                "additionalIndexes": {},
                "items": [],
                "relations": []
            },
            "item_2": {
                "modelId": 1,
                "columnId": 5,
                "id": 2,
                "createdAt": "2025-01-24 12:02:52",
                "updatedAt": "2025-01-24 12:02:52",
                "type": "hashed"
            }
        },
        "app_sections": {
            "item_1": {
                "name": "Dashboard",
                "routePrefix": "dashboard",
                "routeBasePath": "dashboard",
                "projectId": 1,
                "requiresAuth": true,
                "id": 1,
                "createdAt": "2025-01-24 12:02:52",
                "updatedAt": "2025-01-24 12:02:52"
            },
            "__tableData": {
                "count": 4,
                "lastPrimaryKey": 4,
                "index": {
                    "1": {
                        "hasMany": {
                            "cruds.sectionId": [
                                1,
                                2,
                                7,
                                8,
                                9,
                                15
                            ]
                        }
                    },
                    "2": {
                        "hasMany": {}
                    },
                    "3": {
                        "hasMany": {}
                    },
                    "4": {
                        "hasMany": {}
                    }
                },
                "additionalIndexes": {},
                "items": [],
                "relations": []
            },
            "item_2": {
                "name": "API",
                "routePrefix": "api",
                "routeBasePath": "api",
                "projectId": 1,
                "requiresAuth": true,
                "id": 2,
                "createdAt": "2025-01-24 12:02:52",
                "updatedAt": "2025-01-24 12:02:52"
            },
            "item_3": {
                "name": "Site",
                "routePrefix": "",
                "routeBasePath": "",
                "projectId": 1,
                "requiresAuth": false,
                "id": 3,
                "createdAt": "2025-01-24 12:02:52",
                "updatedAt": "2025-01-24 12:02:52"
            },
            "item_4": {
                "name": "Filament Panel",
                "routePrefix": "panel",
                "routeBasePath": "panel",
                "projectId": 1,
                "requiresAuth": false,
                "id": 4,
                "createdAt": "2025-01-24 12:02:52",
                "updatedAt": "2025-01-24 12:02:52"
            }
        },
        "schema_sections": {
            "item_1": {
                "name": "App",
                "scrollX": 23550,
                "scrollY": 24244,
                "projectId": 1,
                "id": 1,
                "createdAt": "2025-01-24 12:02:52",
                "updatedAt": "2025-01-27 14:57:09"
            },
            "__tableData": {
                "count": 2,
                "lastPrimaryKey": 2,
                "index": {
                    "1": {
                        "hasMany": {
                            "tables.sectionId": [
                                1,
                                9,
                                10,
                                12,
                                15,
                                16,
                                17,
                                21
                            ]
                        }
                    },
                    "2": {
                        "hasMany": {
                            "tables.sectionId": [
                                2,
                                3,
                                4,
                                5,
                                6,
                                7,
                                8
                            ]
                        }
                    }
                },
                "additionalIndexes": {},
                "items": [],
                "relations": []
            },
            "item_2": {
                "name": "Laravel",
                "scrollX": 0,
                "scrollY": 0,
                "projectId": 1,
                "id": 2,
                "createdAt": "2025-01-24 12:02:52",
                "updatedAt": "2025-01-24 12:02:52"
            }
        },
        "navs": {
            "item_1": {
                "projectId": 1,
                "name": "navigation.home",
                "id": 1,
                "createdAt": "2025-01-24 12:02:52",
                "updatedAt": "2025-01-24 12:02:52",
                "tag": "home"
            },
            "__tableData": {
                "count": 8,
                "lastPrimaryKey": 17,
                "index": {
                    "1": {
                        "hasMany": {}
                    },
                    "2": {
                        "hasMany": {
                            "navs.parentNavId": [
                                3,
                                4,
                                9,
                                10,
                                11,
                                17
                            ]
                        }
                    },
                    "3": {
                        "hasMany": {}
                    },
                    "4": {
                        "hasMany": {}
                    },
                    "9": {
                        "hasMany": {}
                    },
                    "10": {
                        "hasMany": {}
                    },
                    "11": {
                        "hasMany": {}
                    },
                    "17": {
                        "hasMany": {}
                    }
                },
                "additionalIndexes": {},
                "items": [],
                "relations": []
            },
            "item_2": {
                "projectId": 1,
                "name": "navigation.apps",
                "id": 2,
                "createdAt": "2025-01-24 12:02:52",
                "updatedAt": "2025-01-24 12:02:52",
                "tag": "apps"
            },
            "item_3": {
                "projectId": 1,
                "navigableType": "Crud",
                "navigableId": 1,
                "name": "navigation.services",
                "id": 3,
                "createdAt": "2025-01-24 12:25:21",
                "updatedAt": "2025-01-24 12:25:21",
                "parentNavId": 2
            },
            "item_4": {
                "projectId": 1,
                "navigableType": "Crud",
                "navigableId": 2,
                "name": "navigation.sub_services",
                "id": 4,
                "createdAt": "2025-01-24 13:00:08",
                "updatedAt": "2025-01-24 13:00:08",
                "parentNavId": 2
            },
            "item_9": {
                "projectId": 1,
                "navigableType": "Crud",
                "navigableId": 7,
                "name": "navigation.sub_service_templates",
                "id": 9,
                "createdAt": "2025-01-24 15:54:43",
                "updatedAt": "2025-01-24 15:54:43",
                "parentNavId": 2
            },
            "item_10": {
                "projectId": 1,
                "navigableType": "Crud",
                "navigableId": 8,
                "name": "navigation.all_delivery_days",
                "id": 10,
                "createdAt": "2025-01-24 15:55:19",
                "updatedAt": "2025-01-24 15:55:19",
                "parentNavId": 2
            },
            "item_11": {
                "projectId": 1,
                "navigableType": "Crud",
                "navigableId": 9,
                "name": "navigation.content_categories",
                "id": 11,
                "createdAt": "2025-01-24 16:51:11",
                "updatedAt": "2025-01-24 16:51:11",
                "parentNavId": 2
            },
            "item_17": {
                "projectId": 1,
                "navigableType": "Crud",
                "navigableId": 15,
                "name": "navigation.influencers",
                "id": 17,
                "createdAt": "2025-01-27 14:49:15",
                "updatedAt": "2025-01-27 14:49:15",
                "parentNavId": 2
            }
        },
        "renderable_files": {
            "item_1": {
                "path": "bootstrap",
                "name": "app.php",
                "fullPath": "bootstrap/app.php",
                "template": "laravel/BootstrapApp.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 1,
                "createdAt": "2025-01-24 12:02:52",
                "updatedAt": "2025-01-27 14:50:48",
                "content": "<?php\n\nuse Illuminate\\Support\\Facades\\Route;\nuse Illuminate\\Foundation\\Application;\nuse Illuminate\\Foundation\\Configuration\\Exceptions;\nuse Illuminate\\Foundation\\Configuration\\Middleware;\n\nreturn Application::configure(basePath: dirname(__DIR__))\n    ->withProviders()\n    ->withRouting(\n        web: __DIR__ . '/../routes/web.php',\n        // api: __DIR__.'/../routes/api.php',\n        commands: __DIR__ . '/../routes/console.php',\n        // channels: __DIR__.'/../routes/channels.php',\n        health: '/up',\n\n        then: function () {\n            Route::middleware('web')->group(__DIR__ . '/../routes/app.php');\n            Route::middleware('api')->group(__DIR__ . '/../routes/app-api.php');\n        }\n    )\n    ->withMiddleware(function (Middleware $middleware) {\n        //\n    })\n    ->withExceptions(function (Exceptions $exceptions) {\n        //\n    })\n    ->create();\n"
            },
            "__tableData": {
                "count": 121,
                "lastPrimaryKey": 151,
                "index": {
                    "1": {
                        "hasMany": {}
                    },
                    "2": {
                        "hasMany": {}
                    },
                    "3": {
                        "hasMany": {}
                    },
                    "4": {
                        "hasMany": {}
                    },
                    "5": {
                        "hasMany": {}
                    },
                    "6": {
                        "hasMany": {}
                    },
                    "7": {
                        "hasMany": {}
                    },
                    "8": {
                        "hasMany": {}
                    },
                    "9": {
                        "hasMany": {}
                    },
                    "10": {
                        "hasMany": {}
                    },
                    "11": {
                        "hasMany": {}
                    },
                    "12": {
                        "hasMany": {}
                    },
                    "13": {
                        "hasMany": {}
                    },
                    "14": {
                        "hasMany": {}
                    },
                    "15": {
                        "hasMany": {}
                    },
                    "16": {
                        "hasMany": {}
                    },
                    "17": {
                        "hasMany": {}
                    },
                    "18": {
                        "hasMany": {}
                    },
                    "19": {
                        "hasMany": {}
                    },
                    "20": {
                        "hasMany": {}
                    },
                    "21": {
                        "hasMany": {}
                    },
                    "22": {
                        "hasMany": {}
                    },
                    "23": {
                        "hasMany": {}
                    },
                    "24": {
                        "hasMany": {}
                    },
                    "25": {
                        "hasMany": {}
                    },
                    "26": {
                        "hasMany": {}
                    },
                    "27": {
                        "hasMany": {}
                    },
                    "28": {
                        "hasMany": {}
                    },
                    "29": {
                        "hasMany": {}
                    },
                    "30": {
                        "hasMany": {}
                    },
                    "31": {
                        "hasMany": {}
                    },
                    "32": {
                        "hasMany": {}
                    },
                    "33": {
                        "hasMany": {}
                    },
                    "34": {
                        "hasMany": {}
                    },
                    "35": {
                        "hasMany": {}
                    },
                    "36": {
                        "hasMany": {}
                    },
                    "37": {
                        "hasMany": {}
                    },
                    "38": {
                        "hasMany": {}
                    },
                    "39": {
                        "hasMany": {}
                    },
                    "40": {
                        "hasMany": {}
                    },
                    "41": {
                        "hasMany": {}
                    },
                    "42": {
                        "hasMany": {}
                    },
                    "43": {
                        "hasMany": {}
                    },
                    "44": {
                        "hasMany": {}
                    },
                    "45": {
                        "hasMany": {}
                    },
                    "46": {
                        "hasMany": {}
                    },
                    "47": {
                        "hasMany": {}
                    },
                    "48": {
                        "hasMany": {}
                    },
                    "49": {
                        "hasMany": {}
                    },
                    "50": {
                        "hasMany": {}
                    },
                    "51": {
                        "hasMany": {}
                    },
                    "52": {
                        "hasMany": {}
                    },
                    "53": {
                        "hasMany": {}
                    },
                    "54": {
                        "hasMany": {}
                    },
                    "55": {
                        "hasMany": {}
                    },
                    "56": {
                        "hasMany": {}
                    },
                    "57": {
                        "hasMany": {}
                    },
                    "58": {
                        "hasMany": {}
                    },
                    "59": {
                        "hasMany": {}
                    },
                    "60": {
                        "hasMany": {}
                    },
                    "61": {
                        "hasMany": {}
                    },
                    "62": {
                        "hasMany": {}
                    },
                    "63": {
                        "hasMany": {}
                    },
                    "64": {
                        "hasMany": {}
                    },
                    "65": {
                        "hasMany": {}
                    },
                    "66": {
                        "hasMany": {}
                    },
                    "67": {
                        "hasMany": {}
                    },
                    "68": {
                        "hasMany": {}
                    },
                    "69": {
                        "hasMany": {}
                    },
                    "70": {
                        "hasMany": {}
                    },
                    "71": {
                        "hasMany": {}
                    },
                    "72": {
                        "hasMany": {}
                    },
                    "73": {
                        "hasMany": {}
                    },
                    "74": {
                        "hasMany": {}
                    },
                    "75": {
                        "hasMany": {}
                    },
                    "76": {
                        "hasMany": {}
                    },
                    "77": {
                        "hasMany": {}
                    },
                    "78": {
                        "hasMany": {}
                    },
                    "79": {
                        "hasMany": {}
                    },
                    "80": {
                        "hasMany": {}
                    },
                    "81": {
                        "hasMany": {}
                    },
                    "82": {
                        "hasMany": {}
                    },
                    "83": {
                        "hasMany": {}
                    },
                    "92": {
                        "hasMany": {}
                    },
                    "93": {
                        "hasMany": {}
                    },
                    "94": {
                        "hasMany": {}
                    },
                    "95": {
                        "hasMany": {}
                    },
                    "96": {
                        "hasMany": {}
                    },
                    "97": {
                        "hasMany": {}
                    },
                    "98": {
                        "hasMany": {}
                    },
                    "99": {
                        "hasMany": {}
                    },
                    "100": {
                        "hasMany": {}
                    },
                    "101": {
                        "hasMany": {}
                    },
                    "102": {
                        "hasMany": {}
                    },
                    "103": {
                        "hasMany": {}
                    },
                    "104": {
                        "hasMany": {}
                    },
                    "105": {
                        "hasMany": {}
                    },
                    "106": {
                        "hasMany": {}
                    },
                    "107": {
                        "hasMany": {}
                    },
                    "108": {
                        "hasMany": {}
                    },
                    "109": {
                        "hasMany": {}
                    },
                    "110": {
                        "hasMany": {}
                    },
                    "111": {
                        "hasMany": {}
                    },
                    "112": {
                        "hasMany": {}
                    },
                    "113": {
                        "hasMany": {}
                    },
                    "114": {
                        "hasMany": {}
                    },
                    "115": {
                        "hasMany": {}
                    },
                    "116": {
                        "hasMany": {}
                    },
                    "117": {
                        "hasMany": {}
                    },
                    "118": {
                        "hasMany": {}
                    },
                    "141": {
                        "hasMany": {}
                    },
                    "142": {
                        "hasMany": {}
                    },
                    "143": {
                        "hasMany": {}
                    },
                    "144": {
                        "hasMany": {}
                    },
                    "145": {
                        "hasMany": {}
                    },
                    "146": {
                        "hasMany": {}
                    },
                    "147": {
                        "hasMany": {}
                    },
                    "148": {
                        "hasMany": {}
                    },
                    "149": {
                        "hasMany": {}
                    },
                    "150": {
                        "hasMany": {}
                    },
                    "151": {
                        "hasMany": {}
                    }
                },
                "additionalIndexes": {},
                "items": [],
                "relations": []
            },
            "item_2": {
                "path": "routes",
                "name": "app.php",
                "fullPath": "routes/app.php",
                "template": "routes/Routes.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 2,
                "createdAt": "2025-01-24 12:02:52",
                "updatedAt": "2025-01-27 14:50:48",
                "content": "<?php\n\nuse Illuminate\\Support\\Facades\\Route;\n\n/*\n|--------------------------------------------------------------------------\n| Web Routes - Generated by Vemto\n|--------------------------------------------------------------------------\n|\n| It is not recommended to edit this file directly. Although you can do so,\n| it will generate a conflict on Vemto's next build.\n|\n*/\n\n// Dashboard\nRoute::prefix('/dashboard')\n    ->name('dashboard.')\n    ->group(function () {\n        Route::get(\n            '/services',\n            App\\Livewire\\Dashboard\\ServiceIndex::class\n        )->name('services.index');\n\n        Route::get(\n            '/services/create',\n            App\\Livewire\\Dashboard\\ServiceCreate::class\n        )->name('services.create');\n\n        Route::get(\n            '/services/{service}',\n            App\\Livewire\\Dashboard\\ServiceEdit::class\n        )->name('services.edit');\n\n        Route::get(\n            '/sub-services',\n            App\\Livewire\\Dashboard\\SubServiceIndex::class\n        )->name('sub-services.index');\n\n        Route::get(\n            '/sub-services/create',\n            App\\Livewire\\Dashboard\\SubServiceCreate::class\n        )->name('sub-services.create');\n\n        Route::get(\n            '/sub-services/{subService}',\n            App\\Livewire\\Dashboard\\SubServiceEdit::class\n        )->name('sub-services.edit');\n\n        Route::get(\n            '/sub-service-templates',\n            App\\Livewire\\Dashboard\\SubServiceTemplateIndex::class\n        )->name('sub-service-templates.index');\n\n        Route::get(\n            '/sub-service-templates/create',\n            App\\Livewire\\Dashboard\\SubServiceTemplateCreate::class\n        )->name('sub-service-templates.create');\n\n        Route::get(\n            '/sub-service-templates/{subServiceTemplate}',\n            App\\Livewire\\Dashboard\\SubServiceTemplateEdit::class\n        )->name('sub-service-templates.edit');\n\n        Route::get(\n            '/all-delivery-days',\n            App\\Livewire\\Dashboard\\DeliveryDaysIndex::class\n        )->name('all-delivery-days.index');\n\n        Route::get(\n            '/all-delivery-days/create',\n            App\\Livewire\\Dashboard\\DeliveryDaysCreate::class\n        )->name('all-delivery-days.create');\n\n        Route::get(\n            '/all-delivery-days/{deliveryDays}',\n            App\\Livewire\\Dashboard\\DeliveryDaysEdit::class\n        )->name('all-delivery-days.edit');\n\n        Route::get(\n            '/content-categories',\n            App\\Livewire\\Dashboard\\ContentCategoryIndex::class\n        )->name('content-categories.index');\n\n        Route::get(\n            '/content-categories/create',\n            App\\Livewire\\Dashboard\\ContentCategoryCreate::class\n        )->name('content-categories.create');\n\n        Route::get(\n            '/content-categories/{contentCategory}',\n            App\\Livewire\\Dashboard\\ContentCategoryEdit::class\n        )->name('content-categories.edit');\n\n        Route::get(\n            '/influencers',\n            App\\Livewire\\Dashboard\\InfluencerIndex::class\n        )->name('influencers.index');\n\n        Route::get(\n            '/influencers/create',\n            App\\Livewire\\Dashboard\\InfluencerCreate::class\n        )->name('influencers.create');\n\n        Route::get(\n            '/influencers/{influencer}',\n            App\\Livewire\\Dashboard\\InfluencerEdit::class\n        )->name('influencers.edit');\n    });\n\n// API\nRoute::prefix('/api')\n    ->name('api.')\n    ->group(function () {});\n\n// Site\nRoute::prefix('/')->group(function () {});\n\n// Filament Panel\nRoute::prefix('/panel')\n    ->name('panel.')\n    ->group(function () {});\n",
                "conflictFileName": null
            },
            "item_3": {
                "path": "routes",
                "name": "app-api.php",
                "fullPath": "routes/app-api.php",
                "template": "routes/ApiRoutes.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 3,
                "createdAt": "2025-01-24 12:02:52",
                "updatedAt": "2025-01-27 14:50:48",
                "content": "<?php\n\nuse Illuminate\\Support\\Facades\\Route;\nuse App\\Http\\Controllers\\Api\\AuthController;\n\n/*\n|--------------------------------------------------------------------------\n| Api Routes - Generated by Vemto\n|--------------------------------------------------------------------------\n|\n| It is not recommended to edit this file directly. Although you can do so,\n| it will generate a conflict on Vemto's next build.\n|\n*/\n\nRoute::name('api.')\n    ->prefix('api')\n    ->group(function () {\n        Route::post('/login', [AuthController::class, 'login'])->name(\n            'api.login'\n        );\n\n        Route::middleware('auth:sanctum')->group(function () {});\n    });\n"
            },
            "item_4": {
                "path": "resources/views/components/ui",
                "name": "/toast.blade.php",
                "fullPath": "resources/views/components/ui//toast.blade.php",
                "template": "blade/ui/Toast.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 4,
                "createdAt": "2025-01-24 12:26:28",
                "updatedAt": "2025-01-27 14:50:48",
                "content": "@props([\n    'on',\n    'timeout' => 2000,\n    'closeable' => true,\n])\n\n<div x-data=\"{ shown: false, timeout: null }\"\n    x-init=\"@this.on('{{ $on }}', () => { clearTimeout(timeout); shown = true; timeout = setTimeout(() => { shown = false }, {{ $timeout }});  })\"\n    x-show.transition.out.opacity.duration.500ms=\"shown\"\n    x-transition:leave.opacity.duration.500ms\n    x-transition:enter.opacity.duration.500ms\n    style=\"display: none;\"\n    {{ $attributes->merge(['class' => 'fixed right-0 top-0 p-2']) }}>\n    <div class=\"flex items-center bg-green-500 text-white rounded px-6 py-4\">\n        <div>\n            {{ $slot->isEmpty() ? 'Saved.' : $slot }}\n        </div>\n\n        @if($closeable)\n        <div @click=\"shown = false\" class=\"ml-4 cursor-pointer\">\n            <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke-width=\"1.5\" stroke=\"currentColor\" class=\"w-4 h-4\">\n                <path stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M6 18L18 6M6 6l12 12\" />\n            </svg>              \n        </div>\n        @endif\n    </div>\n</div>"
            },
            "item_5": {
                "path": "resources/views/components/ui",
                "name": "/action/danger.blade.php",
                "fullPath": "resources/views/components/ui//action/danger.blade.php",
                "template": "blade/ui/action/Danger.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 5,
                "createdAt": "2025-01-24 12:26:28",
                "updatedAt": "2025-01-27 14:50:48",
                "content": "<a {!! $attributes->merge(['class' => 'text-red-600 hover:text-red-700 cursor-pointer']) !!}>\n    {{ $slot }}\n</a>"
            },
            "item_6": {
                "path": "resources/views/components/ui",
                "name": "/action/index.blade.php",
                "fullPath": "resources/views/components/ui//action/index.blade.php",
                "template": "blade/ui/action/Index.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 6,
                "createdAt": "2025-01-24 12:26:28",
                "updatedAt": "2025-01-27 14:50:48",
                "content": "<a {!! $attributes->merge(['class' => 'text-indigo-600 hover:text-indigo-700 cursor-pointer']) !!}>\n    {{ $slot }}\n</a>"
            },
            "item_7": {
                "path": "resources/views/components/ui",
                "name": "/breadcrumbs/index.blade.php",
                "fullPath": "resources/views/components/ui//breadcrumbs/index.blade.php",
                "template": "blade/ui/breadcrumbs/Index.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 7,
                "createdAt": "2025-01-24 12:26:28",
                "updatedAt": "2025-01-27 14:50:48",
                "content": "<nav class=\"flex justify-between py-1\">\n    <ol class=\"inline-flex items-center mb-3 space-x-1 text-xs text-neutral-500 [&_.active-breadcrumb]:text-neutral-600 [&_.active-breadcrumb]:font-medium sm:mb-0\"> \n        {{ $slot }}\n    </ol>\n</nav>"
            },
            "item_8": {
                "path": "resources/views/components/ui",
                "name": "/breadcrumbs/link.blade.php",
                "fullPath": "resources/views/components/ui//breadcrumbs/link.blade.php",
                "template": "blade/ui/breadcrumbs/Link.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 8,
                "createdAt": "2025-01-24 12:26:28",
                "updatedAt": "2025-01-27 14:50:48",
                "content": "@props([\n    'href' => false,\n    'active' => false,\n])\n\n<li class=\"\">\n    <a \n        @if($href)\n            wire:navigate\n            href=\"{{ $href }}\"\n        @endif\n        class=\"inline-flex items-center py-1 font-normal hover:text-neutral-900 focus:outline-none {{ $active ? 'active-breadcrumb' : '' }}\"\n    >\n        {{ $slot }}\n    </a>\n</li>"
            },
            "item_9": {
                "path": "resources/views/components/ui",
                "name": "/breadcrumbs/separator.blade.php",
                "fullPath": "resources/views/components/ui//breadcrumbs/separator.blade.php",
                "template": "blade/ui/breadcrumbs/Separator.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 9,
                "createdAt": "2025-01-24 12:26:28",
                "updatedAt": "2025-01-27 14:50:48",
                "content": "<svg class=\"w-5 h-5 text-gray-400/70\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><g fill=\"none\" stroke=\"none\"><path d=\"M10 8.013l4 4-4 4\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path></g></svg>"
            },
            "item_10": {
                "path": "resources/views/components/ui",
                "name": "/button/danger.blade.php",
                "fullPath": "resources/views/components/ui//button/danger.blade.php",
                "template": "blade/ui/button/Danger.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 10,
                "createdAt": "2025-01-24 12:26:28",
                "updatedAt": "2025-01-27 14:50:48",
                "content": "<button {{ $attributes->merge(['type' => 'button', 'class' => 'inline-flex items-center justify-center px-4 py-2 bg-red-600 border border-transparent rounded-md font-semibold text-xs text-white uppercase tracking-widest hover:bg-red-500 active:bg-red-700 focus:outline-none focus:ring-2 focus:ring-red-500 focus:ring-offset-2 transition ease-in-out duration-150']) }}>\n    {{ $slot }}\n</button>"
            },
            "item_11": {
                "path": "resources/views/components/ui",
                "name": "/button/index.blade.php",
                "fullPath": "resources/views/components/ui//button/index.blade.php",
                "template": "blade/ui/button/Index.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 11,
                "createdAt": "2025-01-24 12:26:28",
                "updatedAt": "2025-01-27 14:50:48",
                "content": "<button {{ $attributes->merge(['type' => 'submit', 'class' => 'inline-flex items-center justify-center px-4 py-2 text-sm font-medium tracking-wide text-white transition-colors duration-200 rounded-md bg-indigo-500 hover:bg-indigo-600 focus:ring-2 focus:ring-offset-2 focus:ring-gray-900 focus:shadow-outline focus:outline-none']) }}>\n    {{ $slot }}\n</button>"
            },
            "item_12": {
                "path": "resources/views/components/ui",
                "name": "/card/body.blade.php",
                "fullPath": "resources/views/components/ui//card/body.blade.php",
                "template": "blade/ui/card/Body.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 12,
                "createdAt": "2025-01-24 12:26:28",
                "updatedAt": "2025-01-27 14:50:48",
                "content": ""
            },
            "item_13": {
                "path": "resources/views/components/ui",
                "name": "/card/header.blade.php",
                "fullPath": "resources/views/components/ui//card/header.blade.php",
                "template": "blade/ui/card/Header.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 13,
                "createdAt": "2025-01-24 12:26:28",
                "updatedAt": "2025-01-27 14:50:48",
                "content": ""
            },
            "item_14": {
                "path": "resources/views/components/ui",
                "name": "/card/index.blade.php",
                "fullPath": "resources/views/components/ui//card/index.blade.php",
                "template": "blade/ui/card/Index.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 14,
                "createdAt": "2025-01-24 12:26:28",
                "updatedAt": "2025-01-27 14:50:48",
                "content": ""
            },
            "item_15": {
                "path": "resources/views/components/ui",
                "name": "/card/title.blade.php",
                "fullPath": "resources/views/components/ui//card/title.blade.php",
                "template": "blade/ui/card/Title.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 15,
                "createdAt": "2025-01-24 12:26:28",
                "updatedAt": "2025-01-27 14:50:48",
                "content": ""
            },
            "item_16": {
                "path": "resources/views/components/ui",
                "name": "/container/table.blade.php",
                "fullPath": "resources/views/components/ui//container/table.blade.php",
                "template": "blade/ui/container/Table.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 16,
                "createdAt": "2025-01-24 12:26:28",
                "updatedAt": "2025-01-27 14:50:48",
                "content": "<div class=\"flex flex-col\">\n    <div class=\"overflow-x-auto\">\n        <div class=\"inline-block min-w-full\">\n            {{ $slot }}\n        </div>\n    </div>\n</div>\n"
            },
            "item_17": {
                "path": "resources/views/components/ui",
                "name": "/input/checkbox.blade.php",
                "fullPath": "resources/views/components/ui//input/checkbox.blade.php",
                "template": "blade/ui/input/Checkbox.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 17,
                "createdAt": "2025-01-24 12:26:28",
                "updatedAt": "2025-01-27 14:50:48",
                "content": "@props(['disabled' => false])\n\n<input \n    {{ $disabled ? 'disabled' : '' }} \n    type=\"checkbox\"\n    {!! $attributes->merge(['class' => '']) !!}\n>"
            },
            "item_18": {
                "path": "resources/views/components/ui",
                "name": "/input/color.blade.php",
                "fullPath": "resources/views/components/ui//input/color.blade.php",
                "template": "blade/ui/input/Color.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 18,
                "createdAt": "2025-01-24 12:26:28",
                "updatedAt": "2025-01-27 14:50:48",
                "content": "@props(['disabled' => false])\n\n<x-ui.input \n    :disabled=\"$disabled\" \n    type=\"color\"\n    :attributes=\"$attributes\"\n/>"
            },
            "item_19": {
                "path": "resources/views/components/ui",
                "name": "/input/date.blade.php",
                "fullPath": "resources/views/components/ui//input/date.blade.php",
                "template": "blade/ui/input/Date.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 19,
                "createdAt": "2025-01-24 12:26:28",
                "updatedAt": "2025-01-27 14:50:48",
                "content": "@props(['disabled' => false])\n\n<x-ui.input \n    :disabled=\"$disabled\" \n    type=\"date\"\n    :attributes=\"$attributes\"\n/>"
            },
            "item_20": {
                "path": "resources/views/components/ui",
                "name": "/input/date-time.blade.php",
                "fullPath": "resources/views/components/ui//input/date-time.blade.php",
                "template": "blade/ui/input/DateTime.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 20,
                "createdAt": "2025-01-24 12:26:28",
                "updatedAt": "2025-01-27 14:50:48",
                "content": "@props(['disabled' => false])\n\n<x-ui.input \n    :disabled=\"$disabled\" \n    type=\"datetime-local\"\n    :attributes=\"$attributes\"\n/>"
            },
            "item_21": {
                "path": "resources/views/components/ui",
                "name": "/input/email.blade.php",
                "fullPath": "resources/views/components/ui//input/email.blade.php",
                "template": "blade/ui/input/Email.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 21,
                "createdAt": "2025-01-24 12:26:28",
                "updatedAt": "2025-01-27 14:50:48",
                "content": "@props(['disabled' => false])\n\n<x-ui.input \n    :disabled=\"$disabled\" \n    type=\"email\"\n    :attributes=\"$attributes\"\n/>"
            },
            "item_22": {
                "path": "resources/views/components/ui",
                "name": "/input/error.blade.php",
                "fullPath": "resources/views/components/ui//input/error.blade.php",
                "template": "blade/ui/input/Error.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 22,
                "createdAt": "2025-01-24 12:26:28",
                "updatedAt": "2025-01-27 14:50:48",
                "content": "@props(['for'])\n\n@error($for)\n    <p {{ $attributes->merge(['class' => 'text-sm text-red-600']) }}>{{ $message }}</p>\n@enderror\n"
            },
            "item_23": {
                "path": "resources/views/components/ui",
                "name": "/input/file.blade.php",
                "fullPath": "resources/views/components/ui//input/file.blade.php",
                "template": "blade/ui/input/File.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 23,
                "createdAt": "2025-01-24 12:26:28",
                "updatedAt": "2025-01-27 14:50:48",
                "content": "@props([\n    'src' => '',\n    'accept' => '*',\n])\n\n<div {!! $attributes->except(['wire:model']) !!} x-data=\"{\n    fileUrl: '{{ $src }}',\n    file: null,\n    fileInput: null,\n    initFileInput() {\n        this.fileInput = this.$el.querySelector('input[type=file]')\n\n        this.fileInput.addEventListener('change', () => {\n            this.file = this.fileInput.files[0]\n            this.fileUrl = URL.createObjectURL(this.file)\n        })\n    },\n    destroyFileInput() {\n        this.fileInput.removeEventListener('change')\n    },\n    remove() {\n        if (!confirm('Are you sure?')) return\n\n        this.fileUrl = ''\n        this.file = null\n        this.fileInput.value = ''\n\n        this.$dispatch('removed')\n    }\n}\" x-init=\"initFileInput\" x-on:destroy.window=\"destroyFileInput\">\n    <div class=\"mb-2\">\n        {{-- Show the filename --}}\n        <template x-if=\"file\">\n            <div class=\"text-sm text-gray-500 p-1 rounded-sm bg-gray-50 border border-gray-200 mb-1\" x-text=\"file.name\"></div>\n        </template>\n\n        {{-- File selector --}}\n        <input style=\"display: none;\" type=\"file\" accept=\"{{ $accept }}\" {!! $attributes->only([ 'wire:model']) !!}>\n\n        {{-- Upload and remove buttons --}}\n        <div>\n            <button type=\"button\" class=\"p-0.5 px-1 text-xs border border-gray-200 rounded hover:bg-gray-200\" @click.stop=\"fileInput.click()\">Upload</button>\n            <button type=\"button\" class=\"p-0.5 px-1 text-xs border border-gray-200 rounded hover:bg-gray-200\" x-show=\"fileUrl\" @click.stop=\"remove()\">Remove</button>\n        </div>\n    </div>\n</div>"
            },
            "item_24": {
                "path": "resources/views/components/ui",
                "name": "/input/hidden.blade.php",
                "fullPath": "resources/views/components/ui//input/hidden.blade.php",
                "template": "blade/ui/input/Hidden.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 24,
                "createdAt": "2025-01-24 12:26:28",
                "updatedAt": "2025-01-27 14:50:48",
                "content": "@props(['disabled' => false])\n\n<x-ui.input \n    :disabled=\"$disabled\" \n    type=\"hidden\"\n    :attributes=\"$attributes\"\n/>"
            },
            "item_25": {
                "path": "resources/views/components/ui",
                "name": "/input/image.blade.php",
                "fullPath": "resources/views/components/ui//input/image.blade.php",
                "template": "blade/ui/input/Image.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 25,
                "createdAt": "2025-01-24 12:26:28",
                "updatedAt": "2025-01-27 14:50:48",
                "content": "@props([\n    'src' => '',\n    'accept' => 'image/*',\n])\n\n<div {!! $attributes->except(['wire:model']) !!} x-data=\"{\n    imageUrl: '{{ $src }}',\n    imageFile: null,\n    imageInput: null,\n    initFileInput() {\n        this.imageInput = this.$el.querySelector('input[type=file]')\n\n        this.imageInput.addEventListener('change', () => {\n            this.imageFile = this.imageInput.files[0]\n            this.imageUrl = URL.createObjectURL(this.imageFile)\n        })\n    },\n    destroyFileInput() {\n        this.imageInput.removeEventListener('change')\n    },\n    remove() {\n        if (!confirm('Are you sure?')) return\n\n        this.imageUrl = ''\n        this.imageFile = null\n        this.imageInput.value = ''\n\n        this.$dispatch('removed')\n    }\n}\" x-init=\"initFileInput\" x-on:destroy.window=\"destroyFileInput\">\n    <div class=\"mb-2\">\n\n        {{-- Show the image --}}\n        <template x-if=\"imageUrl\">\n            <img @click.stop=\"imageInput.click()\" :src=\"imageUrl\" class=\"object-cover rounded border border-gray-200 w-36 h-36 cursor-pointer bg-gray-50 hover:opacity-75 transition duration-100 ease-in-out\">\n        </template>\n\n        {{-- Show the gray box when image is not available --}}\n        <template x-if=\"!imageUrl\">\n            <div @click.stop=\"imageInput.click()\" class=\"object-cover rounded border border-gray-200 w-36 h-36 cursor-pointer bg-gray-50 hover:opacity-75 transition duration-100 ease-in-out\"></div>\n        </template>\n\n        {{-- Image file selector --}}\n        <input style=\"display: none;\" type=\"file\" accept=\"{{ $accept }}\" {!! $attributes->only([ 'wire:model']) !!}>\n\n        {{-- Upload and remove buttons --}}\n        <div>\n            <button type=\"button\" class=\"p-0.5 px-1 text-xs border border-gray-200 rounded hover:bg-gray-200\" @click.stop=\"imageInput.click()\">Upload</button>\n            <button type=\"button\" class=\"p-0.5 px-1 text-xs border border-gray-200 rounded hover:bg-gray-200\" x-show=\"imageUrl\" @click.stop=\"remove()\">Remove</button>\n        </div>\n    </div>\n</div>"
            },
            "item_26": {
                "path": "resources/views/components/ui",
                "name": "/input/index.blade.php",
                "fullPath": "resources/views/components/ui//input/index.blade.php",
                "template": "blade/ui/input/Index.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 26,
                "createdAt": "2025-01-24 12:26:28",
                "updatedAt": "2025-01-27 14:50:48",
                "content": "@props(['disabled' => false])\n\n<input \n    {{ $disabled ? 'disabled' : '' }} \n    {!! $attributes->merge(['class' => 'inline-flex h-10 px-3 py-2 text-sm bg-white border rounded-md border-gray-300 ring-offset-background placeholder:text-gray-500 focus:border-gray-300 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-gray-400 disabled:cursor-not-allowed disabled:opacity-50']) !!}\n>\n"
            },
            "item_27": {
                "path": "resources/views/components/ui",
                "name": "/input/number.blade.php",
                "fullPath": "resources/views/components/ui//input/number.blade.php",
                "template": "blade/ui/input/Number.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 27,
                "createdAt": "2025-01-24 12:26:28",
                "updatedAt": "2025-01-27 14:50:48",
                "content": "@props(['disabled' => false])\n\n<x-ui.input \n    :disabled=\"$disabled\" \n    type=\"number\"\n    :attributes=\"$attributes\"\n/>"
            },
            "item_28": {
                "path": "resources/views/components/ui",
                "name": "/input/password.blade.php",
                "fullPath": "resources/views/components/ui//input/password.blade.php",
                "template": "blade/ui/input/Password.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 28,
                "createdAt": "2025-01-24 12:26:28",
                "updatedAt": "2025-01-27 14:50:48",
                "content": "@props(['disabled' => false])\n\n<x-ui.input \n    :disabled=\"$disabled\" \n    type=\"password\"\n    :attributes=\"$attributes\"\n/>"
            },
            "item_29": {
                "path": "resources/views/components/ui",
                "name": "/input/radio.blade.php",
                "fullPath": "resources/views/components/ui//input/radio.blade.php",
                "template": "blade/ui/input/Radio.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 29,
                "createdAt": "2025-01-24 12:26:28",
                "updatedAt": "2025-01-27 14:50:48",
                "content": "@props(['disabled' => false])\n\n<input \n    :disabled=\"$disabled\" \n    type=\"radio\"\n    {!! $attributes->merge(['class' => '!w-4 !h-4 text-indigo-600 transition duration-150 ease-in-out border-gray-300 rounded-md focus:ring-indigo-500']) !!}\n/>"
            },
            "item_30": {
                "path": "resources/views/components/ui",
                "name": "/input/select.blade.php",
                "fullPath": "resources/views/components/ui//input/select.blade.php",
                "template": "blade/ui/input/Select.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 30,
                "createdAt": "2025-01-24 12:26:28",
                "updatedAt": "2025-01-27 14:50:48",
                "content": "@props(['disabled' => false])\n\n<select \n    {{ $disabled ? 'disabled' : '' }} \n    {!! $attributes->merge(['class' => 'inline-flex h-10 px-3 py-2 text-sm bg-white border rounded-md border-gray-300 ring-offset-background placeholder:text-gray-500 focus:border-gray-300 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-gray-400 disabled:cursor-not-allowed disabled:opacity-50']) !!}\n>\n    {{ $slot }}\n</select>"
            },
            "item_31": {
                "path": "resources/views/components/ui",
                "name": "/input/text.blade.php",
                "fullPath": "resources/views/components/ui//input/text.blade.php",
                "template": "blade/ui/input/Text.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 31,
                "createdAt": "2025-01-24 12:26:28",
                "updatedAt": "2025-01-27 14:50:48",
                "content": "@props(['disabled' => false])\n\n<x-ui.input \n    :disabled=\"$disabled\" \n    type=\"text\"\n    :attributes=\"$attributes\"\n/>"
            },
            "item_32": {
                "path": "resources/views/components/ui",
                "name": "/input/textarea.blade.php",
                "fullPath": "resources/views/components/ui//input/textarea.blade.php",
                "template": "blade/ui/input/Textarea.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 32,
                "createdAt": "2025-01-24 12:26:28",
                "updatedAt": "2025-01-27 14:50:48",
                "content": "@props(['disabled' => false])\n\n<textarea \n    {{ $disabled ? 'disabled' : '' }} \n    {!! $attributes->merge(['class' => 'inline-flex h-10 px-3 py-2 text-sm bg-white border rounded-md border-gray-300 ring-offset-background placeholder:text-gray-500 focus:border-gray-300 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-gray-400 disabled:cursor-not-allowed disabled:opacity-50']) !!}\n></textarea>"
            },
            "item_33": {
                "path": "resources/views/components/ui",
                "name": "/input/time.blade.php",
                "fullPath": "resources/views/components/ui//input/time.blade.php",
                "template": "blade/ui/input/Time.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 33,
                "createdAt": "2025-01-24 12:26:28",
                "updatedAt": "2025-01-27 14:50:48",
                "content": "@props(['disabled' => false])\n\n<x-ui.input \n    :disabled=\"$disabled\" \n    type=\"time\"\n    :attributes=\"$attributes\"\n/>"
            },
            "item_34": {
                "path": "resources/views/components/ui",
                "name": "/input/url.blade.php",
                "fullPath": "resources/views/components/ui//input/url.blade.php",
                "template": "blade/ui/input/Url.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 34,
                "createdAt": "2025-01-24 12:26:28",
                "updatedAt": "2025-01-27 14:50:48",
                "content": "@props(['disabled' => false])\n\n<x-ui.input \n    :disabled=\"$disabled\" \n    type=\"url\"\n    :attributes=\"$attributes\"\n/>"
            },
            "item_35": {
                "path": "resources/views/components/ui",
                "name": "/label/index.blade.php",
                "fullPath": "resources/views/components/ui//label/index.blade.php",
                "template": "blade/ui/label/Index.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 35,
                "createdAt": "2025-01-24 12:26:28",
                "updatedAt": "2025-01-27 14:50:48",
                "content": "@props(['value'])\n\n<label {{ $attributes->merge(['class' => 'block mb-1.5 font-medium text-sm text-gray-700']) }}>\n    {{ $value ?? $slot }}\n</label>"
            },
            "item_36": {
                "path": "resources/views/components/ui",
                "name": "/modal/confirm.blade.php",
                "fullPath": "resources/views/components/ui//modal/confirm.blade.php",
                "template": "blade/ui/modal/Confirm.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 36,
                "createdAt": "2025-01-24 12:26:28",
                "updatedAt": "2025-01-27 14:50:48",
                "content": "@props(['id' => null, 'maxWidth' => null])\n\n<x-ui.modal :id=\"$id\" :maxWidth=\"$maxWidth\" {{ $attributes }}>\n    <div class=\"bg-white px-4 pt-5 pb-4 sm:p-6 sm:pb-4\">\n        <div class=\"sm:flex sm:items-start\">\n            <div class=\"mx-auto shrink-0 flex items-center justify-center h-12 w-12 rounded-full bg-red-100 sm:mx-0 sm:h-10 sm:w-10\">\n                <svg class=\"h-6 w-6 text-red-600\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke-width=\"1.5\" stroke=\"currentColor\">\n                    <path stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M12 9v3.75m-9.303 3.376c-.866 1.5.217 3.374 1.948 3.374h14.71c1.73 0 2.813-1.874 1.948-3.374L13.949 3.378c-.866-1.5-3.032-1.5-3.898 0L2.697 16.126zM12 15.75h.007v.008H12v-.008z\" />\n                </svg>\n            </div>\n\n            <div class=\"mt-3 text-center sm:mt-0 sm:ml-4 sm:text-left\">\n                <h3 class=\"text-lg font-medium text-gray-900\">\n                    {{ $title }}\n                </h3>\n\n                <div class=\"mt-4 text-sm text-gray-600\">\n                    {{ $content }}\n                </div>\n            </div>\n        </div>\n    </div>\n\n    <div class=\"flex flex-row justify-between p-4 bg-gray-100 text-right\">\n        {{ $footer }}\n    </div>\n</x-ui.modal>"
            },
            "item_37": {
                "path": "resources/views/components/ui",
                "name": "/modal/index.blade.php",
                "fullPath": "resources/views/components/ui//modal/index.blade.php",
                "template": "blade/ui/modal/Index.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 37,
                "createdAt": "2025-01-24 12:26:28",
                "updatedAt": "2025-01-27 14:50:48",
                "content": "@props(['id', 'maxWidth'])\n\n@php\n$id = $id ?? md5($attributes->wire('model'));\n\n$maxWidth = [\n    'sm' => 'sm:max-w-sm',\n    'md' => 'sm:max-w-md',\n    'lg' => 'sm:max-w-lg',\n    'xl' => 'sm:max-w-xl',\n    '2xl' => 'sm:max-w-2xl',\n][$maxWidth ?? '2xl'];\n@endphp\n\n<div\n    x-data=\"{ show: @entangle($attributes->wire('model')) }\"\n    x-on:close.stop=\"show = false\"\n    x-on:keydown.escape.window=\"show = false\"\n    x-show=\"show\"\n    id=\"{{ $id }}\"\n    class=\"jetstream-modal fixed inset-0 overflow-y-auto px-4 py-6 sm:px-0 z-50\"\n    style=\"display: none;\"\n>\n    <div x-show=\"show\" class=\"fixed inset-0 transform transition-all\" x-on:click=\"show = false\" x-transition:enter=\"ease-out duration-300\"\n                    x-transition:enter-start=\"opacity-0\"\n                    x-transition:enter-end=\"opacity-100\"\n                    x-transition:leave=\"ease-in duration-200\"\n                    x-transition:leave-start=\"opacity-100\"\n                    x-transition:leave-end=\"opacity-0\">\n        <div class=\"absolute inset-0 bg-gray-500 opacity-75\"></div>\n    </div>\n\n    <div x-show=\"show\" \n        class=\"mb-6 bg-white rounded-lg overflow-hidden shadow-xl transform transition-all sm:w-full {{ $maxWidth }} sm:mx-auto\"\n        x-trap.inert.noscroll=\"show\"\n        x-transition:enter=\"ease-out duration-300\"\n        x-transition:enter-start=\"opacity-0 translate-y-4 sm:translate-y-0 sm:scale-95\"\n        x-transition:enter-end=\"opacity-100 translate-y-0 sm:scale-100\"\n        x-transition:leave=\"ease-in duration-200\"\n        x-transition:leave-start=\"opacity-100 translate-y-0 sm:scale-100\"\n        x-transition:leave-end=\"opacity-0 translate-y-4 sm:translate-y-0 sm:scale-95\">\n        {{ $slot }}\n    </div>\n</div>\n"
            },
            "item_38": {
                "path": "resources/views/components/ui",
                "name": "/table/action-column.blade.php",
                "fullPath": "resources/views/components/ui//table/action-column.blade.php",
                "template": "blade/ui/table/ActionColumn.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 38,
                "createdAt": "2025-01-24 12:26:28",
                "updatedAt": "2025-01-27 14:50:48",
                "content": "<td {!! $attributes->merge(['class' => 'px-5 py-4 text-sm font-medium text-right whitespace-nowrap space-x-2']) !!}>\n    {{ $slot }}\n</td>"
            },
            "item_39": {
                "path": "resources/views/components/ui",
                "name": "/table/action-header.blade.php",
                "fullPath": "resources/views/components/ui//table/action-header.blade.php",
                "template": "blade/ui/table/ActionHeader.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 39,
                "createdAt": "2025-01-24 12:26:28",
                "updatedAt": "2025-01-27 14:50:48",
                "content": "<th {!! $attributes->merge(['class' => 'px-5 py-3 text-xs font-medium text-right uppercase']) !!}>\n    {{ $slot }}\n</th>"
            },
            "item_40": {
                "path": "resources/views/components/ui",
                "name": "/table/column.blade.php",
                "fullPath": "resources/views/components/ui//table/column.blade.php",
                "template": "blade/ui/table/Column.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 40,
                "createdAt": "2025-01-24 12:26:28",
                "updatedAt": "2025-01-27 14:50:48",
                "content": "@props([\n    'forCrud' => false\n])\n\n@php\n$allClasses = [\n    'px-5 py-3 text-xs font-medium text-left uppercase' => true,\n    'max-w-xs truncate' => $forCrud,\n];\n\n$classes = join(' ', array_keys(array_filter($allClasses)));\n@endphp\n\n<td {!! $attributes->merge(['class' => 'px-5 py-4 text-sm whitespace-nowrap']) !!}>\n    {{ $slot }}\n</td>"
            },
            "item_41": {
                "path": "resources/views/components/ui",
                "name": "/table/header.blade.php",
                "fullPath": "resources/views/components/ui//table/header.blade.php",
                "template": "blade/ui/table/Header.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 41,
                "createdAt": "2025-01-24 12:26:28",
                "updatedAt": "2025-01-27 14:50:48",
                "content": "@props([\n    'forCrud' => false\n])\n\n@php\n$allClasses = [\n    'px-5 py-3 text-xs font-medium text-left uppercase' => true,\n    'cursor-pointer' => $forCrud,\n];\n\n$classes = join(' ', array_keys(array_filter($allClasses)));\n@endphp\n\n<th {!! $attributes->merge(['class' => $classes]) !!}>\n    {{ $slot }}\n</th>"
            },
            "item_42": {
                "path": "resources/views/components/ui",
                "name": "/table/image.blade.php",
                "fullPath": "resources/views/components/ui//table/image.blade.php",
                "template": "blade/ui/table/Image.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 42,
                "createdAt": "2025-01-24 12:26:28",
                "updatedAt": "2025-01-27 14:50:48",
                "content": "@props([\n    'url' => '',\n    'alt' => ''\n])\n\n<img\n    src=\"{{ $url }}\"\n    alt=\"{{ $alt }}\"\n    class=\"w-12 h-12 rounded-lg bg-center\"\n/>"
            },
            "item_43": {
                "path": "resources/views/components/ui",
                "name": "/table/index.blade.php",
                "fullPath": "resources/views/components/ui//table/index.blade.php",
                "template": "blade/ui/table/Index.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 43,
                "createdAt": "2025-01-24 12:26:28",
                "updatedAt": "2025-01-27 14:50:48",
                "content": "@props([\n    'head',\n    'body',\n    'foot'\n])\n\n<div class=\"overflow-hidden border rounded-lg\">\n    <table {!! $attributes->merge(['class' => 'min-w-full divide-y divide-gray-200']) !!}>\n        @if(isset($head))\n        <thead class=\"bg-gray-50\">\n            <tr class=\"text-gray-500\">\n                {{ $head }}\n            </tr>\n        </thead>\n        @endif\n\n        @if(isset($body))\n        <tbody class=\"bg-white divide-y divide-gray-200 dark:divide-gray-700\">\n            {{ $body }}\n        </tbody>\n        @endif\n\n        @if(isset($foot))\n        <tfoot class=\"\">\n            {{ $foot }}\n        </tfoot>\n        @endif\n    </table>\n    \n</div>"
            },
            "item_44": {
                "path": "resources/views/components/ui",
                "name": "/table/row.blade.php",
                "fullPath": "resources/views/components/ui//table/row.blade.php",
                "template": "blade/ui/table/Row.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 44,
                "createdAt": "2025-01-24 12:26:28",
                "updatedAt": "2025-01-27 14:50:48",
                "content": "<tr {!! $attributes->merge(['class' => 'text-gray-800']) !!}>\n    {{ $slot }}\n</tr>"
            },
            "item_45": {
                "path": "resources/views/livewire/layout",
                "name": "navigation.blade.php",
                "fullPath": "resources/views/livewire/layout/navigation.blade.php",
                "template": "menu/breeze/Navigation.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "ignored",
                "ignoreConflicts": false,
                "id": 45,
                "createdAt": "2025-01-24 12:26:28",
                "updatedAt": "2025-01-27 14:45:42",
                "content": "<?php\n\nuse App\\Livewire\\Actions\\Logout;\nuse Livewire\\Volt\\Component;\n\nnew class extends Component\n{\n    /**\n     * Log the current user out of the application.\n     */\n    public function logout(Logout $logout): void\n    {\n        $logout();\n\n        $this->redirect('/', navigate: true); } }; ?>\n\n<nav x-data=\"{ open: false }\" class=\"bg-white border-b border-gray-100\">\n    <!-- Primary Navigation Menu -->\n    <div class=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n        <div class=\"flex justify-between h-16\">\n            <div class=\"flex\">\n                <!-- Logo -->\n                <div class=\"shrink-0 flex items-center\">\n                    <a href=\"{{ route('dashboard') }}\" wire:navigate>\n                        <x-application-logo\n                            class=\"block h-9 w-auto fill-current text-gray-800\"\n                        />\n                    </a>\n                </div>\n\n                <!-- Navigation Links -->\n                <div class=\"hidden sm:flex sm:items-center sm:ml-6\">\n                    <div class=\"ml-3 relative\">\n                        <x-dropdown align=\"right\" width=\"48\">\n                            <x-slot name=\"trigger\">\n                                <span class=\"inline-flex rounded-md\">\n                                    <button\n                                        type=\"button\"\n                                        class=\"inline-flex items-center px-3 py-2 border border-transparent text-sm leading-4 font-medium rounded-md text-gray-500 bg-white hover:text-gray-700 focus:outline-none focus:bg-gray-50 active:bg-gray-50 transition ease-in-out duration-150\"\n                                    >\n                                        {{ __('navigation.home') }}\n\n                                        <svg\n                                            class=\"ml-2 -mr-0.5 h-4 w-4\"\n                                            xmlns=\"http://www.w3.org/2000/svg\"\n                                            fill=\"none\"\n                                            viewBox=\"0 0 24 24\"\n                                            stroke-width=\"1.5\"\n                                            stroke=\"currentColor\"\n                                        >\n                                            <path\n                                                stroke-linecap=\"round\"\n                                                stroke-linejoin=\"round\"\n                                                d=\"M19.5 8.25l-7.5 7.5-7.5-7.5\"\n                                            />\n                                        </svg>\n                                    </button>\n                                </span>\n                            </x-slot>\n\n                            <x-slot name=\"content\">\n                                <x-dropdown-link>\n                                    No items found\n                                </x-dropdown-link>\n                            </x-slot>\n                        </x-dropdown>\n                    </div>\n                    <div class=\"ml-3 relative\">\n                        <x-dropdown align=\"right\" width=\"48\">\n                            <x-slot name=\"trigger\">\n                                <span class=\"inline-flex rounded-md\">\n                                    <button\n                                        type=\"button\"\n                                        class=\"inline-flex items-center px-3 py-2 border border-transparent text-sm leading-4 font-medium rounded-md text-gray-500 bg-white hover:text-gray-700 focus:outline-none focus:bg-gray-50 active:bg-gray-50 transition ease-in-out duration-150\"\n                                    >\n                                        {{ __('navigation.apps') }}\n\n                                        <svg\n                                            class=\"ml-2 -mr-0.5 h-4 w-4\"\n                                            xmlns=\"http://www.w3.org/2000/svg\"\n                                            fill=\"none\"\n                                            viewBox=\"0 0 24 24\"\n                                            stroke-width=\"1.5\"\n                                            stroke=\"currentColor\"\n                                        >\n                                            <path\n                                                stroke-linecap=\"round\"\n                                                stroke-linejoin=\"round\"\n                                                d=\"M19.5 8.25l-7.5 7.5-7.5-7.5\"\n                                            />\n                                        </svg>\n                                    </button>\n                                </span>\n                            </x-slot>\n\n                            <x-slot name=\"content\">\n                                @can('view-any', App\\Models\\Service::class)\n                                <x-dropdown-link\n                                    wire:navigate\n                                    href=\"{{ route('dashboard.services.index') }}\"\n                                >\n                                    {{ __('navigation.services') }}\n                                </x-dropdown-link>\n                                @endcan @can('view-any',\n                                App\\Models\\SubService::class)\n                                <x-dropdown-link\n                                    wire:navigate\n                                    href=\"{{ route('dashboard.sub-services.index') }}\"\n                                >\n                                    {{ __('navigation.sub_services') }}\n                                </x-dropdown-link>\n                                @endcan @can('view-any',\n                                App\\Models\\SubServiceTemplate::class)\n                                <x-dropdown-link\n                                    wire:navigate\n                                    href=\"{{ route('dashboard.sub-service-templates.index') }}\"\n                                >\n                                    {{ __('navigation.sub_service_templates') }}\n                                </x-dropdown-link>\n                                @endcan @can('view-any',\n                                App\\Models\\DeliveryDays::class)\n                                <x-dropdown-link\n                                    wire:navigate\n                                    href=\"{{ route('dashboard.all-delivery-days.index') }}\"\n                                >\n                                    {{ __('navigation.all_delivery_days') }}\n                                </x-dropdown-link>\n                                @endcan @can('view-any',\n                                App\\Models\\ContentCategory::class)\n                                <x-dropdown-link\n                                    wire:navigate\n                                    href=\"{{ route('dashboard.content-categories.index') }}\"\n                                >\n                                    {{ __('navigation.content_categories') }}\n                                </x-dropdown-link>\n                                @endcan\n                            </x-slot>\n                        </x-dropdown>\n                    </div>\n                </div>\n            </div>\n\n            <!-- Settings Dropdown -->\n            <div class=\"hidden sm:flex sm:items-center sm:ms-6\">\n                <x-dropdown align=\"right\" width=\"48\">\n                    <x-slot name=\"trigger\">\n                        <button\n                            class=\"inline-flex items-center px-3 py-2 border border-transparent text-sm leading-4 font-medium rounded-md text-gray-500 bg-white hover:text-gray-700 focus:outline-none transition ease-in-out duration-150\"\n                        >\n                            <div\n                                x-data=\"{{ json_encode(['name' => auth()->user()->name]) }}\"\n                                x-text=\"name\"\n                                x-on:profile-updated.window=\"name = $event.detail.name\"\n                            ></div>\n\n                            <div class=\"ms-1\">\n                                <svg\n                                    class=\"fill-current h-4 w-4\"\n                                    xmlns=\"http://www.w3.org/2000/svg\"\n                                    viewBox=\"0 0 20 20\"\n                                >\n                                    <path\n                                        fill-rule=\"evenodd\"\n                                        d=\"M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z\"\n                                        clip-rule=\"evenodd\"\n                                    />\n                                </svg>\n                            </div>\n                        </button>\n                    </x-slot>\n\n                    <x-slot name=\"content\">\n                        <x-dropdown-link :href=\"route('profile')\" wire:navigate>\n                            {{ __('Profile') }}\n                        </x-dropdown-link>\n\n                        <!-- Authentication -->\n                        <button wire:click=\"logout\" class=\"w-full text-start\">\n                            <x-dropdown-link>\n                                {{ __('Log Out') }}\n                            </x-dropdown-link>\n                        </button>\n                    </x-slot>\n                </x-dropdown>\n            </div>\n\n            <!-- Hamburger -->\n            <div class=\"-me-2 flex items-center sm:hidden\">\n                <button\n                    @click=\"open = ! open\"\n                    class=\"inline-flex items-center justify-center p-2 rounded-md text-gray-400 hover:text-gray-500 hover:bg-gray-100 focus:outline-none focus:bg-gray-100 focus:text-gray-500 transition duration-150 ease-in-out\"\n                >\n                    <svg\n                        class=\"h-6 w-6\"\n                        stroke=\"currentColor\"\n                        fill=\"none\"\n                        viewBox=\"0 0 24 24\"\n                    >\n                        <path\n                            :class=\"{'hidden': open, 'inline-flex': ! open }\"\n                            class=\"inline-flex\"\n                            stroke-linecap=\"round\"\n                            stroke-linejoin=\"round\"\n                            stroke-width=\"2\"\n                            d=\"M4 6h16M4 12h16M4 18h16\"\n                        />\n                        <path\n                            :class=\"{'hidden': ! open, 'inline-flex': open }\"\n                            class=\"hidden\"\n                            stroke-linecap=\"round\"\n                            stroke-linejoin=\"round\"\n                            stroke-width=\"2\"\n                            d=\"M6 18L18 6M6 6l12 12\"\n                        />\n                    </svg>\n                </button>\n            </div>\n        </div>\n    </div>\n\n    <!-- Responsive Navigation Menu -->\n    <div :class=\"{'block': open, 'hidden': ! open}\" class=\"hidden sm:hidden\">\n        <div class=\"pt-2 pb-3 space-y-1\">\n            @can('view-any', App\\Models\\Service::class)\n            <x-responsive-nav-link\n                href=\"{{ route('dashboard.services.index') }}\"\n                :active=\"request()->routeIs('dashboard.services.index')\"\n            >\n                {{ __('navigation.services') }}\n            </x-responsive-nav-link>\n            @endcan @can('view-any', App\\Models\\SubService::class)\n            <x-responsive-nav-link\n                href=\"{{ route('dashboard.sub-services.index') }}\"\n                :active=\"request()->routeIs('dashboard.sub-services.index')\"\n            >\n                {{ __('navigation.sub_services') }}\n            </x-responsive-nav-link>\n            @endcan @can('view-any', App\\Models\\SubServiceTemplate::class)\n            <x-responsive-nav-link\n                href=\"{{ route('dashboard.sub-service-templates.index') }}\"\n                :active=\"request()->routeIs('dashboard.sub-service-templates.index')\"\n            >\n                {{ __('navigation.sub_service_templates') }}\n            </x-responsive-nav-link>\n            @endcan @can('view-any', App\\Models\\DeliveryDays::class)\n            <x-responsive-nav-link\n                href=\"{{ route('dashboard.all-delivery-days.index') }}\"\n                :active=\"request()->routeIs('dashboard.all-delivery-days.index')\"\n            >\n                {{ __('navigation.all_delivery_days') }}\n            </x-responsive-nav-link>\n            @endcan @can('view-any', App\\Models\\ContentCategory::class)\n            <x-responsive-nav-link\n                href=\"{{ route('dashboard.content-categories.index') }}\"\n                :active=\"request()->routeIs('dashboard.content-categories.index')\"\n            >\n                {{ __('navigation.content_categories') }}\n            </x-responsive-nav-link>\n            @endcan\n        </div>\n\n        <!-- Responsive Settings Options -->\n        <div class=\"pt-4 pb-1 border-t border-gray-200\">\n            <div class=\"px-4\">\n                <div\n                    class=\"font-medium text-base text-gray-800\"\n                    x-data=\"{{ json_encode(['name' => auth()->user()->name]) }}\"\n                    x-text=\"name\"\n                    x-on:profile-updated.window=\"name = $event.detail.name\"\n                ></div>\n                <div class=\"font-medium text-sm text-gray-500\">\n                    {{ auth()->user()->email }}\n                </div>\n            </div>\n\n            <div class=\"mt-3 space-y-1\">\n                <x-responsive-nav-link :href=\"route('profile')\" wire:navigate>\n                    {{ __('Profile') }}\n                </x-responsive-nav-link>\n\n                <!-- Authentication -->\n                <button wire:click=\"logout\" class=\"w-full text-start\">\n                    <x-responsive-nav-link>\n                        {{ __('Log Out') }}\n                    </x-responsive-nav-link>\n                </button>\n            </div>\n        </div>\n    </div>\n</nav>\n",
                "conflictFileName": "wOA2ssjYu5ZVQOb9bk6bnZ6MNC0ucE8b.json"
            },
            "item_46": {
                "path": "database/factories",
                "name": "UserFactory.php",
                "fullPath": "database/factories/UserFactory.php",
                "template": "database/Factory.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 46,
                "createdAt": "2025-01-24 12:26:28",
                "updatedAt": "2025-01-27 14:50:48",
                "content": "<?php\n\nnamespace Database\\Factories;\n\nuse App\\Models\\User;\nuse Illuminate\\Support\\Str;\nuse Illuminate\\Database\\Eloquent\\Factories\\Factory;\n\nclass UserFactory extends Factory\n{\n    /**\n     * The name of the factory's corresponding model.\n     *\n     * @var string\n     */\n    protected $model = User::class;\n\n    /**\n     * Define the model's default state.\n     *\n     * @return array<string, mixed>\n     */\n    public function definition(): array\n    {\n        return [\n            'name' => fake()->name(),\n            'email' => fake()\n                ->unique()\n                ->safeEmail(),\n            'email_verified_at' => now(),\n            'password' => \\Hash::make('password'),\n            'remember_token' => \\Str::random(10),\n            'phone' => fake()->unique->phoneNumber(),\n            'image' => fake()->word(),\n            'type' => fake()->word(),\n            'status' => fake()->word(),\n        ];\n    }\n\n    /**\n     * Indicate that the model's email address should be unverified.\n     */\n    public function unverified(): Factory\n    {\n        return $this->state(function (array $attributes) {\n            return [\n                'email_verified_at' => null,\n            ];\n        });\n    }\n}\n",
                "conflictFileName": null
            },
            "item_47": {
                "path": "database/seeders",
                "name": "UserSeeder.php",
                "fullPath": "database/seeders/UserSeeder.php",
                "template": "database/Seeder.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 47,
                "createdAt": "2025-01-24 12:26:28",
                "updatedAt": "2025-01-27 14:50:48",
                "content": "<?php\n\nnamespace Database\\Seeders;\n\nuse App\\Models\\User;\nuse Illuminate\\Database\\Seeder;\n\nclass UserSeeder extends Seeder\n{\n    /**\n     * Run the database seeds.\n     */\n    public function run(): void\n    {\n        User::factory()\n            ->count(5)\n            ->create();\n    }\n}\n"
            },
            "item_48": {
                "path": "app/Policies",
                "name": "UserPolicy.php",
                "fullPath": "app/Policies/UserPolicy.php",
                "template": "models/Policy.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 48,
                "createdAt": "2025-01-24 12:26:28",
                "updatedAt": "2025-01-27 14:50:48",
                "content": "<?php\n\nnamespace App\\Policies;\n\nuse App\\Models\\User;\n\nclass UserPolicy\n{\n    /**\n     * Determine whether the user can view any models.\n     */\n    public function viewAny(User $user): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can view the model.\n     */\n    public function view(User $user, User $model): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can create models.\n     */\n    public function create(User $user): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can update the model.\n     */\n    public function update(User $user, User $model): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can delete the model.\n     */\n    public function delete(User $user, User $model): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can restore the model.\n     */\n    public function restore(User $user, User $model): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can permanently delete the model.\n     */\n    public function forceDelete(User $user, User $model): bool\n    {\n        return true;\n    }\n}\n"
            },
            "item_49": {
                "path": "database/factories",
                "name": "ServiceFactory.php",
                "fullPath": "database/factories/ServiceFactory.php",
                "template": "database/Factory.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 49,
                "createdAt": "2025-01-24 12:26:28",
                "updatedAt": "2025-01-27 14:50:48",
                "content": "<?php\n\nnamespace Database\\Factories;\n\nuse App\\Models\\Service;\nuse Illuminate\\Support\\Str;\nuse Illuminate\\Database\\Eloquent\\Factories\\Factory;\n\nclass ServiceFactory extends Factory\n{\n    /**\n     * The name of the factory's corresponding model.\n     *\n     * @var string\n     */\n    protected $model = Service::class;\n\n    /**\n     * Define the model's default state.\n     *\n     * @return array<string, mixed>\n     */\n    public function definition(): array\n    {\n        return [\n            'title' => fake()->sentence(10),\n            'description' => fake()->sentence(15),\n        ];\n    }\n}\n"
            },
            "item_50": {
                "path": "database/seeders",
                "name": "ServiceSeeder.php",
                "fullPath": "database/seeders/ServiceSeeder.php",
                "template": "database/Seeder.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 50,
                "createdAt": "2025-01-24 12:26:28",
                "updatedAt": "2025-01-27 14:50:48",
                "content": "<?php\n\nnamespace Database\\Seeders;\n\nuse App\\Models\\Service;\nuse Illuminate\\Database\\Seeder;\n\nclass ServiceSeeder extends Seeder\n{\n    /**\n     * Run the database seeds.\n     */\n    public function run(): void\n    {\n        Service::factory()\n            ->count(5)\n            ->create();\n    }\n}\n"
            },
            "item_51": {
                "path": "app/Policies",
                "name": "ServicePolicy.php",
                "fullPath": "app/Policies/ServicePolicy.php",
                "template": "models/Policy.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 51,
                "createdAt": "2025-01-24 12:26:28",
                "updatedAt": "2025-01-27 14:50:48",
                "content": "<?php\n\nnamespace App\\Policies;\n\nuse App\\Models\\User;\nuse App\\Models\\Service;\n\nclass ServicePolicy\n{\n    /**\n     * Determine whether the user can view any models.\n     */\n    public function viewAny(User $user): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can view the model.\n     */\n    public function view(User $user, Service $model): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can create models.\n     */\n    public function create(User $user): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can update the model.\n     */\n    public function update(User $user, Service $model): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can delete the model.\n     */\n    public function delete(User $user, Service $model): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can restore the model.\n     */\n    public function restore(User $user, Service $model): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can permanently delete the model.\n     */\n    public function forceDelete(User $user, Service $model): bool\n    {\n        return true;\n    }\n}\n"
            },
            "item_52": {
                "path": "resources/views/livewire/dashboard/services",
                "name": "index.blade.php",
                "fullPath": "resources/views/livewire/dashboard/services/index.blade.php",
                "template": "crud/views/livewire/IndexView.vemtl",
                "projectId": 1,
                "type": "blade",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 52,
                "createdAt": "2025-01-24 12:26:28",
                "updatedAt": "2025-01-27 14:50:48",
                "content": "<div class=\"max-w-7xl mx-auto py-10 sm:px-6 lg:px-8 space-y-4\">\n    <x-ui.breadcrumbs>\n        <x-ui.breadcrumbs.link href=\"/dashboard\"\n            >Dashboard</x-ui.breadcrumbs.link\n        >\n        <x-ui.breadcrumbs.separator />\n        <x-ui.breadcrumbs.link active\n            >{{ __('crud.services.collectionTitle') }}</x-ui.breadcrumbs.link\n        >\n    </x-ui.breadcrumbs>\n\n    <div class=\"flex justify-between align-top py-4\">\n        <x-ui.input\n            wire:model.live=\"search\"\n            type=\"text\"\n            placeholder=\"Search {{ __('crud.services.collectionTitle') }}...\"\n        />\n\n        @can('create', App\\Models\\Service::class)\n        <a wire:navigate href=\"{{ route('dashboard.services.create') }}\">\n            <x-ui.button>New</x-ui.button>\n        </a>\n        @endcan\n    </div>\n\n    {{-- Delete Modal --}}\n    <x-ui.modal.confirm wire:model=\"confirmingDeletion\">\n        <x-slot name=\"title\"> {{ __('Delete') }} </x-slot>\n\n        <x-slot name=\"content\"> {{ __('Are you sure?') }} </x-slot>\n\n        <x-slot name=\"footer\">\n            <x-ui.button\n                wire:click=\"$toggle('confirmingDeletion')\"\n                wire:loading.attr=\"disabled\"\n            >\n                {{ __('Cancel') }}\n            </x-ui.button>\n\n            <x-ui.button.danger\n                class=\"ml-3\"\n                wire:click=\"delete({{ $deletingService }})\"\n                wire:loading.attr=\"disabled\"\n            >\n                {{ __('Delete') }}\n            </x-ui.button.danger>\n        </x-slot>\n    </x-ui.modal.confirm>\n\n    {{-- Index Table --}}\n    <x-ui.container.table>\n        <x-ui.table>\n            <x-slot name=\"head\">\n                <x-ui.table.header for-crud wire:click=\"sortBy('title')\"\n                    >{{ __('crud.services.inputs.title.label')\n                    }}</x-ui.table.header\n                >\n                <x-ui.table.header for-crud wire:click=\"sortBy('description')\"\n                    >{{ __('crud.services.inputs.description.label')\n                    }}</x-ui.table.header\n                >\n                <x-ui.table.header for-crud wire:click=\"sortBy('image')\"\n                    >{{ __('crud.services.inputs.image.label')\n                    }}</x-ui.table.header\n                >\n                <x-ui.table.action-header>Actions</x-ui.table.action-header>\n            </x-slot>\n\n            <x-slot name=\"body\">\n                @forelse ($services as $service)\n                <x-ui.table.row wire:loading.class.delay=\"opacity-75\">\n                    <x-ui.table.column for-crud\n                        >{{ $service->title }}</x-ui.table.column\n                    >\n                    <x-ui.table.column for-crud\n                        >{{ $service->description }}</x-ui.table.column\n                    >\n                    <x-ui.table.column for-crud>\n                        <x-ui.table.image\n                            url=\"{{ asset('storage/' . $service->image) }}\"\n                            alt=\"{{ $service->image }}\"\n                        />\n                    </x-ui.table.column>\n                    <x-ui.table.action-column>\n                        @can('update', $service)\n                        <x-ui.action\n                            wire:navigate\n                            href=\"{{ route('dashboard.services.edit', $service) }}\"\n                            >Edit</x-ui.action\n                        >\n                        @endcan @can('delete', $service)\n                        <x-ui.action.danger\n                            wire:click=\"confirmDeletion({{ $service->id }})\"\n                            >Delete</x-ui.action.danger\n                        >\n                        @endcan\n                    </x-ui.table.action-column>\n                </x-ui.table.row>\n                @empty\n                <x-ui.table.row>\n                    <x-ui.table.column colspan=\"4\"\n                        >No {{ __('crud.services.collectionTitle') }} found.</x-ui.table.column\n                    >\n                </x-ui.table.row>\n                @endforelse\n            </x-slot>\n        </x-ui.table>\n\n        <div class=\"mt-2\">{{ $services->links() }}</div>\n    </x-ui.container.table>\n</div>\n"
            },
            "item_53": {
                "path": "app/Livewire/Dashboard",
                "name": "ServiceIndex.php",
                "fullPath": "app/Livewire/Dashboard/ServiceIndex.php",
                "template": "crud/views/livewire/IndexComponent.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 53,
                "createdAt": "2025-01-24 12:26:28",
                "updatedAt": "2025-01-27 14:50:48",
                "content": "<?php\n\nnamespace App\\Livewire\\Dashboard;\n\nuse Livewire\\Component;\nuse App\\Models\\Service;\nuse Livewire\\WithPagination;\n\nclass ServiceIndex extends Component\n{\n    use WithPagination;\n\n    public $search;\n    public $sortField = 'updated_at';\n    public $sortDirection = 'desc';\n\n    public $queryString = ['search', 'sortField', 'sortDirection'];\n\n    public $confirmingDeletion = false;\n    public $deletingService;\n\n    public function updatingSearch()\n    {\n        $this->resetPage();\n    }\n\n    public function confirmDeletion(string $id)\n    {\n        $this->deletingService = $id;\n\n        $this->confirmingDeletion = true;\n    }\n\n    public function delete(Service $service)\n    {\n        $service->delete();\n\n        $this->confirmingDeletion = false;\n    }\n\n    public function sortBy($field)\n    {\n        if ($this->sortField === $field) {\n            $this->sortDirection =\n                $this->sortDirection === 'asc' ? 'desc' : 'asc';\n        } else {\n            $this->sortDirection = 'asc';\n        }\n\n        $this->sortField = $field;\n    }\n\n    public function getRowsProperty()\n    {\n        return $this->rowsQuery->paginate(5);\n    }\n\n    public function getRowsQueryProperty()\n    {\n        return Service::query()\n            ->orderBy($this->sortField, $this->sortDirection)\n            ->where('title', 'like', \"%{$this->search}%\");\n    }\n\n    public function render()\n    {\n        return view('livewire.dashboard.services.index', [\n            'services' => $this->rows,\n        ]);\n    }\n}\n"
            },
            "item_54": {
                "path": "resources/views/livewire/dashboard/services",
                "name": "create.blade.php",
                "fullPath": "resources/views/livewire/dashboard/services/create.blade.php",
                "template": "crud/views/livewire/CreateView.vemtl",
                "projectId": 1,
                "type": "blade",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 54,
                "createdAt": "2025-01-24 12:26:28",
                "updatedAt": "2025-01-27 14:50:48",
                "content": "<div class=\"max-w-7xl mx-auto py-10 sm:px-6 lg:px-8 space-y-4\">\n    <x-ui.breadcrumbs>\n        <x-ui.breadcrumbs.link href=\"/dashboard\"\n            >Dashboard</x-ui.breadcrumbs.link\n        >\n        <x-ui.breadcrumbs.separator />\n        <x-ui.breadcrumbs.link href=\"{{ route('dashboard.services.index') }}\"\n            >{{ __('crud.services.collectionTitle') }}</x-ui.breadcrumbs.link\n        >\n        <x-ui.breadcrumbs.separator />\n        <x-ui.breadcrumbs.link active\n            >Create {{ __('crud.services.itemTitle') }}</x-ui.breadcrumbs.link\n        >\n    </x-ui.breadcrumbs>\n\n    <div class=\"w-full text-gray-500 text-lg font-semibold py-4 uppercase\">\n        <h1>Create {{ __('crud.services.itemTitle') }}</h1>\n    </div>\n\n    <div class=\"overflow-hidden border rounded-lg bg-white\">\n        <form class=\"w-full mb-0\" wire:submit.prevent=\"save\">\n            <div class=\"p-6 space-y-3\">\n                <div class=\"w-full\">\n                    <x-ui.label for=\"title\"\n                        >{{ __('crud.services.inputs.title.label')\n                        }}</x-ui.label\n                    >\n                    <x-ui.input.text\n                        class=\"w-full\"\n                        wire:model=\"form.title\"\n                        name=\"title\"\n                        id=\"title\"\n                        placeholder=\"{{ __('crud.services.inputs.title.placeholder') }}\"\n                    />\n                    <x-ui.input.error for=\"form.title\" />\n                </div>\n\n                <div class=\"w-full\">\n                    <x-ui.label for=\"description\"\n                        >{{ __('crud.services.inputs.description.label')\n                        }}</x-ui.label\n                    >\n                    <x-ui.input.textarea\n                        class=\"w-full\"\n                        wire:model=\"form.description\"\n                        rows=\"6\"\n                        name=\"description\"\n                        id=\"description\"\n                        placeholder=\"{{ __('crud.services.inputs.description.placeholder') }}\"\n                    />\n                    <x-ui.input.error for=\"form.description\" />\n                </div>\n\n                <div class=\"w-full\">\n                    <x-ui.label for=\"image\"\n                        >{{ __('crud.services.inputs.image.label')\n                        }}</x-ui.label\n                    >\n                    <x-ui.input.image\n                        :src=\"$form->newImage ? Storage::url($form->newImage) : Storage::url($form->image)\"\n                        wire:model=\"form.newImage\"\n                        x-on:removed=\"$form->deleteImage()\"\n                        class=\"w-full\"\n                        id=\"image\"\n                        name=\"image\"\n                    />\n                    <x-ui.input.error for=\"form.newImage\" />\n                </div>\n            </div>\n\n            <div class=\"flex justify-between mt-4 border-t border-gray-50 p-4\">\n                <div>\n                    <!-- Other buttons here -->\n                </div>\n                <div>\n                    <x-ui.button type=\"submit\">Save</x-ui.button>\n                </div>\n            </div>\n        </form>\n    </div>\n</div>\n"
            },
            "item_55": {
                "path": "app/Livewire/Dashboard",
                "name": "ServiceCreate.php",
                "fullPath": "app/Livewire/Dashboard/ServiceCreate.php",
                "template": "crud/views/livewire/CreateComponent.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "ignored",
                "ignoreConflicts": false,
                "id": 55,
                "createdAt": "2025-01-24 12:26:28",
                "updatedAt": "2025-01-27 14:45:35",
                "content": "<?php\n\nnamespace App\\Livewire\\Dashboard;\n\nuse Livewire\\Component;\nuse Livewire\\WithFileUploads;\nuse Illuminate\\Support\\Collection;\nuse App\\Livewire\\Dashboard\\Services\\Forms\\CreateForm;\n\nclass ServiceCreate extends Component\n{\n    use WithFileUploads;\n\n    public CreateForm $form;\n\n    public function mount()\n    {\n    }\n\n    public function save()\n    {\n        $this->authorize('create', Service::class);\n\n        $this->validate();\n\n        $service = $this->form->save();\n\n        return redirect()->route('dashboard.services.edit', $service);\n    }\n\n    public function render()\n    {\n        return view('livewire.dashboard.services.create', []);\n    }\n}\n",
                "conflictFileName": "aXXLifPDz4LnXbMBrWAkHD3lyvXgXz41.json"
            },
            "item_56": {
                "path": "resources/views/livewire/dashboard/services",
                "name": "edit.blade.php",
                "fullPath": "resources/views/livewire/dashboard/services/edit.blade.php",
                "template": "crud/views/livewire/EditView.vemtl",
                "projectId": 1,
                "type": "blade",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 56,
                "createdAt": "2025-01-24 12:26:28",
                "updatedAt": "2025-01-27 14:50:48",
                "content": "<div class=\"max-w-7xl mx-auto py-10 sm:px-6 lg:px-8 space-y-4\">\n    <x-ui.breadcrumbs>\n        <x-ui.breadcrumbs.link href=\"/dashboard\"\n            >Dashboard</x-ui.breadcrumbs.link\n        >\n        <x-ui.breadcrumbs.separator />\n        <x-ui.breadcrumbs.link href=\"{{ route('dashboard.services.index') }}\"\n            >{{ __('crud.services.collectionTitle') }}</x-ui.breadcrumbs.link\n        >\n        <x-ui.breadcrumbs.separator />\n        <x-ui.breadcrumbs.link active\n            >Edit {{ __('crud.services.itemTitle') }}</x-ui.breadcrumbs.link\n        >\n    </x-ui.breadcrumbs>\n\n    <x-ui.toast on=\"saved\"> Service saved successfully. </x-ui.toast>\n\n    <div class=\"w-full text-gray-500 text-lg font-semibold py-4 uppercase\">\n        <h1>Edit {{ __('crud.services.itemTitle') }}</h1>\n    </div>\n\n    <div class=\"overflow-hidden border rounded-lg bg-white\">\n        <form class=\"w-full mb-0\" wire:submit.prevent=\"save\">\n            <div class=\"p-6 space-y-3\">\n                <div class=\"w-full\">\n                    <x-ui.label for=\"title\"\n                        >{{ __('crud.services.inputs.title.label')\n                        }}</x-ui.label\n                    >\n                    <x-ui.input.text\n                        class=\"w-full\"\n                        wire:model=\"form.title\"\n                        name=\"title\"\n                        id=\"title\"\n                        placeholder=\"{{ __('crud.services.inputs.title.placeholder') }}\"\n                    />\n                    <x-ui.input.error for=\"form.title\" />\n                </div>\n\n                <div class=\"w-full\">\n                    <x-ui.label for=\"description\"\n                        >{{ __('crud.services.inputs.description.label')\n                        }}</x-ui.label\n                    >\n                    <x-ui.input.textarea\n                        class=\"w-full\"\n                        wire:model=\"form.description\"\n                        rows=\"6\"\n                        name=\"description\"\n                        id=\"description\"\n                        placeholder=\"{{ __('crud.services.inputs.description.placeholder') }}\"\n                    />\n                    <x-ui.input.error for=\"form.description\" />\n                </div>\n\n                <div class=\"w-full\">\n                    <x-ui.label for=\"image\"\n                        >{{ __('crud.services.inputs.image.label')\n                        }}</x-ui.label\n                    >\n                    <x-ui.input.image\n                        :src=\"$form->newImage ? Storage::url($form->newImage) : Storage::url($form->image)\"\n                        wire:model=\"form.newImage\"\n                        x-on:removed=\"$form->deleteImage()\"\n                        class=\"w-full\"\n                        id=\"image\"\n                        name=\"image\"\n                    />\n                    <x-ui.input.error for=\"form.newImage\" />\n                </div>\n            </div>\n\n            <div class=\"flex justify-between mt-4 border-t border-gray-50 p-4\">\n                <div>\n                    <!-- Other buttons here -->\n                </div>\n                <div>\n                    <x-ui.button type=\"submit\">Save</x-ui.button>\n                </div>\n            </div>\n        </form>\n    </div>\n</div>\n"
            },
            "item_57": {
                "path": "app/Livewire/Dashboard",
                "name": "ServiceEdit.php",
                "fullPath": "app/Livewire/Dashboard/ServiceEdit.php",
                "template": "crud/views/livewire/EditComponent.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "ignored",
                "ignoreConflicts": false,
                "id": 57,
                "createdAt": "2025-01-24 12:26:28",
                "updatedAt": "2025-01-27 14:45:28",
                "content": "<?php\n\nnamespace App\\Livewire\\Dashboard;\n\nuse Livewire\\Component;\nuse App\\Models\\Service;\nuse Illuminate\\Support\\Collection;\nuse App\\Livewire\\Dashboard\\Services\\Forms\\UpdateForm;\n\nclass ServiceEdit extends Component\n{\n    public ?Service $service = null;\n\n    public UpdateForm $form;\n\n    public function mount(Service $service)\n    {\n        $this->authorize('view-any', Service::class);\n\n        $this->service = $service;\n\n        $this->form->setService($service);\n    }\n\n    public function save()\n    {\n        $this->authorize('update', $this->service);\n\n        $this->validate();\n\n        $this->form->save();\n\n        $this->dispatch('saved');\n    }\n\n    public function render()\n    {\n        return view('livewire.dashboard.services.edit', []);\n    }\n}\n",
                "conflictFileName": "PklBTdhxODUfMpDEoPLB04E4UU5vPUXv.json"
            },
            "item_58": {
                "path": "app/Livewire/Dashboard/Services/Forms",
                "name": "CreateForm.php",
                "fullPath": "app/Livewire/Dashboard/Services/Forms/CreateForm.php",
                "template": "crud/views/livewire/CreateFormComponent.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 58,
                "createdAt": "2025-01-24 12:26:28",
                "updatedAt": "2025-01-27 14:50:48",
                "content": "<?php\n\nnamespace App\\Livewire\\Dashboard\\Services\\Forms;\n\nuse Livewire\\Form;\nuse App\\Models\\Service;\nuse Livewire\\Attributes\\Rule;\n\nclass CreateForm extends Form\n{\n    #[Rule('required|string|unique:services,title')]\n    public $title = '';\n\n    #[Rule('nullable|string')]\n    public $description = '';\n\n    #[Rule('nullable|image|max:1024')]\n    public $image = '';\n\n    public $newImage = null;\n\n    public function save()\n    {\n        $this->validate();\n\n        $this->processImage();\n\n        $service = Service::create($this->except(['newImage']));\n\n        $this->reset();\n\n        return $service;\n    }\n\n    public function processImage()\n    {\n        if (empty($this->newImage)) {\n            return;\n        }\n\n        $this->image = $this->newImage->store('services', 'public');\n    }\n\n    public function deleteImage()\n    {\n        $this->newImage = null;\n    }\n}\n",
                "conflictFileName": null
            },
            "item_59": {
                "path": "app/Livewire/Dashboard/Services/Forms",
                "name": "UpdateForm.php",
                "fullPath": "app/Livewire/Dashboard/Services/Forms/UpdateForm.php",
                "template": "crud/views/livewire/UpdateFormComponent.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 59,
                "createdAt": "2025-01-24 12:26:28",
                "updatedAt": "2025-01-27 14:50:48",
                "content": "<?php\n\nnamespace App\\Livewire\\Dashboard\\Services\\Forms;\n\nuse Livewire\\Form;\nuse App\\Models\\Service;\nuse Illuminate\\Validation\\Rule;\n\nclass UpdateForm extends Form\n{\n    public ?Service $service;\n\n    public $title = '';\n\n    public $description = '';\n\n    public $image = '';\n\n    public $newImage = null;\n\n    public function rules(): array\n    {\n        return [\n            'title' => [\n                'required',\n                'string',\n                Rule::unique('services', 'title')->ignore($this->service),\n            ],\n            'description' => ['nullable', 'string'],\n            'image' => ['nullable', 'image', 'max:1024'],\n        ];\n    }\n\n    public function setService(Service $service)\n    {\n        $this->service = $service;\n\n        $this->title = $service->title;\n        $this->description = $service->description;\n        $this->image = $service->image;\n    }\n\n    public function save()\n    {\n        $this->validate();\n\n        $this->processImage();\n\n        $this->service->update($this->except(['service', 'newImage']));\n    }\n\n    public function processImage()\n    {\n        if (empty($this->newImage)) {\n            return;\n        }\n\n        $this->service->image = $this->newImage->store('services', 'public');\n    }\n\n    public function deleteImage()\n    {\n        $this->newImage = null;\n    }\n}\n"
            },
            "item_60": {
                "path": "database/seeders",
                "name": "DatabaseSeeder.php",
                "fullPath": "database/seeders/DatabaseSeeder.php",
                "template": "database/DatabaseSeeder.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "ignored",
                "ignoreConflicts": false,
                "id": 60,
                "createdAt": "2025-01-24 12:26:28",
                "updatedAt": "2025-01-24 14:45:51",
                "content": "<?php\n\nnamespace Database\\Seeders;\n\nuse Illuminate\\Database\\Seeder;\n// use Illuminate\\Database\\Console\\Seeds\\WithoutModelEvents;\n\nuse App\\Models\\User;\n\nclass DatabaseSeeder extends Seeder\n{\n    /**\n     * Seed the application's database.\n     */\n    public function run(): void\n    {\n        User::factory()\n            ->count(1)\n            ->create([\n                'email' => 'admin@admin.com',\n                'password' => \\Hash::make('admin'),\n            ]);\n\n        $this->call(ServiceSeeder::class);\n        $this->call(SubServiceSeeder::class);\n    }\n}\n",
                "conflictFileName": "YngetivEzpDTTBP6dO0A2x0sB4zJA3Bl.json"
            },
            "item_61": {
                "path": "resources/views/components/layouts",
                "name": "app.blade.php",
                "fullPath": "resources/views/components/layouts/app.blade.php",
                "template": "crud/views/livewire/BreezeLayoutComponent.vemtl",
                "projectId": 1,
                "type": "html",
                "status": "ignored",
                "ignoreConflicts": false,
                "id": 61,
                "createdAt": "2025-01-24 12:26:28",
                "updatedAt": "2025-01-27 14:45:21",
                "content": "<!DOCTYPE html>\n<html lang=\"{{ str_replace('_', '-', app()->getLocale()) }}\">\n    <head>\n        <meta charset=\"utf-8\">\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n        <meta name=\"csrf-token\" content=\"{{ csrf_token() }}\">\n\n        <title>{{ config('app.name', 'Laravel') }}</title>\n\n        <!-- Fonts -->\n        <link rel=\"preconnect\" href=\"https://fonts.bunny.net\">\n        <link href=\"https://fonts.bunny.net/css?family=figtree:400,500,600&display=swap\" rel=\"stylesheet\" />\n\n        <!-- Scripts -->\n        @vite(['resources/css/app.css', 'resources/js/app.js'])\n    </head>\n    <body class=\"font-sans antialiased\">\n        <div class=\"min-h-screen bg-gray-100\">\n            @livewire('layout.navigation')\n\n            <!-- Page Heading -->\n            @if (isset($header))\n                <header class=\"bg-white shadow\">\n                    <div class=\"max-w-7xl mx-auto py-6 px-4 sm:px-6 lg:px-8\">\n                        {{ $header }}\n                    </div>\n                </header>\n            @endif\n\n            <!-- Page Content -->\n            <main>\n                {{ $slot }}\n            </main>\n        </div>\n\n        @stack('modals')\n    </body>\n</html>\n",
                "conflictFileName": "42GGOFZimjGt4dobIiJ5R8rGvhRwoPaZ.json"
            },
            "item_62": {
                "path": "/lang/en/",
                "name": "navigation.php",
                "fullPath": "/lang/en//navigation.php",
                "template": "NoTemplate",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 62,
                "createdAt": "2025-01-24 12:26:28",
                "updatedAt": "2025-01-27 14:50:48",
                "content": "<?php\n\nreturn [\n    'home' => 'Home',\n    'apps' => 'Apps',\n    'services' => 'Services',\n    'sub_services' => 'Sub Services',\n    'user_cards' => 'User Cards',\n    'sub_service_templates' => 'Sub Service Templates',\n    'all_delivery_days' => 'All Delivery Days',\n    'content_categories' => 'Content Categories',\n    'influencers' => 'Influencers',\n    'iinfluencers' => 'Iinfluencers',\n];\n"
            },
            "item_63": {
                "path": "/lang/en/",
                "name": "crud.php",
                "fullPath": "/lang/en//crud.php",
                "template": "NoTemplate",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 63,
                "createdAt": "2025-01-24 12:26:28",
                "updatedAt": "2025-01-27 14:50:48",
                "content": "<?php\n\nreturn [\n    'services' => [\n        'itemTitle' => 'Service',\n        'collectionTitle' => 'Services',\n        'inputs' => [\n            'title' => [\n                'label' => 'Title',\n                'placeholder' => 'Title',\n            ],\n            'description' => [\n                'label' => 'Description',\n                'placeholder' => 'Description',\n            ],\n            'image' => [\n                'label' => 'Image',\n                'placeholder' => 'Image',\n            ],\n        ],\n    ],\n    'subServices' => [\n        'itemTitle' => 'Sub Service',\n        'collectionTitle' => 'Sub Services',\n        'inputs' => [\n            'service_id' => [\n                'label' => 'Service',\n                'placeholder' => 'Service id',\n            ],\n            'name' => [\n                'label' => 'Name',\n                'placeholder' => 'Name',\n            ],\n            'description' => [\n                'label' => 'Description',\n                'placeholder' => 'Description',\n            ],\n            'image' => [\n                'label' => 'Image',\n                'placeholder' => 'Image',\n            ],\n            'status' => [\n                'label' => 'Status',\n                'placeholder' => 'Status',\n            ],\n            'price' => [\n                'label' => 'Price',\n                'placeholder' => 'Price',\n            ],\n            'has_template' => [\n                'label' => 'Has template',\n                'placeholder' => 'Has template',\n            ],\n        ],\n    ],\n    'userCards' => [\n        'inputs' => [\n            'user_id' => [\n                'label' => 'User id',\n                'placeholder' => 'User id',\n            ],\n            'holder_name' => [\n                'label' => 'Holder name',\n                'placeholder' => 'Holder name',\n            ],\n            'card_number' => [\n                'label' => 'Card number',\n                'placeholder' => 'Card number',\n            ],\n            'valid_date' => [\n                'label' => 'Valid date',\n                'placeholder' => 'Valid date',\n            ],\n            'default' => [\n                'label' => 'Default',\n                'placeholder' => 'Default',\n            ],\n        ],\n    ],\n    'subServiceTemplates' => [\n        'inputs' => [\n            'sub_service_id' => [\n                'label' => 'Sub service',\n                'placeholder' => 'Sub service id',\n            ],\n            'name' => [\n                'label' => 'Name',\n                'placeholder' => 'Name',\n            ],\n            'description' => [\n                'label' => 'Description',\n                'placeholder' => 'Description',\n            ],\n            'image' => [\n                'label' => 'Image',\n                'placeholder' => 'Image',\n            ],\n            'url' => [\n                'label' => 'Url',\n                'placeholder' => 'Url',\n            ],\n            'status' => [\n                'label' => 'Status',\n                'placeholder' => 'Status',\n            ],\n        ],\n        'itemTitle' => 'Sub Service Template',\n        'collectionTitle' => 'Sub Service Templates',\n    ],\n    'allDeliveryDays' => [\n        'inputs' => [\n            'sub_service_id' => [\n                'label' => 'Sub service ',\n                'placeholder' => 'Sub service id',\n            ],\n            'name' => [\n                'label' => 'Name',\n                'placeholder' => 'Name',\n            ],\n            'description' => [\n                'label' => 'Description',\n                'placeholder' => 'Description',\n            ],\n            'price' => [\n                'label' => 'Price',\n                'placeholder' => 'Price',\n            ],\n            'status' => [\n                'label' => 'Status',\n                'placeholder' => 'Status',\n            ],\n        ],\n        'itemTitle' => 'Delivery Days',\n        'collectionTitle' => 'All Delivery Days',\n    ],\n    'contentCategories' => [\n        'itemTitle' => 'Content Category',\n        'collectionTitle' => 'Content Categories',\n        'inputs' => [\n            'name' => [\n                'label' => 'Name',\n                'placeholder' => 'Name',\n            ],\n            'decription' => [\n                'label' => 'Decription',\n                'placeholder' => 'Decription',\n            ],\n            'status' => [\n                'label' => 'Status',\n                'placeholder' => 'Status',\n            ],\n        ],\n    ],\n    'influencers' => [\n        'inputs' => [\n            'name' => [\n                'label' => 'Name',\n                'placeholder' => 'Name',\n            ],\n            'bio' => [\n                'label' => 'Bio',\n                'placeholder' => 'Bio',\n            ],\n            'address' => [\n                'label' => 'Address',\n                'placeholder' => 'Address',\n            ],\n            'lat' => [\n                'label' => 'Lat',\n                'placeholder' => 'Lat',\n            ],\n            'long' => [\n                'label' => 'Long',\n                'placeholder' => 'Long',\n            ],\n            'image' => [\n                'label' => 'Image',\n                'placeholder' => 'Image',\n            ],\n        ],\n        'itemTitle' => 'Influencer',\n        'collectionTitle' => 'Influencers',\n    ],\n    'iinfluencers' => [\n        'inputs' => [\n            'name' => [\n                'label' => 'Name',\n                'placeholder' => 'Name',\n            ],\n            'bio' => [\n                'label' => 'Bio',\n                'placeholder' => 'Bio',\n            ],\n            'address' => [\n                'label' => 'Address',\n                'placeholder' => 'Address',\n            ],\n            'image' => [\n                'label' => 'Image',\n                'placeholder' => 'Image',\n            ],\n            'lat' => [\n                'label' => 'Lat',\n                'placeholder' => 'Lat',\n            ],\n            'long' => [\n                'label' => 'Long',\n                'placeholder' => 'Long',\n            ],\n        ],\n        'itemTitle' => 'Iinfluencer',\n        'collectionTitle' => 'Iinfluencers',\n    ],\n];\n"
            },
            "item_64": {
                "path": "database/factories",
                "name": "SubServiceFactory.php",
                "fullPath": "database/factories/SubServiceFactory.php",
                "template": "database/Factory.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 64,
                "createdAt": "2025-01-24 13:02:11",
                "updatedAt": "2025-01-27 14:50:48",
                "content": "<?php\n\nnamespace Database\\Factories;\n\nuse App\\Models\\SubService;\nuse Illuminate\\Support\\Str;\nuse Illuminate\\Database\\Eloquent\\Factories\\Factory;\n\nclass SubServiceFactory extends Factory\n{\n    /**\n     * The name of the factory's corresponding model.\n     *\n     * @var string\n     */\n    protected $model = SubService::class;\n\n    /**\n     * Define the model's default state.\n     *\n     * @return array<string, mixed>\n     */\n    public function definition(): array\n    {\n        return [\n            'name' => fake()->name(),\n            'description' => fake()->sentence(15),\n            'image' => fake()->word(),\n            'status' => fake()->word(),\n            'price' => fake()->randomFloat(2, 0, 9999),\n            'has_template' => fake()->word(),\n            'service_id' => \\App\\Models\\Service::factory(),\n        ];\n    }\n}\n"
            },
            "item_65": {
                "path": "database/seeders",
                "name": "SubServiceSeeder.php",
                "fullPath": "database/seeders/SubServiceSeeder.php",
                "template": "database/Seeder.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 65,
                "createdAt": "2025-01-24 13:02:11",
                "updatedAt": "2025-01-27 14:50:48",
                "content": "<?php\n\nnamespace Database\\Seeders;\n\nuse App\\Models\\SubService;\nuse Illuminate\\Database\\Seeder;\n\nclass SubServiceSeeder extends Seeder\n{\n    /**\n     * Run the database seeds.\n     */\n    public function run(): void\n    {\n        SubService::factory()\n            ->count(5)\n            ->create();\n    }\n}\n"
            },
            "item_66": {
                "path": "app/Policies",
                "name": "SubServicePolicy.php",
                "fullPath": "app/Policies/SubServicePolicy.php",
                "template": "models/Policy.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 66,
                "createdAt": "2025-01-24 13:02:11",
                "updatedAt": "2025-01-27 14:50:48",
                "content": "<?php\n\nnamespace App\\Policies;\n\nuse App\\Models\\User;\nuse App\\Models\\SubService;\n\nclass SubServicePolicy\n{\n    /**\n     * Determine whether the user can view any models.\n     */\n    public function viewAny(User $user): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can view the model.\n     */\n    public function view(User $user, SubService $model): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can create models.\n     */\n    public function create(User $user): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can update the model.\n     */\n    public function update(User $user, SubService $model): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can delete the model.\n     */\n    public function delete(User $user, SubService $model): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can restore the model.\n     */\n    public function restore(User $user, SubService $model): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can permanently delete the model.\n     */\n    public function forceDelete(User $user, SubService $model): bool\n    {\n        return true;\n    }\n}\n"
            },
            "item_67": {
                "path": "resources/views/livewire/dashboard/sub-services",
                "name": "index.blade.php",
                "fullPath": "resources/views/livewire/dashboard/sub-services/index.blade.php",
                "template": "crud/views/livewire/IndexView.vemtl",
                "projectId": 1,
                "type": "blade",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 67,
                "createdAt": "2025-01-24 13:02:11",
                "updatedAt": "2025-01-27 14:50:48",
                "content": "<div class=\"max-w-7xl mx-auto py-10 sm:px-6 lg:px-8 space-y-4\">\n    <x-ui.breadcrumbs>\n        <x-ui.breadcrumbs.link href=\"/dashboard\"\n            >Dashboard</x-ui.breadcrumbs.link\n        >\n        <x-ui.breadcrumbs.separator />\n        <x-ui.breadcrumbs.link active\n            >{{ __('crud.subServices.collectionTitle') }}</x-ui.breadcrumbs.link\n        >\n    </x-ui.breadcrumbs>\n\n    <div class=\"flex justify-between align-top py-4\">\n        <x-ui.input\n            wire:model.live=\"search\"\n            type=\"text\"\n            placeholder=\"Search {{ __('crud.subServices.collectionTitle') }}...\"\n        />\n\n        @can('create', App\\Models\\SubService::class)\n        <a wire:navigate href=\"{{ route('dashboard.sub-services.create') }}\">\n            <x-ui.button>New</x-ui.button>\n        </a>\n        @endcan\n    </div>\n\n    {{-- Delete Modal --}}\n    <x-ui.modal.confirm wire:model=\"confirmingDeletion\">\n        <x-slot name=\"title\"> {{ __('Delete') }} </x-slot>\n\n        <x-slot name=\"content\"> {{ __('Are you sure?') }} </x-slot>\n\n        <x-slot name=\"footer\">\n            <x-ui.button\n                wire:click=\"$toggle('confirmingDeletion')\"\n                wire:loading.attr=\"disabled\"\n            >\n                {{ __('Cancel') }}\n            </x-ui.button>\n\n            <x-ui.button.danger\n                class=\"ml-3\"\n                wire:click=\"delete({{ $deletingSubService }})\"\n                wire:loading.attr=\"disabled\"\n            >\n                {{ __('Delete') }}\n            </x-ui.button.danger>\n        </x-slot>\n    </x-ui.modal.confirm>\n\n    {{-- Index Table --}}\n    <x-ui.container.table>\n        <x-ui.table>\n            <x-slot name=\"head\">\n                <x-ui.table.header for-crud wire:click=\"sortBy('service_id')\"\n                    >{{ __('crud.subServices.inputs.service_id.label')\n                    }}</x-ui.table.header\n                >\n                <x-ui.table.header for-crud wire:click=\"sortBy('name')\"\n                    >{{ __('crud.subServices.inputs.name.label')\n                    }}</x-ui.table.header\n                >\n                <x-ui.table.header for-crud wire:click=\"sortBy('description')\"\n                    >{{ __('crud.subServices.inputs.description.label')\n                    }}</x-ui.table.header\n                >\n                <x-ui.table.header for-crud wire:click=\"sortBy('status')\"\n                    >{{ __('crud.subServices.inputs.status.label')\n                    }}</x-ui.table.header\n                >\n                <x-ui.table.header for-crud wire:click=\"sortBy('price')\"\n                    >{{ __('crud.subServices.inputs.price.label')\n                    }}</x-ui.table.header\n                >\n                <x-ui.table.header for-crud wire:click=\"sortBy('image')\"\n                    >{{ __('crud.subServices.inputs.image.label')\n                    }}</x-ui.table.header\n                >\n                <x-ui.table.action-header>Actions</x-ui.table.action-header>\n            </x-slot>\n\n            <x-slot name=\"body\">\n                @forelse ($subServices as $subService)\n                <x-ui.table.row wire:loading.class.delay=\"opacity-75\">\n                    <x-ui.table.column for-crud\n                        >{{ $subService->service_id }}</x-ui.table.column\n                    >\n                    <x-ui.table.column for-crud\n                        >{{ $subService->name }}</x-ui.table.column\n                    >\n                    <x-ui.table.column for-crud\n                        >{{ $subService->description }}</x-ui.table.column\n                    >\n                    <x-ui.table.column for-crud\n                        >{{ $subService->status }}</x-ui.table.column\n                    >\n                    <x-ui.table.column for-crud\n                        >{{ $subService->price }}</x-ui.table.column\n                    >\n                    <x-ui.table.column for-crud>\n                        <x-ui.table.image\n                            url=\"{{ asset('storage/' . $subService->image) }}\"\n                            alt=\"{{ $subService->image }}\"\n                        />\n                    </x-ui.table.column>\n                    <x-ui.table.action-column>\n                        @can('update', $subService)\n                        <x-ui.action\n                            wire:navigate\n                            href=\"{{ route('dashboard.sub-services.edit', $subService) }}\"\n                            >Edit</x-ui.action\n                        >\n                        @endcan @can('delete', $subService)\n                        <x-ui.action.danger\n                            wire:click=\"confirmDeletion({{ $subService->id }})\"\n                            >Delete</x-ui.action.danger\n                        >\n                        @endcan\n                    </x-ui.table.action-column>\n                </x-ui.table.row>\n                @empty\n                <x-ui.table.row>\n                    <x-ui.table.column colspan=\"7\"\n                        >No {{ __('crud.subServices.collectionTitle') }} found.</x-ui.table.column\n                    >\n                </x-ui.table.row>\n                @endforelse\n            </x-slot>\n        </x-ui.table>\n\n        <div class=\"mt-2\">{{ $subServices->links() }}</div>\n    </x-ui.container.table>\n</div>\n"
            },
            "item_68": {
                "path": "app/Livewire/Dashboard",
                "name": "SubServiceIndex.php",
                "fullPath": "app/Livewire/Dashboard/SubServiceIndex.php",
                "template": "crud/views/livewire/IndexComponent.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 68,
                "createdAt": "2025-01-24 13:02:11",
                "updatedAt": "2025-01-27 14:50:48",
                "content": "<?php\n\nnamespace App\\Livewire\\Dashboard;\n\nuse Livewire\\Component;\nuse App\\Models\\SubService;\nuse Livewire\\WithPagination;\n\nclass SubServiceIndex extends Component\n{\n    use WithPagination;\n\n    public $search;\n    public $sortField = 'updated_at';\n    public $sortDirection = 'desc';\n\n    public $queryString = ['search', 'sortField', 'sortDirection'];\n\n    public $confirmingDeletion = false;\n    public $deletingSubService;\n\n    public function updatingSearch()\n    {\n        $this->resetPage();\n    }\n\n    public function confirmDeletion(string $id)\n    {\n        $this->deletingSubService = $id;\n\n        $this->confirmingDeletion = true;\n    }\n\n    public function delete(SubService $subService)\n    {\n        $subService->delete();\n\n        $this->confirmingDeletion = false;\n    }\n\n    public function sortBy($field)\n    {\n        if ($this->sortField === $field) {\n            $this->sortDirection =\n                $this->sortDirection === 'asc' ? 'desc' : 'asc';\n        } else {\n            $this->sortDirection = 'asc';\n        }\n\n        $this->sortField = $field;\n    }\n\n    public function getRowsProperty()\n    {\n        return $this->rowsQuery->paginate(5);\n    }\n\n    public function getRowsQueryProperty()\n    {\n        return SubService::query()\n            ->orderBy($this->sortField, $this->sortDirection)\n            ->where('name', 'like', \"%{$this->search}%\");\n    }\n\n    public function render()\n    {\n        return view('livewire.dashboard.sub-services.index', [\n            'subServices' => $this->rows,\n        ]);\n    }\n}\n"
            },
            "item_69": {
                "path": "resources/views/livewire/dashboard/sub-services",
                "name": "create.blade.php",
                "fullPath": "resources/views/livewire/dashboard/sub-services/create.blade.php",
                "template": "crud/views/livewire/CreateView.vemtl",
                "projectId": 1,
                "type": "blade",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 69,
                "createdAt": "2025-01-24 13:02:11",
                "updatedAt": "2025-01-27 14:50:48",
                "content": "<div class=\"max-w-7xl mx-auto py-10 sm:px-6 lg:px-8 space-y-4\">\n    <x-ui.breadcrumbs>\n        <x-ui.breadcrumbs.link href=\"/dashboard\"\n            >Dashboard</x-ui.breadcrumbs.link\n        >\n        <x-ui.breadcrumbs.separator />\n        <x-ui.breadcrumbs.link\n            href=\"{{ route('dashboard.sub-services.index') }}\"\n            >{{ __('crud.subServices.collectionTitle') }}</x-ui.breadcrumbs.link\n        >\n        <x-ui.breadcrumbs.separator />\n        <x-ui.breadcrumbs.link active\n            >Create {{ __('crud.subServices.itemTitle')\n            }}</x-ui.breadcrumbs.link\n        >\n    </x-ui.breadcrumbs>\n\n    <div class=\"w-full text-gray-500 text-lg font-semibold py-4 uppercase\">\n        <h1>Create {{ __('crud.subServices.itemTitle') }}</h1>\n    </div>\n\n    <div class=\"overflow-hidden border rounded-lg bg-white\">\n        <form class=\"w-full mb-0\" wire:submit.prevent=\"save\">\n            <div class=\"p-6 space-y-3\">\n                <div class=\"w-full\">\n                    <x-ui.label for=\"service_id\"\n                        >{{ __('crud.subServices.inputs.service_id.label')\n                        }}</x-ui.label\n                    >\n                    <x-ui.input.select\n                        wire:model=\"form.service_id\"\n                        name=\"service_id\"\n                        id=\"service_id\"\n                        class=\"w-full\"\n                    >\n                        <option value=\"\">Select data</option>\n                        @foreach ($services as $value => $label)\n                        <option value=\"{{ $value }}\">{{ $label }}</option>\n                        @endforeach\n                    </x-ui.input.select>\n                    <x-ui.input.error for=\"form.service_id\" />\n                </div>\n\n                <div class=\"w-full\">\n                    <x-ui.label for=\"name\"\n                        >{{ __('crud.subServices.inputs.name.label')\n                        }}</x-ui.label\n                    >\n                    <x-ui.input.text\n                        class=\"w-full\"\n                        wire:model=\"form.name\"\n                        name=\"name\"\n                        id=\"name\"\n                        placeholder=\"{{ __('crud.subServices.inputs.name.placeholder') }}\"\n                    />\n                    <x-ui.input.error for=\"form.name\" />\n                </div>\n\n                <div class=\"w-full\">\n                    <x-ui.label for=\"description\"\n                        >{{ __('crud.subServices.inputs.description.label')\n                        }}</x-ui.label\n                    >\n                    <x-ui.input.text\n                        class=\"w-full\"\n                        wire:model=\"form.description\"\n                        name=\"description\"\n                        id=\"description\"\n                        placeholder=\"{{ __('crud.subServices.inputs.description.placeholder') }}\"\n                    />\n                    <x-ui.input.error for=\"form.description\" />\n                </div>\n\n                <div class=\"w-full\">\n                    <x-ui.label for=\"image\"\n                        >{{ __('crud.subServices.inputs.image.label')\n                        }}</x-ui.label\n                    >\n                    <x-ui.input.image\n                        :src=\"$form->newImage ? Storage::url($form->newImage) : Storage::url($form->image)\"\n                        wire:model=\"form.newImage\"\n                        x-on:removed=\"$form->deleteImage()\"\n                        class=\"w-full\"\n                        id=\"image\"\n                        name=\"image\"\n                    />\n                    <x-ui.input.error for=\"form.newImage\" />\n                </div>\n\n                <div class=\"w-full\">\n                    <x-ui.label for=\"status\"\n                        >{{ __('crud.subServices.inputs.status.label')\n                        }}</x-ui.label\n                    >\n                    <x-ui.input.select\n                        wire:model=\"form.status\"\n                        class=\"w-full\"\n                        id=\"status\"\n                        name=\"status\"\n                    >\n                        <option value=\"\">Select</option>\n                        <option value=\"Active\">Active</option>\n                        <option value=\"Inactive\">Inactive</option>\n                    </x-ui.input.select>\n                    <x-ui.input.error for=\"status\" />\n                </div>\n\n                <div class=\"w-full\">\n                    <x-ui.label for=\"price\"\n                        >{{ __('crud.subServices.inputs.price.label')\n                        }}</x-ui.label\n                    >\n                    <x-ui.input.number\n                        class=\"w-full\"\n                        wire:model=\"form.price\"\n                        name=\"price\"\n                        id=\"price\"\n                        placeholder=\"{{ __('crud.subServices.inputs.price.placeholder') }}\"\n                        step=\"1\"\n                    />\n                    <x-ui.input.error for=\"form.price\" />\n                </div>\n            </div>\n\n            <div class=\"flex justify-between mt-4 border-t border-gray-50 p-4\">\n                <div>\n                    <!-- Other buttons here -->\n                </div>\n                <div>\n                    <x-ui.button type=\"submit\">Save</x-ui.button>\n                </div>\n            </div>\n        </form>\n    </div>\n</div>\n"
            },
            "item_70": {
                "path": "app/Livewire/Dashboard",
                "name": "SubServiceCreate.php",
                "fullPath": "app/Livewire/Dashboard/SubServiceCreate.php",
                "template": "crud/views/livewire/CreateComponent.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 70,
                "createdAt": "2025-01-24 13:02:11",
                "updatedAt": "2025-01-27 14:50:48",
                "content": "<?php\n\nnamespace App\\Livewire\\Dashboard;\n\nuse Livewire\\Component;\nuse App\\Models\\Service;\nuse Livewire\\WithFileUploads;\nuse Illuminate\\Support\\Collection;\nuse App\\Livewire\\Dashboard\\SubServices\\Forms\\CreateForm;\n\nclass SubServiceCreate extends Component\n{\n    use WithFileUploads;\n\n    public CreateForm $form;\n    public Collection $services;\n\n    public function mount()\n    {\n        $this->services = Service::pluck('title', 'id');\n    }\n\n    public function save()\n    {\n        $this->authorize('create', SubService::class);\n\n        $this->validate();\n\n        $subService = $this->form->save();\n\n        return redirect()->route('dashboard.sub-services.edit', $subService);\n    }\n\n    public function render()\n    {\n        return view('livewire.dashboard.sub-services.create', []);\n    }\n}\n"
            },
            "item_71": {
                "path": "resources/views/livewire/dashboard/sub-services",
                "name": "edit.blade.php",
                "fullPath": "resources/views/livewire/dashboard/sub-services/edit.blade.php",
                "template": "crud/views/livewire/EditView.vemtl",
                "projectId": 1,
                "type": "blade",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 71,
                "createdAt": "2025-01-24 13:02:11",
                "updatedAt": "2025-01-27 14:50:48",
                "content": "<div class=\"max-w-7xl mx-auto py-10 sm:px-6 lg:px-8 space-y-4\">\n    <x-ui.breadcrumbs>\n        <x-ui.breadcrumbs.link href=\"/dashboard\"\n            >Dashboard</x-ui.breadcrumbs.link\n        >\n        <x-ui.breadcrumbs.separator />\n        <x-ui.breadcrumbs.link\n            href=\"{{ route('dashboard.sub-services.index') }}\"\n            >{{ __('crud.subServices.collectionTitle') }}</x-ui.breadcrumbs.link\n        >\n        <x-ui.breadcrumbs.separator />\n        <x-ui.breadcrumbs.link active\n            >Edit {{ __('crud.subServices.itemTitle') }}</x-ui.breadcrumbs.link\n        >\n    </x-ui.breadcrumbs>\n\n    <x-ui.toast on=\"saved\"> SubService saved successfully. </x-ui.toast>\n\n    <div class=\"w-full text-gray-500 text-lg font-semibold py-4 uppercase\">\n        <h1>Edit {{ __('crud.subServices.itemTitle') }}</h1>\n    </div>\n\n    <div class=\"overflow-hidden border rounded-lg bg-white\">\n        <form class=\"w-full mb-0\" wire:submit.prevent=\"save\">\n            <div class=\"p-6 space-y-3\">\n                <div class=\"w-full\">\n                    <x-ui.label for=\"service_id\"\n                        >{{ __('crud.subServices.inputs.service_id.label')\n                        }}</x-ui.label\n                    >\n                    <x-ui.input.select\n                        wire:model=\"form.service_id\"\n                        name=\"service_id\"\n                        id=\"service_id\"\n                        class=\"w-full\"\n                    >\n                        <option value=\"\">Select data</option>\n                        @foreach ($services as $value => $label)\n                        <option value=\"{{ $value }}\">{{ $label }}</option>\n                        @endforeach\n                    </x-ui.input.select>\n                    <x-ui.input.error for=\"form.service_id\" />\n                </div>\n\n                <div class=\"w-full\">\n                    <x-ui.label for=\"name\"\n                        >{{ __('crud.subServices.inputs.name.label')\n                        }}</x-ui.label\n                    >\n                    <x-ui.input.text\n                        class=\"w-full\"\n                        wire:model=\"form.name\"\n                        name=\"name\"\n                        id=\"name\"\n                        placeholder=\"{{ __('crud.subServices.inputs.name.placeholder') }}\"\n                    />\n                    <x-ui.input.error for=\"form.name\" />\n                </div>\n\n                <div class=\"w-full\">\n                    <x-ui.label for=\"description\"\n                        >{{ __('crud.subServices.inputs.description.label')\n                        }}</x-ui.label\n                    >\n                    <x-ui.input.text\n                        class=\"w-full\"\n                        wire:model=\"form.description\"\n                        name=\"description\"\n                        id=\"description\"\n                        placeholder=\"{{ __('crud.subServices.inputs.description.placeholder') }}\"\n                    />\n                    <x-ui.input.error for=\"form.description\" />\n                </div>\n\n                <div class=\"w-full\">\n                    <x-ui.label for=\"image\"\n                        >{{ __('crud.subServices.inputs.image.label')\n                        }}</x-ui.label\n                    >\n                    <x-ui.input.image\n                        :src=\"$form->newImage ? Storage::url($form->newImage) : Storage::url($form->image)\"\n                        wire:model=\"form.newImage\"\n                        x-on:removed=\"$form->deleteImage()\"\n                        class=\"w-full\"\n                        id=\"image\"\n                        name=\"image\"\n                    />\n                    <x-ui.input.error for=\"form.newImage\" />\n                </div>\n\n                <div class=\"w-full\">\n                    <x-ui.label for=\"status\"\n                        >{{ __('crud.subServices.inputs.status.label')\n                        }}</x-ui.label\n                    >\n                    <x-ui.input.select\n                        wire:model=\"form.status\"\n                        class=\"w-full\"\n                        id=\"status\"\n                        name=\"status\"\n                    >\n                        <option value=\"\">Select</option>\n                        <option value=\"Active\">Active</option>\n                        <option value=\"Inactive\">Inactive</option>\n                    </x-ui.input.select>\n                    <x-ui.input.error for=\"status\" />\n                </div>\n\n                <div class=\"w-full\">\n                    <x-ui.label for=\"price\"\n                        >{{ __('crud.subServices.inputs.price.label')\n                        }}</x-ui.label\n                    >\n                    <x-ui.input.number\n                        class=\"w-full\"\n                        wire:model=\"form.price\"\n                        name=\"price\"\n                        id=\"price\"\n                        placeholder=\"{{ __('crud.subServices.inputs.price.placeholder') }}\"\n                        step=\"1\"\n                    />\n                    <x-ui.input.error for=\"form.price\" />\n                </div>\n            </div>\n\n            <div class=\"flex justify-between mt-4 border-t border-gray-50 p-4\">\n                <div>\n                    <!-- Other buttons here -->\n                </div>\n                <div>\n                    <x-ui.button type=\"submit\">Save</x-ui.button>\n                </div>\n            </div>\n        </form>\n    </div>\n</div>\n"
            },
            "item_72": {
                "path": "app/Livewire/Dashboard",
                "name": "SubServiceEdit.php",
                "fullPath": "app/Livewire/Dashboard/SubServiceEdit.php",
                "template": "crud/views/livewire/EditComponent.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "ignored",
                "ignoreConflicts": false,
                "id": 72,
                "createdAt": "2025-01-24 13:02:11",
                "updatedAt": "2025-01-27 14:45:14",
                "content": "<?php\n\nnamespace App\\Livewire\\Dashboard;\n\nuse Livewire\\Component;\nuse App\\Models\\Service;\nuse App\\Models\\SubService;\nuse Illuminate\\Support\\Collection;\nuse App\\Livewire\\Dashboard\\SubServices\\Forms\\UpdateForm;\n\nclass SubServiceEdit extends Component\n{\n    public ?SubService $subService = null;\n\n    public UpdateForm $form;\n    public Collection $services;\n\n    public function mount(SubService $subService)\n    {\n        $this->authorize('view-any', SubService::class);\n\n        $this->subService = $subService;\n\n        $this->form->setSubService($subService);\n        $this->services = Service::pluck('title', 'id');\n    }\n\n    public function save()\n    {\n        $this->authorize('update', $this->subService);\n\n        $this->validate();\n\n        $this->form->save();\n\n        $this->dispatch('saved');\n    }\n\n    public function render()\n    {\n        return view('livewire.dashboard.sub-services.edit', []);\n    }\n}\n",
                "conflictFileName": "wAz0453UiCT0RlPzhOhsM3PmEiyMUjCW.json"
            },
            "item_73": {
                "path": "app/Livewire/Dashboard/SubServices/Forms",
                "name": "CreateForm.php",
                "fullPath": "app/Livewire/Dashboard/SubServices/Forms/CreateForm.php",
                "template": "crud/views/livewire/CreateFormComponent.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 73,
                "createdAt": "2025-01-24 13:02:11",
                "updatedAt": "2025-01-27 14:50:48",
                "content": "<?php\n\nnamespace App\\Livewire\\Dashboard\\SubServices\\Forms;\n\nuse Livewire\\Form;\nuse App\\Models\\SubService;\nuse Livewire\\Attributes\\Rule;\n\nclass CreateForm extends Form\n{\n    #[Rule('required')]\n    public $service_id = '';\n\n    #[Rule('required|string')]\n    public $name = '';\n\n    #[Rule('nullable|string')]\n    public $description = '';\n\n    #[Rule('nullable|image|max:1024')]\n    public $image = '';\n\n    public $newImage = null;\n\n    #[Rule('nullable')]\n    public $status = '';\n\n    #[Rule('required')]\n    public $price = '';\n\n    public function save()\n    {\n        $this->validate();\n\n        $this->processImage();\n\n        $subService = SubService::create($this->except(['newImage']));\n\n        $this->reset();\n\n        return $subService;\n    }\n\n    public function processImage()\n    {\n        if (empty($this->newImage)) {\n            return;\n        }\n\n        $this->image = $this->newImage->store('sub_services', 'public');\n    }\n\n    public function deleteImage()\n    {\n        $this->newImage = null;\n    }\n}\n"
            },
            "item_74": {
                "path": "app/Livewire/Dashboard/SubServices/Forms",
                "name": "UpdateForm.php",
                "fullPath": "app/Livewire/Dashboard/SubServices/Forms/UpdateForm.php",
                "template": "crud/views/livewire/UpdateFormComponent.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 74,
                "createdAt": "2025-01-24 13:02:11",
                "updatedAt": "2025-01-27 14:50:48",
                "content": "<?php\n\nnamespace App\\Livewire\\Dashboard\\SubServices\\Forms;\n\nuse Livewire\\Form;\nuse App\\Models\\SubService;\nuse Illuminate\\Validation\\Rule;\n\nclass UpdateForm extends Form\n{\n    public ?SubService $subService;\n\n    public $service_id = '';\n\n    public $name = '';\n\n    public $description = '';\n\n    public $image = '';\n\n    public $newImage = null;\n\n    public $status = '';\n\n    public $price = '';\n\n    public function rules(): array\n    {\n        return [\n            'service_id' => ['required'],\n            'name' => ['required', 'string'],\n            'description' => ['nullable', 'string'],\n            'image' => ['nullable', 'image', 'max:1024'],\n            'status' => ['nullable'],\n            'price' => ['required'],\n        ];\n    }\n\n    public function setSubService(SubService $subService)\n    {\n        $this->subService = $subService;\n\n        $this->service_id = $subService->service_id;\n        $this->name = $subService->name;\n        $this->description = $subService->description;\n        $this->image = $subService->image;\n        $this->status = $subService->status;\n        $this->price = $subService->price;\n    }\n\n    public function save()\n    {\n        $this->validate();\n\n        $this->processImage();\n\n        $this->subService->update(\n            $this->except(['subService', 'service_id', 'newImage'])\n        );\n    }\n\n    public function processImage()\n    {\n        if (empty($this->newImage)) {\n            return;\n        }\n\n        $this->subService->image = $this->newImage->store(\n            'sub_services',\n            'public'\n        );\n    }\n\n    public function deleteImage()\n    {\n        $this->newImage = null;\n    }\n}\n"
            },
            "item_75": {
                "path": "database/factories",
                "name": "UserCardFactory.php",
                "fullPath": "database/factories/UserCardFactory.php",
                "template": "database/Factory.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 75,
                "createdAt": "2025-01-24 14:54:26",
                "updatedAt": "2025-01-27 14:50:48",
                "content": "<?php\n\nnamespace Database\\Factories;\n\nuse App\\Models\\UserCard;\nuse Illuminate\\Support\\Str;\nuse Illuminate\\Database\\Eloquent\\Factories\\Factory;\n\nclass UserCardFactory extends Factory\n{\n    /**\n     * The name of the factory's corresponding model.\n     *\n     * @var string\n     */\n    protected $model = UserCard::class;\n\n    /**\n     * Define the model's default state.\n     *\n     * @return array<string, mixed>\n     */\n    public function definition(): array\n    {\n        return [\n            'holder_name' => fake()->word(),\n            'card_number' => fake()->word(),\n            'valid_date' => fake()->word(),\n            'default' => fake()->word(),\n            'user_id' => \\App\\Models\\User::factory(),\n        ];\n    }\n}\n"
            },
            "item_76": {
                "path": "database/seeders",
                "name": "UserCardSeeder.php",
                "fullPath": "database/seeders/UserCardSeeder.php",
                "template": "database/Seeder.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 76,
                "createdAt": "2025-01-24 14:54:26",
                "updatedAt": "2025-01-27 14:50:48",
                "content": "<?php\n\nnamespace Database\\Seeders;\n\nuse App\\Models\\UserCard;\nuse Illuminate\\Database\\Seeder;\n\nclass UserCardSeeder extends Seeder\n{\n    /**\n     * Run the database seeds.\n     */\n    public function run(): void\n    {\n        UserCard::factory()\n            ->count(5)\n            ->create();\n    }\n}\n"
            },
            "item_77": {
                "path": "app/Policies",
                "name": "UserCardPolicy.php",
                "fullPath": "app/Policies/UserCardPolicy.php",
                "template": "models/Policy.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 77,
                "createdAt": "2025-01-24 14:54:26",
                "updatedAt": "2025-01-27 14:50:48",
                "content": "<?php\n\nnamespace App\\Policies;\n\nuse App\\Models\\User;\nuse App\\Models\\UserCard;\n\nclass UserCardPolicy\n{\n    /**\n     * Determine whether the user can view any models.\n     */\n    public function viewAny(User $user): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can view the model.\n     */\n    public function view(User $user, UserCard $model): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can create models.\n     */\n    public function create(User $user): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can update the model.\n     */\n    public function update(User $user, UserCard $model): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can delete the model.\n     */\n    public function delete(User $user, UserCard $model): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can restore the model.\n     */\n    public function restore(User $user, UserCard $model): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can permanently delete the model.\n     */\n    public function forceDelete(User $user, UserCard $model): bool\n    {\n        return true;\n    }\n}\n"
            },
            "item_78": {
                "path": "database/factories",
                "name": "SubServiceTemplateFactory.php",
                "fullPath": "database/factories/SubServiceTemplateFactory.php",
                "template": "database/Factory.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 78,
                "createdAt": "2025-01-24 15:33:10",
                "updatedAt": "2025-01-27 14:50:48",
                "content": "<?php\n\nnamespace Database\\Factories;\n\nuse Illuminate\\Support\\Str;\nuse App\\Models\\SubServiceTemplate;\nuse Illuminate\\Database\\Eloquent\\Factories\\Factory;\n\nclass SubServiceTemplateFactory extends Factory\n{\n    /**\n     * The name of the factory's corresponding model.\n     *\n     * @var string\n     */\n    protected $model = SubServiceTemplate::class;\n\n    /**\n     * Define the model's default state.\n     *\n     * @return array<string, mixed>\n     */\n    public function definition(): array\n    {\n        return [\n            'name' => fake()->name(),\n            'description' => fake()->sentence(15),\n            'image' => fake()->word(),\n            'url' => fake()->url(),\n            'sub_service_id' => \\App\\Models\\SubService::factory(),\n        ];\n    }\n}\n"
            },
            "item_79": {
                "path": "database/seeders",
                "name": "SubServiceTemplateSeeder.php",
                "fullPath": "database/seeders/SubServiceTemplateSeeder.php",
                "template": "database/Seeder.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 79,
                "createdAt": "2025-01-24 15:33:10",
                "updatedAt": "2025-01-27 14:50:48",
                "content": "<?php\n\nnamespace Database\\Seeders;\n\nuse Illuminate\\Database\\Seeder;\nuse App\\Models\\SubServiceTemplate;\n\nclass SubServiceTemplateSeeder extends Seeder\n{\n    /**\n     * Run the database seeds.\n     */\n    public function run(): void\n    {\n        SubServiceTemplate::factory()\n            ->count(5)\n            ->create();\n    }\n}\n"
            },
            "item_80": {
                "path": "app/Policies",
                "name": "SubServiceTemplatePolicy.php",
                "fullPath": "app/Policies/SubServiceTemplatePolicy.php",
                "template": "models/Policy.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 80,
                "createdAt": "2025-01-24 15:33:10",
                "updatedAt": "2025-01-27 14:50:48",
                "content": "<?php\n\nnamespace App\\Policies;\n\nuse App\\Models\\User;\nuse App\\Models\\SubServiceTemplate;\n\nclass SubServiceTemplatePolicy\n{\n    /**\n     * Determine whether the user can view any models.\n     */\n    public function viewAny(User $user): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can view the model.\n     */\n    public function view(User $user, SubServiceTemplate $model): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can create models.\n     */\n    public function create(User $user): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can update the model.\n     */\n    public function update(User $user, SubServiceTemplate $model): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can delete the model.\n     */\n    public function delete(User $user, SubServiceTemplate $model): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can restore the model.\n     */\n    public function restore(User $user, SubServiceTemplate $model): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can permanently delete the model.\n     */\n    public function forceDelete(User $user, SubServiceTemplate $model): bool\n    {\n        return true;\n    }\n}\n"
            },
            "item_81": {
                "path": "database/factories",
                "name": "DeliveryDaysFactory.php",
                "fullPath": "database/factories/DeliveryDaysFactory.php",
                "template": "database/Factory.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 81,
                "createdAt": "2025-01-24 15:33:10",
                "updatedAt": "2025-01-27 14:50:48",
                "content": "<?php\n\nnamespace Database\\Factories;\n\nuse Illuminate\\Support\\Str;\nuse App\\Models\\DeliveryDays;\nuse Illuminate\\Database\\Eloquent\\Factories\\Factory;\n\nclass DeliveryDaysFactory extends Factory\n{\n    /**\n     * The name of the factory's corresponding model.\n     *\n     * @var string\n     */\n    protected $model = DeliveryDays::class;\n\n    /**\n     * Define the model's default state.\n     *\n     * @return array<string, mixed>\n     */\n    public function definition(): array\n    {\n        return [\n            'name' => fake()->name(),\n            'description' => fake()->sentence(15),\n            'price' => fake()->randomFloat(2, 0, 9999),\n            'status' => fake()->word(),\n            'sub_service_id' => \\App\\Models\\SubService::factory(),\n        ];\n    }\n}\n"
            },
            "item_82": {
                "path": "database/seeders",
                "name": "DeliveryDaysSeeder.php",
                "fullPath": "database/seeders/DeliveryDaysSeeder.php",
                "template": "database/Seeder.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 82,
                "createdAt": "2025-01-24 15:33:10",
                "updatedAt": "2025-01-27 14:50:48",
                "content": "<?php\n\nnamespace Database\\Seeders;\n\nuse App\\Models\\DeliveryDays;\nuse Illuminate\\Database\\Seeder;\n\nclass DeliveryDaysSeeder extends Seeder\n{\n    /**\n     * Run the database seeds.\n     */\n    public function run(): void\n    {\n        DeliveryDays::factory()\n            ->count(5)\n            ->create();\n    }\n}\n"
            },
            "item_83": {
                "path": "app/Policies",
                "name": "DeliveryDaysPolicy.php",
                "fullPath": "app/Policies/DeliveryDaysPolicy.php",
                "template": "models/Policy.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 83,
                "createdAt": "2025-01-24 15:33:10",
                "updatedAt": "2025-01-27 14:50:48",
                "content": "<?php\n\nnamespace App\\Policies;\n\nuse App\\Models\\User;\nuse App\\Models\\DeliveryDays;\n\nclass DeliveryDaysPolicy\n{\n    /**\n     * Determine whether the user can view any models.\n     */\n    public function viewAny(User $user): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can view the model.\n     */\n    public function view(User $user, DeliveryDays $model): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can create models.\n     */\n    public function create(User $user): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can update the model.\n     */\n    public function update(User $user, DeliveryDays $model): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can delete the model.\n     */\n    public function delete(User $user, DeliveryDays $model): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can restore the model.\n     */\n    public function restore(User $user, DeliveryDays $model): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can permanently delete the model.\n     */\n    public function forceDelete(User $user, DeliveryDays $model): bool\n    {\n        return true;\n    }\n}\n"
            },
            "item_92": {
                "path": "resources/views/livewire/dashboard/sub-service-templates",
                "name": "index.blade.php",
                "fullPath": "resources/views/livewire/dashboard/sub-service-templates/index.blade.php",
                "template": "crud/views/livewire/IndexView.vemtl",
                "projectId": 1,
                "type": "blade",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 92,
                "createdAt": "2025-01-24 15:41:12",
                "updatedAt": "2025-01-27 14:50:48",
                "content": "<div class=\"max-w-7xl mx-auto py-10 sm:px-6 lg:px-8 space-y-4\">\n    <x-ui.breadcrumbs>\n        <x-ui.breadcrumbs.link href=\"/dashboard\"\n            >Dashboard</x-ui.breadcrumbs.link\n        >\n        <x-ui.breadcrumbs.separator />\n        <x-ui.breadcrumbs.link active\n            >{{ __('crud.subServiceTemplates.collectionTitle')\n            }}</x-ui.breadcrumbs.link\n        >\n    </x-ui.breadcrumbs>\n\n    <div class=\"flex justify-between align-top py-4\">\n        <x-ui.input\n            wire:model.live=\"search\"\n            type=\"text\"\n            placeholder=\"Search {{ __('crud.subServiceTemplates.collectionTitle') }}...\"\n        />\n\n        @can('create', App\\Models\\SubServiceTemplate::class)\n        <a\n            wire:navigate\n            href=\"{{ route('dashboard.sub-service-templates.create') }}\"\n        >\n            <x-ui.button>New</x-ui.button>\n        </a>\n        @endcan\n    </div>\n\n    {{-- Delete Modal --}}\n    <x-ui.modal.confirm wire:model=\"confirmingDeletion\">\n        <x-slot name=\"title\"> {{ __('Delete') }} </x-slot>\n\n        <x-slot name=\"content\"> {{ __('Are you sure?') }} </x-slot>\n\n        <x-slot name=\"footer\">\n            <x-ui.button\n                wire:click=\"$toggle('confirmingDeletion')\"\n                wire:loading.attr=\"disabled\"\n            >\n                {{ __('Cancel') }}\n            </x-ui.button>\n\n            <x-ui.button.danger\n                class=\"ml-3\"\n                wire:click=\"delete({{ $deletingSubServiceTemplate }})\"\n                wire:loading.attr=\"disabled\"\n            >\n                {{ __('Delete') }}\n            </x-ui.button.danger>\n        </x-slot>\n    </x-ui.modal.confirm>\n\n    {{-- Index Table --}}\n    <x-ui.container.table>\n        <x-ui.table>\n            <x-slot name=\"head\">\n                <x-ui.table.header\n                    for-crud\n                    wire:click=\"sortBy('sub_service_id')\"\n                    >{{\n                    __('crud.subServiceTemplates.inputs.sub_service_id.label')\n                    }}</x-ui.table.header\n                >\n                <x-ui.table.header for-crud wire:click=\"sortBy('name')\"\n                    >{{ __('crud.subServiceTemplates.inputs.name.label')\n                    }}</x-ui.table.header\n                >\n                <x-ui.table.header for-crud wire:click=\"sortBy('description')\"\n                    >{{ __('crud.subServiceTemplates.inputs.description.label')\n                    }}</x-ui.table.header\n                >\n                <x-ui.table.header for-crud wire:click=\"sortBy('url')\"\n                    >{{ __('crud.subServiceTemplates.inputs.url.label')\n                    }}</x-ui.table.header\n                >\n                <x-ui.table.header for-crud wire:click=\"sortBy('status')\"\n                    >{{ __('crud.subServiceTemplates.inputs.status.label')\n                    }}</x-ui.table.header\n                >\n                <x-ui.table.header for-crud wire:click=\"sortBy('image')\"\n                    >{{ __('crud.subServiceTemplates.inputs.image.label')\n                    }}</x-ui.table.header\n                >\n                <x-ui.table.action-header>Actions</x-ui.table.action-header>\n            </x-slot>\n\n            <x-slot name=\"body\">\n                @forelse ($subServiceTemplates as $subServiceTemplate)\n                <x-ui.table.row wire:loading.class.delay=\"opacity-75\">\n                    <x-ui.table.column for-crud\n                        >{{ $subServiceTemplate->sub_service_id\n                        }}</x-ui.table.column\n                    >\n                    <x-ui.table.column for-crud\n                        >{{ $subServiceTemplate->name }}</x-ui.table.column\n                    >\n                    <x-ui.table.column for-crud\n                        >{{ $subServiceTemplate->description\n                        }}</x-ui.table.column\n                    >\n                    <x-ui.table.column for-crud\n                        >{{ $subServiceTemplate->url }}</x-ui.table.column\n                    >\n                    <x-ui.table.column for-crud\n                        >{{ $subServiceTemplate->status }}</x-ui.table.column\n                    >\n                    <x-ui.table.column for-crud>\n                        <x-ui.table.image\n                            url=\"{{ asset('storage/' . $subServiceTemplate->image) }}\"\n                            alt=\"{{ $subServiceTemplate->image }}\"\n                        />\n                    </x-ui.table.column>\n                    <x-ui.table.action-column>\n                        @can('update', $subServiceTemplate)\n                        <x-ui.action\n                            wire:navigate\n                            href=\"{{ route('dashboard.sub-service-templates.edit', $subServiceTemplate) }}\"\n                            >Edit</x-ui.action\n                        >\n                        @endcan @can('delete', $subServiceTemplate)\n                        <x-ui.action.danger\n                            wire:click=\"confirmDeletion({{ $subServiceTemplate->id }})\"\n                            >Delete</x-ui.action.danger\n                        >\n                        @endcan\n                    </x-ui.table.action-column>\n                </x-ui.table.row>\n                @empty\n                <x-ui.table.row>\n                    <x-ui.table.column colspan=\"7\"\n                        >No {{ __('crud.subServiceTemplates.collectionTitle') }} found.</x-ui.table.column\n                    >\n                </x-ui.table.row>\n                @endforelse\n            </x-slot>\n        </x-ui.table>\n\n        <div class=\"mt-2\">{{ $subServiceTemplates->links() }}</div>\n    </x-ui.container.table>\n</div>\n"
            },
            "item_93": {
                "path": "app/Livewire/Dashboard",
                "name": "SubServiceTemplateIndex.php",
                "fullPath": "app/Livewire/Dashboard/SubServiceTemplateIndex.php",
                "template": "crud/views/livewire/IndexComponent.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 93,
                "createdAt": "2025-01-24 15:41:12",
                "updatedAt": "2025-01-27 14:50:48",
                "content": "<?php\n\nnamespace App\\Livewire\\Dashboard;\n\nuse Livewire\\Component;\nuse Livewire\\WithPagination;\nuse App\\Models\\SubServiceTemplate;\n\nclass SubServiceTemplateIndex extends Component\n{\n    use WithPagination;\n\n    public $search;\n    public $sortField = 'updated_at';\n    public $sortDirection = 'desc';\n\n    public $queryString = ['search', 'sortField', 'sortDirection'];\n\n    public $confirmingDeletion = false;\n    public $deletingSubServiceTemplate;\n\n    public function updatingSearch()\n    {\n        $this->resetPage();\n    }\n\n    public function confirmDeletion(string $id)\n    {\n        $this->deletingSubServiceTemplate = $id;\n\n        $this->confirmingDeletion = true;\n    }\n\n    public function delete(SubServiceTemplate $subServiceTemplate)\n    {\n        $subServiceTemplate->delete();\n\n        $this->confirmingDeletion = false;\n    }\n\n    public function sortBy($field)\n    {\n        if ($this->sortField === $field) {\n            $this->sortDirection =\n                $this->sortDirection === 'asc' ? 'desc' : 'asc';\n        } else {\n            $this->sortDirection = 'asc';\n        }\n\n        $this->sortField = $field;\n    }\n\n    public function getRowsProperty()\n    {\n        return $this->rowsQuery->paginate(5);\n    }\n\n    public function getRowsQueryProperty()\n    {\n        return SubServiceTemplate::query()\n            ->orderBy($this->sortField, $this->sortDirection)\n            ->where('name', 'like', \"%{$this->search}%\");\n    }\n\n    public function render()\n    {\n        return view('livewire.dashboard.sub-service-templates.index', [\n            'subServiceTemplates' => $this->rows,\n        ]);\n    }\n}\n"
            },
            "item_94": {
                "path": "resources/views/livewire/dashboard/sub-service-templates",
                "name": "create.blade.php",
                "fullPath": "resources/views/livewire/dashboard/sub-service-templates/create.blade.php",
                "template": "crud/views/livewire/CreateView.vemtl",
                "projectId": 1,
                "type": "blade",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 94,
                "createdAt": "2025-01-24 15:41:12",
                "updatedAt": "2025-01-27 14:50:48",
                "content": "<div class=\"max-w-7xl mx-auto py-10 sm:px-6 lg:px-8 space-y-4\">\n    <x-ui.breadcrumbs>\n        <x-ui.breadcrumbs.link href=\"/dashboard\"\n            >Dashboard</x-ui.breadcrumbs.link\n        >\n        <x-ui.breadcrumbs.separator />\n        <x-ui.breadcrumbs.link\n            href=\"{{ route('dashboard.sub-service-templates.index') }}\"\n            >{{ __('crud.subServiceTemplates.collectionTitle')\n            }}</x-ui.breadcrumbs.link\n        >\n        <x-ui.breadcrumbs.separator />\n        <x-ui.breadcrumbs.link active\n            >Create {{ __('crud.subServiceTemplates.itemTitle')\n            }}</x-ui.breadcrumbs.link\n        >\n    </x-ui.breadcrumbs>\n\n    <div class=\"w-full text-gray-500 text-lg font-semibold py-4 uppercase\">\n        <h1>Create {{ __('crud.subServiceTemplates.itemTitle') }}</h1>\n    </div>\n\n    <div class=\"overflow-hidden border rounded-lg bg-white\">\n        <form class=\"w-full mb-0\" wire:submit.prevent=\"save\">\n            <div class=\"p-6 space-y-3\">\n                <div class=\"w-full\">\n                    <x-ui.label for=\"sub_service_id\"\n                        >{{\n                        __('crud.subServiceTemplates.inputs.sub_service_id.label')\n                        }}</x-ui.label\n                    >\n                    <x-ui.input.select\n                        wire:model=\"form.sub_service_id\"\n                        name=\"sub_service_id\"\n                        id=\"sub_service_id\"\n                        class=\"w-full\"\n                    >\n                        <option value=\"\">Select data</option>\n                        @foreach ($subServices as $value => $label)\n                        <option value=\"{{ $value }}\">{{ $label }}</option>\n                        @endforeach\n                    </x-ui.input.select>\n                    <x-ui.input.error for=\"form.sub_service_id\" />\n                </div>\n\n                <div class=\"w-full\">\n                    <x-ui.label for=\"name\"\n                        >{{ __('crud.subServiceTemplates.inputs.name.label')\n                        }}</x-ui.label\n                    >\n                    <x-ui.input.text\n                        class=\"w-full\"\n                        wire:model=\"form.name\"\n                        name=\"name\"\n                        id=\"name\"\n                        placeholder=\"{{ __('crud.subServiceTemplates.inputs.name.placeholder') }}\"\n                    />\n                    <x-ui.input.error for=\"form.name\" />\n                </div>\n\n                <div class=\"w-full\">\n                    <x-ui.label for=\"description\"\n                        >{{\n                        __('crud.subServiceTemplates.inputs.description.label')\n                        }}</x-ui.label\n                    >\n                    <x-ui.input.textarea\n                        class=\"w-full\"\n                        wire:model=\"form.description\"\n                        rows=\"6\"\n                        name=\"description\"\n                        id=\"description\"\n                        placeholder=\"{{ __('crud.subServiceTemplates.inputs.description.placeholder') }}\"\n                    />\n                    <x-ui.input.error for=\"form.description\" />\n                </div>\n\n                <div class=\"w-full\">\n                    <x-ui.label for=\"image\"\n                        >{{ __('crud.subServiceTemplates.inputs.image.label')\n                        }}</x-ui.label\n                    >\n                    <x-ui.input.image\n                        :src=\"$form->newImage ? Storage::url($form->newImage) : Storage::url($form->image)\"\n                        wire:model=\"form.newImage\"\n                        x-on:removed=\"$form->deleteImage()\"\n                        class=\"w-full\"\n                        id=\"image\"\n                        name=\"image\"\n                    />\n                    <x-ui.input.error for=\"form.newImage\" />\n                </div>\n\n                <div class=\"w-full\">\n                    <x-ui.label for=\"url\"\n                        >{{ __('crud.subServiceTemplates.inputs.url.label')\n                        }}</x-ui.label\n                    >\n                    <x-ui.input.url\n                        class=\"w-full\"\n                        wire:model=\"form.url\"\n                        name=\"url\"\n                        id=\"url\"\n                        placeholder=\"{{ __('crud.subServiceTemplates.inputs.url.placeholder') }}\"\n                    />\n                    <x-ui.input.error for=\"form.url\" />\n                </div>\n\n                <div class=\"w-full\">\n                    <x-ui.label for=\"status\"\n                        >{{ __('crud.subServiceTemplates.inputs.status.label')\n                        }}</x-ui.label\n                    >\n                    <x-ui.input.select\n                        wire:model=\"form.status\"\n                        class=\"w-full\"\n                        id=\"status\"\n                        name=\"status\"\n                    >\n                        <option value=\"\">Select</option>\n                        <option value=\"Active\">Active</option>\n                        <option value=\"Inactive\">Inactive</option>\n                    </x-ui.input.select>\n                    <x-ui.input.error for=\"status\" />\n                </div>\n            </div>\n\n            <div class=\"flex justify-between mt-4 border-t border-gray-50 p-4\">\n                <div>\n                    <!-- Other buttons here -->\n                </div>\n                <div>\n                    <x-ui.button type=\"submit\">Save</x-ui.button>\n                </div>\n            </div>\n        </form>\n    </div>\n</div>\n"
            },
            "item_95": {
                "path": "app/Livewire/Dashboard",
                "name": "SubServiceTemplateCreate.php",
                "fullPath": "app/Livewire/Dashboard/SubServiceTemplateCreate.php",
                "template": "crud/views/livewire/CreateComponent.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 95,
                "createdAt": "2025-01-24 15:41:12",
                "updatedAt": "2025-01-27 14:50:48",
                "content": "<?php\n\nnamespace App\\Livewire\\Dashboard;\n\nuse Livewire\\Component;\nuse App\\Models\\SubService;\nuse Livewire\\WithFileUploads;\nuse Illuminate\\Support\\Collection;\nuse App\\Livewire\\Dashboard\\SubServiceTemplates\\Forms\\CreateForm;\n\nclass SubServiceTemplateCreate extends Component\n{\n    use WithFileUploads;\n\n    public CreateForm $form;\n    public Collection $subServices;\n\n    public function mount()\n    {\n        $this->subServices = SubService::pluck('name', 'id');\n    }\n\n    public function save()\n    {\n        $this->authorize('create', SubServiceTemplate::class);\n\n        $this->validate();\n\n        $subServiceTemplate = $this->form->save();\n\n        return redirect()->route(\n            'dashboard.sub-service-templates.edit',\n            $subServiceTemplate\n        );\n    }\n\n    public function render()\n    {\n        return view('livewire.dashboard.sub-service-templates.create', []);\n    }\n}\n"
            },
            "item_96": {
                "path": "resources/views/livewire/dashboard/sub-service-templates",
                "name": "edit.blade.php",
                "fullPath": "resources/views/livewire/dashboard/sub-service-templates/edit.blade.php",
                "template": "crud/views/livewire/EditView.vemtl",
                "projectId": 1,
                "type": "blade",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 96,
                "createdAt": "2025-01-24 15:41:12",
                "updatedAt": "2025-01-27 14:50:48",
                "content": "<div class=\"max-w-7xl mx-auto py-10 sm:px-6 lg:px-8 space-y-4\">\n    <x-ui.breadcrumbs>\n        <x-ui.breadcrumbs.link href=\"/dashboard\"\n            >Dashboard</x-ui.breadcrumbs.link\n        >\n        <x-ui.breadcrumbs.separator />\n        <x-ui.breadcrumbs.link\n            href=\"{{ route('dashboard.sub-service-templates.index') }}\"\n            >{{ __('crud.subServiceTemplates.collectionTitle')\n            }}</x-ui.breadcrumbs.link\n        >\n        <x-ui.breadcrumbs.separator />\n        <x-ui.breadcrumbs.link active\n            >Edit {{ __('crud.subServiceTemplates.itemTitle')\n            }}</x-ui.breadcrumbs.link\n        >\n    </x-ui.breadcrumbs>\n\n    <x-ui.toast on=\"saved\"> SubServiceTemplate saved successfully. </x-ui.toast>\n\n    <div class=\"w-full text-gray-500 text-lg font-semibold py-4 uppercase\">\n        <h1>Edit {{ __('crud.subServiceTemplates.itemTitle') }}</h1>\n    </div>\n\n    <div class=\"overflow-hidden border rounded-lg bg-white\">\n        <form class=\"w-full mb-0\" wire:submit.prevent=\"save\">\n            <div class=\"p-6 space-y-3\">\n                <div class=\"w-full\">\n                    <x-ui.label for=\"sub_service_id\"\n                        >{{\n                        __('crud.subServiceTemplates.inputs.sub_service_id.label')\n                        }}</x-ui.label\n                    >\n                    <x-ui.input.select\n                        wire:model=\"form.sub_service_id\"\n                        name=\"sub_service_id\"\n                        id=\"sub_service_id\"\n                        class=\"w-full\"\n                    >\n                        <option value=\"\">Select data</option>\n                        @foreach ($subServices as $value => $label)\n                        <option value=\"{{ $value }}\">{{ $label }}</option>\n                        @endforeach\n                    </x-ui.input.select>\n                    <x-ui.input.error for=\"form.sub_service_id\" />\n                </div>\n\n                <div class=\"w-full\">\n                    <x-ui.label for=\"name\"\n                        >{{ __('crud.subServiceTemplates.inputs.name.label')\n                        }}</x-ui.label\n                    >\n                    <x-ui.input.text\n                        class=\"w-full\"\n                        wire:model=\"form.name\"\n                        name=\"name\"\n                        id=\"name\"\n                        placeholder=\"{{ __('crud.subServiceTemplates.inputs.name.placeholder') }}\"\n                    />\n                    <x-ui.input.error for=\"form.name\" />\n                </div>\n\n                <div class=\"w-full\">\n                    <x-ui.label for=\"description\"\n                        >{{\n                        __('crud.subServiceTemplates.inputs.description.label')\n                        }}</x-ui.label\n                    >\n                    <x-ui.input.textarea\n                        class=\"w-full\"\n                        wire:model=\"form.description\"\n                        rows=\"6\"\n                        name=\"description\"\n                        id=\"description\"\n                        placeholder=\"{{ __('crud.subServiceTemplates.inputs.description.placeholder') }}\"\n                    />\n                    <x-ui.input.error for=\"form.description\" />\n                </div>\n\n                <div class=\"w-full\">\n                    <x-ui.label for=\"image\"\n                        >{{ __('crud.subServiceTemplates.inputs.image.label')\n                        }}</x-ui.label\n                    >\n                    <x-ui.input.image\n                        :src=\"$form->newImage ? Storage::url($form->newImage) : Storage::url($form->image)\"\n                        wire:model=\"form.newImage\"\n                        x-on:removed=\"$form->deleteImage()\"\n                        class=\"w-full\"\n                        id=\"image\"\n                        name=\"image\"\n                    />\n                    <x-ui.input.error for=\"form.newImage\" />\n                </div>\n\n                <div class=\"w-full\">\n                    <x-ui.label for=\"url\"\n                        >{{ __('crud.subServiceTemplates.inputs.url.label')\n                        }}</x-ui.label\n                    >\n                    <x-ui.input.url\n                        class=\"w-full\"\n                        wire:model=\"form.url\"\n                        name=\"url\"\n                        id=\"url\"\n                        placeholder=\"{{ __('crud.subServiceTemplates.inputs.url.placeholder') }}\"\n                    />\n                    <x-ui.input.error for=\"form.url\" />\n                </div>\n\n                <div class=\"w-full\">\n                    <x-ui.label for=\"status\"\n                        >{{ __('crud.subServiceTemplates.inputs.status.label')\n                        }}</x-ui.label\n                    >\n                    <x-ui.input.select\n                        wire:model=\"form.status\"\n                        class=\"w-full\"\n                        id=\"status\"\n                        name=\"status\"\n                    >\n                        <option value=\"\">Select</option>\n                        <option value=\"Active\">Active</option>\n                        <option value=\"Inactive\">Inactive</option>\n                    </x-ui.input.select>\n                    <x-ui.input.error for=\"status\" />\n                </div>\n            </div>\n\n            <div class=\"flex justify-between mt-4 border-t border-gray-50 p-4\">\n                <div>\n                    <!-- Other buttons here -->\n                </div>\n                <div>\n                    <x-ui.button type=\"submit\">Save</x-ui.button>\n                </div>\n            </div>\n        </form>\n    </div>\n</div>\n"
            },
            "item_97": {
                "path": "app/Livewire/Dashboard",
                "name": "SubServiceTemplateEdit.php",
                "fullPath": "app/Livewire/Dashboard/SubServiceTemplateEdit.php",
                "template": "crud/views/livewire/EditComponent.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 97,
                "createdAt": "2025-01-24 15:41:12",
                "updatedAt": "2025-01-27 14:50:48",
                "content": "<?php\n\nnamespace App\\Livewire\\Dashboard;\n\nuse Livewire\\Component;\nuse App\\Models\\SubService;\nuse App\\Models\\SubServiceTemplate;\nuse Illuminate\\Support\\Collection;\nuse App\\Livewire\\Dashboard\\SubServiceTemplates\\Forms\\UpdateForm;\n\nclass SubServiceTemplateEdit extends Component\n{\n    public ?SubServiceTemplate $subServiceTemplate = null;\n\n    public UpdateForm $form;\n    public Collection $subServices;\n\n    public function mount(SubServiceTemplate $subServiceTemplate)\n    {\n        $this->authorize('view-any', SubServiceTemplate::class);\n\n        $this->subServiceTemplate = $subServiceTemplate;\n\n        $this->form->setSubServiceTemplate($subServiceTemplate);\n        $this->subServices = SubService::pluck('name', 'id');\n    }\n\n    public function save()\n    {\n        $this->authorize('update', $this->subServiceTemplate);\n\n        $this->validate();\n\n        $this->form->save();\n\n        $this->dispatch('saved');\n    }\n\n    public function render()\n    {\n        return view('livewire.dashboard.sub-service-templates.edit', []);\n    }\n}\n"
            },
            "item_98": {
                "path": "app/Livewire/Dashboard/SubServiceTemplates/Forms",
                "name": "CreateForm.php",
                "fullPath": "app/Livewire/Dashboard/SubServiceTemplates/Forms/CreateForm.php",
                "template": "crud/views/livewire/CreateFormComponent.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 98,
                "createdAt": "2025-01-24 15:41:12",
                "updatedAt": "2025-01-27 14:50:48",
                "content": "<?php\n\nnamespace App\\Livewire\\Dashboard\\SubServiceTemplates\\Forms;\n\nuse Livewire\\Form;\nuse Livewire\\Attributes\\Rule;\nuse App\\Models\\SubServiceTemplate;\n\nclass CreateForm extends Form\n{\n    #[Rule('required')]\n    public $sub_service_id = '';\n\n    #[Rule('required|string')]\n    public $name = '';\n\n    #[Rule('nullable|string')]\n    public $description = '';\n\n    #[Rule('nullable|image|max:1024')]\n    public $image = '';\n\n    public $newImage = null;\n\n    #[Rule('nullable|url')]\n    public $url = '';\n\n    #[Rule('required')]\n    public $status = '';\n\n    public function save()\n    {\n        $this->validate();\n\n        $this->processImage();\n\n        $subServiceTemplate = SubServiceTemplate::create(\n            $this->except(['newImage'])\n        );\n\n        $this->reset();\n\n        return $subServiceTemplate;\n    }\n\n    public function processImage()\n    {\n        if (empty($this->newImage)) {\n            return;\n        }\n\n        $this->image = $this->newImage->store(\n            'sub_service_templates',\n            'public'\n        );\n    }\n\n    public function deleteImage()\n    {\n        $this->newImage = null;\n    }\n}\n"
            },
            "item_99": {
                "path": "app/Livewire/Dashboard/SubServiceTemplates/Forms",
                "name": "UpdateForm.php",
                "fullPath": "app/Livewire/Dashboard/SubServiceTemplates/Forms/UpdateForm.php",
                "template": "crud/views/livewire/UpdateFormComponent.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 99,
                "createdAt": "2025-01-24 15:41:12",
                "updatedAt": "2025-01-27 14:50:48",
                "content": "<?php\n\nnamespace App\\Livewire\\Dashboard\\SubServiceTemplates\\Forms;\n\nuse Livewire\\Form;\nuse Illuminate\\Validation\\Rule;\nuse App\\Models\\SubServiceTemplate;\n\nclass UpdateForm extends Form\n{\n    public ?SubServiceTemplate $subServiceTemplate;\n\n    public $sub_service_id = '';\n\n    public $name = '';\n\n    public $description = '';\n\n    public $image = '';\n\n    public $newImage = null;\n\n    public $url = '';\n\n    public $status = '';\n\n    public function rules(): array\n    {\n        return [\n            'sub_service_id' => ['required'],\n            'name' => ['required', 'string'],\n            'description' => ['nullable', 'string'],\n            'image' => ['nullable', 'image', 'max:1024'],\n            'url' => ['nullable', 'url'],\n            'status' => ['required'],\n        ];\n    }\n\n    public function setSubServiceTemplate(\n        SubServiceTemplate $subServiceTemplate\n    ) {\n        $this->subServiceTemplate = $subServiceTemplate;\n\n        $this->sub_service_id = $subServiceTemplate->sub_service_id;\n        $this->name = $subServiceTemplate->name;\n        $this->description = $subServiceTemplate->description;\n        $this->image = $subServiceTemplate->image;\n        $this->url = $subServiceTemplate->url;\n        $this->status = $subServiceTemplate->status;\n    }\n\n    public function save()\n    {\n        $this->validate();\n\n        $this->processImage();\n\n        $this->subServiceTemplate->update(\n            $this->except(['subServiceTemplate', 'sub_service_id', 'newImage'])\n        );\n    }\n\n    public function processImage()\n    {\n        if (empty($this->newImage)) {\n            return;\n        }\n\n        $this->subServiceTemplate->image = $this->newImage->store(\n            'sub_service_templates',\n            'public'\n        );\n    }\n\n    public function deleteImage()\n    {\n        $this->newImage = null;\n    }\n}\n"
            },
            "item_100": {
                "path": "resources/views/livewire/dashboard/all-delivery-days",
                "name": "index.blade.php",
                "fullPath": "resources/views/livewire/dashboard/all-delivery-days/index.blade.php",
                "template": "crud/views/livewire/IndexView.vemtl",
                "projectId": 1,
                "type": "blade",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 100,
                "createdAt": "2025-01-24 15:41:46",
                "updatedAt": "2025-01-27 14:50:48",
                "content": "<div class=\"max-w-7xl mx-auto py-10 sm:px-6 lg:px-8 space-y-4\">\n    <x-ui.breadcrumbs>\n        <x-ui.breadcrumbs.link href=\"/dashboard\"\n            >Dashboard</x-ui.breadcrumbs.link\n        >\n        <x-ui.breadcrumbs.separator />\n        <x-ui.breadcrumbs.link active\n            >{{ __('crud.allDeliveryDays.collectionTitle')\n            }}</x-ui.breadcrumbs.link\n        >\n    </x-ui.breadcrumbs>\n\n    <div class=\"flex justify-between align-top py-4\">\n        <x-ui.input\n            wire:model.live=\"search\"\n            type=\"text\"\n            placeholder=\"Search {{ __('crud.allDeliveryDays.collectionTitle') }}...\"\n        />\n\n        @can('create', App\\Models\\DeliveryDays::class)\n        <a\n            wire:navigate\n            href=\"{{ route('dashboard.all-delivery-days.create') }}\"\n        >\n            <x-ui.button>New</x-ui.button>\n        </a>\n        @endcan\n    </div>\n\n    {{-- Delete Modal --}}\n    <x-ui.modal.confirm wire:model=\"confirmingDeletion\">\n        <x-slot name=\"title\"> {{ __('Delete') }} </x-slot>\n\n        <x-slot name=\"content\"> {{ __('Are you sure?') }} </x-slot>\n\n        <x-slot name=\"footer\">\n            <x-ui.button\n                wire:click=\"$toggle('confirmingDeletion')\"\n                wire:loading.attr=\"disabled\"\n            >\n                {{ __('Cancel') }}\n            </x-ui.button>\n\n            <x-ui.button.danger\n                class=\"ml-3\"\n                wire:click=\"delete({{ $deletingDeliveryDays }})\"\n                wire:loading.attr=\"disabled\"\n            >\n                {{ __('Delete') }}\n            </x-ui.button.danger>\n        </x-slot>\n    </x-ui.modal.confirm>\n\n    {{-- Index Table --}}\n    <x-ui.container.table>\n        <x-ui.table>\n            <x-slot name=\"head\">\n                <x-ui.table.header\n                    for-crud\n                    wire:click=\"sortBy('sub_service_id')\"\n                    >{{ __('crud.allDeliveryDays.inputs.sub_service_id.label')\n                    }}</x-ui.table.header\n                >\n                <x-ui.table.header for-crud wire:click=\"sortBy('name')\"\n                    >{{ __('crud.allDeliveryDays.inputs.name.label')\n                    }}</x-ui.table.header\n                >\n                <x-ui.table.header for-crud wire:click=\"sortBy('description')\"\n                    >{{ __('crud.allDeliveryDays.inputs.description.label')\n                    }}</x-ui.table.header\n                >\n                <x-ui.table.header for-crud wire:click=\"sortBy('price')\"\n                    >{{ __('crud.allDeliveryDays.inputs.price.label')\n                    }}</x-ui.table.header\n                >\n                <x-ui.table.header for-crud wire:click=\"sortBy('status')\"\n                    >{{ __('crud.allDeliveryDays.inputs.status.label')\n                    }}</x-ui.table.header\n                >\n                <x-ui.table.action-header>Actions</x-ui.table.action-header>\n            </x-slot>\n\n            <x-slot name=\"body\">\n                @forelse ($allDeliveryDays as $deliveryDays)\n                <x-ui.table.row wire:loading.class.delay=\"opacity-75\">\n                    <x-ui.table.column for-crud\n                        >{{ $deliveryDays->sub_service_id }}</x-ui.table.column\n                    >\n                    <x-ui.table.column for-crud\n                        >{{ $deliveryDays->name }}</x-ui.table.column\n                    >\n                    <x-ui.table.column for-crud\n                        >{{ $deliveryDays->description }}</x-ui.table.column\n                    >\n                    <x-ui.table.column for-crud\n                        >{{ $deliveryDays->price }}</x-ui.table.column\n                    >\n                    <x-ui.table.column for-crud\n                        >{{ $deliveryDays->status }}</x-ui.table.column\n                    >\n                    <x-ui.table.action-column>\n                        @can('update', $deliveryDays)\n                        <x-ui.action\n                            wire:navigate\n                            href=\"{{ route('dashboard.all-delivery-days.edit', $deliveryDays) }}\"\n                            >Edit</x-ui.action\n                        >\n                        @endcan @can('delete', $deliveryDays)\n                        <x-ui.action.danger\n                            wire:click=\"confirmDeletion({{ $deliveryDays->id }})\"\n                            >Delete</x-ui.action.danger\n                        >\n                        @endcan\n                    </x-ui.table.action-column>\n                </x-ui.table.row>\n                @empty\n                <x-ui.table.row>\n                    <x-ui.table.column colspan=\"6\"\n                        >No {{ __('crud.allDeliveryDays.collectionTitle') }} found.</x-ui.table.column\n                    >\n                </x-ui.table.row>\n                @endforelse\n            </x-slot>\n        </x-ui.table>\n\n        <div class=\"mt-2\">{{ $allDeliveryDays->links() }}</div>\n    </x-ui.container.table>\n</div>\n"
            },
            "item_101": {
                "path": "app/Livewire/Dashboard",
                "name": "DeliveryDaysIndex.php",
                "fullPath": "app/Livewire/Dashboard/DeliveryDaysIndex.php",
                "template": "crud/views/livewire/IndexComponent.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 101,
                "createdAt": "2025-01-24 15:41:46",
                "updatedAt": "2025-01-27 14:50:48",
                "content": "<?php\n\nnamespace App\\Livewire\\Dashboard;\n\nuse Livewire\\Component;\nuse Livewire\\WithPagination;\nuse App\\Models\\DeliveryDays;\n\nclass DeliveryDaysIndex extends Component\n{\n    use WithPagination;\n\n    public $search;\n    public $sortField = 'updated_at';\n    public $sortDirection = 'desc';\n\n    public $queryString = ['search', 'sortField', 'sortDirection'];\n\n    public $confirmingDeletion = false;\n    public $deletingDeliveryDays;\n\n    public function updatingSearch()\n    {\n        $this->resetPage();\n    }\n\n    public function confirmDeletion(string $id)\n    {\n        $this->deletingDeliveryDays = $id;\n\n        $this->confirmingDeletion = true;\n    }\n\n    public function delete(DeliveryDays $deliveryDays)\n    {\n        $deliveryDays->delete();\n\n        $this->confirmingDeletion = false;\n    }\n\n    public function sortBy($field)\n    {\n        if ($this->sortField === $field) {\n            $this->sortDirection =\n                $this->sortDirection === 'asc' ? 'desc' : 'asc';\n        } else {\n            $this->sortDirection = 'asc';\n        }\n\n        $this->sortField = $field;\n    }\n\n    public function getRowsProperty()\n    {\n        return $this->rowsQuery->paginate(5);\n    }\n\n    public function getRowsQueryProperty()\n    {\n        return DeliveryDays::query()\n            ->orderBy($this->sortField, $this->sortDirection)\n            ->where('name', 'like', \"%{$this->search}%\");\n    }\n\n    public function render()\n    {\n        return view('livewire.dashboard.all-delivery-days.index', [\n            'allDeliveryDays' => $this->rows,\n        ]);\n    }\n}\n"
            },
            "item_102": {
                "path": "resources/views/livewire/dashboard/all-delivery-days",
                "name": "create.blade.php",
                "fullPath": "resources/views/livewire/dashboard/all-delivery-days/create.blade.php",
                "template": "crud/views/livewire/CreateView.vemtl",
                "projectId": 1,
                "type": "blade",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 102,
                "createdAt": "2025-01-24 15:41:46",
                "updatedAt": "2025-01-27 14:50:48",
                "content": "<div class=\"max-w-7xl mx-auto py-10 sm:px-6 lg:px-8 space-y-4\">\n    <x-ui.breadcrumbs>\n        <x-ui.breadcrumbs.link href=\"/dashboard\"\n            >Dashboard</x-ui.breadcrumbs.link\n        >\n        <x-ui.breadcrumbs.separator />\n        <x-ui.breadcrumbs.link\n            href=\"{{ route('dashboard.all-delivery-days.index') }}\"\n            >{{ __('crud.allDeliveryDays.collectionTitle')\n            }}</x-ui.breadcrumbs.link\n        >\n        <x-ui.breadcrumbs.separator />\n        <x-ui.breadcrumbs.link active\n            >Create {{ __('crud.allDeliveryDays.itemTitle')\n            }}</x-ui.breadcrumbs.link\n        >\n    </x-ui.breadcrumbs>\n\n    <div class=\"w-full text-gray-500 text-lg font-semibold py-4 uppercase\">\n        <h1>Create {{ __('crud.allDeliveryDays.itemTitle') }}</h1>\n    </div>\n\n    <div class=\"overflow-hidden border rounded-lg bg-white\">\n        <form class=\"w-full mb-0\" wire:submit.prevent=\"save\">\n            <div class=\"p-6 space-y-3\">\n                <div class=\"w-full\">\n                    <x-ui.label for=\"sub_service_id\"\n                        >{{\n                        __('crud.allDeliveryDays.inputs.sub_service_id.label')\n                        }}</x-ui.label\n                    >\n                    <x-ui.input.select\n                        wire:model=\"form.sub_service_id\"\n                        name=\"sub_service_id\"\n                        id=\"sub_service_id\"\n                        class=\"w-full\"\n                    >\n                        <option value=\"\">Select data</option>\n                        @foreach ($subServices as $value => $label)\n                        <option value=\"{{ $value }}\">{{ $label }}</option>\n                        @endforeach\n                    </x-ui.input.select>\n                    <x-ui.input.error for=\"form.sub_service_id\" />\n                </div>\n\n                <div class=\"w-full\">\n                    <x-ui.label for=\"name\"\n                        >{{ __('crud.allDeliveryDays.inputs.name.label')\n                        }}</x-ui.label\n                    >\n                    <x-ui.input.text\n                        class=\"w-full\"\n                        wire:model=\"form.name\"\n                        name=\"name\"\n                        id=\"name\"\n                        placeholder=\"{{ __('crud.allDeliveryDays.inputs.name.placeholder') }}\"\n                    />\n                    <x-ui.input.error for=\"form.name\" />\n                </div>\n\n                <div class=\"w-full\">\n                    <x-ui.label for=\"description\"\n                        >{{ __('crud.allDeliveryDays.inputs.description.label')\n                        }}</x-ui.label\n                    >\n                    <x-ui.input.textarea\n                        class=\"w-full\"\n                        wire:model=\"form.description\"\n                        rows=\"6\"\n                        name=\"description\"\n                        id=\"description\"\n                        placeholder=\"{{ __('crud.allDeliveryDays.inputs.description.placeholder') }}\"\n                    />\n                    <x-ui.input.error for=\"form.description\" />\n                </div>\n\n                <div class=\"w-full\">\n                    <x-ui.label for=\"price\"\n                        >{{ __('crud.allDeliveryDays.inputs.price.label')\n                        }}</x-ui.label\n                    >\n                    <x-ui.input.number\n                        class=\"w-full\"\n                        wire:model=\"form.price\"\n                        name=\"price\"\n                        id=\"price\"\n                        placeholder=\"{{ __('crud.allDeliveryDays.inputs.price.placeholder') }}\"\n                        step=\"1\"\n                    />\n                    <x-ui.input.error for=\"form.price\" />\n                </div>\n\n                <div class=\"w-full\">\n                    <x-ui.label for=\"status\"\n                        >{{ __('crud.allDeliveryDays.inputs.status.label')\n                        }}</x-ui.label\n                    >\n                    <x-ui.input.select\n                        wire:model=\"form.status\"\n                        class=\"w-full\"\n                        id=\"status\"\n                        name=\"status\"\n                    >\n                        <option value=\"\">Select</option>\n                        <option value=\"Active\">Active</option>\n                        <option value=\"Inactive\">Inactive</option>\n                    </x-ui.input.select>\n                    <x-ui.input.error for=\"status\" />\n                </div>\n            </div>\n\n            <div class=\"flex justify-between mt-4 border-t border-gray-50 p-4\">\n                <div>\n                    <!-- Other buttons here -->\n                </div>\n                <div>\n                    <x-ui.button type=\"submit\">Save</x-ui.button>\n                </div>\n            </div>\n        </form>\n    </div>\n</div>\n"
            },
            "item_103": {
                "path": "app/Livewire/Dashboard",
                "name": "DeliveryDaysCreate.php",
                "fullPath": "app/Livewire/Dashboard/DeliveryDaysCreate.php",
                "template": "crud/views/livewire/CreateComponent.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 103,
                "createdAt": "2025-01-24 15:41:46",
                "updatedAt": "2025-01-27 14:50:48",
                "content": "<?php\n\nnamespace App\\Livewire\\Dashboard;\n\nuse Livewire\\Component;\nuse App\\Models\\SubService;\nuse Livewire\\WithFileUploads;\nuse Illuminate\\Support\\Collection;\nuse App\\Livewire\\Dashboard\\AllDeliveryDays\\Forms\\CreateForm;\n\nclass DeliveryDaysCreate extends Component\n{\n    use WithFileUploads;\n\n    public CreateForm $form;\n    public Collection $subServices;\n\n    public function mount()\n    {\n        $this->subServices = SubService::pluck('name', 'id');\n    }\n\n    public function save()\n    {\n        $this->authorize('create', DeliveryDays::class);\n\n        $this->validate();\n\n        $deliveryDays = $this->form->save();\n\n        return redirect()->route(\n            'dashboard.all-delivery-days.edit',\n            $deliveryDays\n        );\n    }\n\n    public function render()\n    {\n        return view('livewire.dashboard.all-delivery-days.create', []);\n    }\n}\n"
            },
            "item_104": {
                "path": "resources/views/livewire/dashboard/all-delivery-days",
                "name": "edit.blade.php",
                "fullPath": "resources/views/livewire/dashboard/all-delivery-days/edit.blade.php",
                "template": "crud/views/livewire/EditView.vemtl",
                "projectId": 1,
                "type": "blade",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 104,
                "createdAt": "2025-01-24 15:41:46",
                "updatedAt": "2025-01-27 14:50:48",
                "content": "<div class=\"max-w-7xl mx-auto py-10 sm:px-6 lg:px-8 space-y-4\">\n    <x-ui.breadcrumbs>\n        <x-ui.breadcrumbs.link href=\"/dashboard\"\n            >Dashboard</x-ui.breadcrumbs.link\n        >\n        <x-ui.breadcrumbs.separator />\n        <x-ui.breadcrumbs.link\n            href=\"{{ route('dashboard.all-delivery-days.index') }}\"\n            >{{ __('crud.allDeliveryDays.collectionTitle')\n            }}</x-ui.breadcrumbs.link\n        >\n        <x-ui.breadcrumbs.separator />\n        <x-ui.breadcrumbs.link active\n            >Edit {{ __('crud.allDeliveryDays.itemTitle')\n            }}</x-ui.breadcrumbs.link\n        >\n    </x-ui.breadcrumbs>\n\n    <x-ui.toast on=\"saved\"> DeliveryDays saved successfully. </x-ui.toast>\n\n    <div class=\"w-full text-gray-500 text-lg font-semibold py-4 uppercase\">\n        <h1>Edit {{ __('crud.allDeliveryDays.itemTitle') }}</h1>\n    </div>\n\n    <div class=\"overflow-hidden border rounded-lg bg-white\">\n        <form class=\"w-full mb-0\" wire:submit.prevent=\"save\">\n            <div class=\"p-6 space-y-3\">\n                <div class=\"w-full\">\n                    <x-ui.label for=\"sub_service_id\"\n                        >{{\n                        __('crud.allDeliveryDays.inputs.sub_service_id.label')\n                        }}</x-ui.label\n                    >\n                    <x-ui.input.select\n                        wire:model=\"form.sub_service_id\"\n                        name=\"sub_service_id\"\n                        id=\"sub_service_id\"\n                        class=\"w-full\"\n                    >\n                        <option value=\"\">Select data</option>\n                        @foreach ($subServices as $value => $label)\n                        <option value=\"{{ $value }}\">{{ $label }}</option>\n                        @endforeach\n                    </x-ui.input.select>\n                    <x-ui.input.error for=\"form.sub_service_id\" />\n                </div>\n\n                <div class=\"w-full\">\n                    <x-ui.label for=\"name\"\n                        >{{ __('crud.allDeliveryDays.inputs.name.label')\n                        }}</x-ui.label\n                    >\n                    <x-ui.input.text\n                        class=\"w-full\"\n                        wire:model=\"form.name\"\n                        name=\"name\"\n                        id=\"name\"\n                        placeholder=\"{{ __('crud.allDeliveryDays.inputs.name.placeholder') }}\"\n                    />\n                    <x-ui.input.error for=\"form.name\" />\n                </div>\n\n                <div class=\"w-full\">\n                    <x-ui.label for=\"description\"\n                        >{{ __('crud.allDeliveryDays.inputs.description.label')\n                        }}</x-ui.label\n                    >\n                    <x-ui.input.textarea\n                        class=\"w-full\"\n                        wire:model=\"form.description\"\n                        rows=\"6\"\n                        name=\"description\"\n                        id=\"description\"\n                        placeholder=\"{{ __('crud.allDeliveryDays.inputs.description.placeholder') }}\"\n                    />\n                    <x-ui.input.error for=\"form.description\" />\n                </div>\n\n                <div class=\"w-full\">\n                    <x-ui.label for=\"price\"\n                        >{{ __('crud.allDeliveryDays.inputs.price.label')\n                        }}</x-ui.label\n                    >\n                    <x-ui.input.number\n                        class=\"w-full\"\n                        wire:model=\"form.price\"\n                        name=\"price\"\n                        id=\"price\"\n                        placeholder=\"{{ __('crud.allDeliveryDays.inputs.price.placeholder') }}\"\n                        step=\"1\"\n                    />\n                    <x-ui.input.error for=\"form.price\" />\n                </div>\n\n                <div class=\"w-full\">\n                    <x-ui.label for=\"status\"\n                        >{{ __('crud.allDeliveryDays.inputs.status.label')\n                        }}</x-ui.label\n                    >\n                    <x-ui.input.select\n                        wire:model=\"form.status\"\n                        class=\"w-full\"\n                        id=\"status\"\n                        name=\"status\"\n                    >\n                        <option value=\"\">Select</option>\n                        <option value=\"Active\">Active</option>\n                        <option value=\"Inactive\">Inactive</option>\n                    </x-ui.input.select>\n                    <x-ui.input.error for=\"status\" />\n                </div>\n            </div>\n\n            <div class=\"flex justify-between mt-4 border-t border-gray-50 p-4\">\n                <div>\n                    <!-- Other buttons here -->\n                </div>\n                <div>\n                    <x-ui.button type=\"submit\">Save</x-ui.button>\n                </div>\n            </div>\n        </form>\n    </div>\n</div>\n"
            },
            "item_105": {
                "path": "app/Livewire/Dashboard",
                "name": "DeliveryDaysEdit.php",
                "fullPath": "app/Livewire/Dashboard/DeliveryDaysEdit.php",
                "template": "crud/views/livewire/EditComponent.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 105,
                "createdAt": "2025-01-24 15:41:46",
                "updatedAt": "2025-01-27 14:50:48",
                "content": "<?php\n\nnamespace App\\Livewire\\Dashboard;\n\nuse Livewire\\Component;\nuse App\\Models\\SubService;\nuse App\\Models\\DeliveryDays;\nuse Illuminate\\Support\\Collection;\nuse App\\Livewire\\Dashboard\\AllDeliveryDays\\Forms\\UpdateForm;\n\nclass DeliveryDaysEdit extends Component\n{\n    public ?DeliveryDays $deliveryDays = null;\n\n    public UpdateForm $form;\n    public Collection $subServices;\n\n    public function mount(DeliveryDays $deliveryDays)\n    {\n        $this->authorize('view-any', DeliveryDays::class);\n\n        $this->deliveryDays = $deliveryDays;\n\n        $this->form->setDeliveryDays($deliveryDays);\n        $this->subServices = SubService::pluck('name', 'id');\n    }\n\n    public function save()\n    {\n        $this->authorize('update', $this->deliveryDays);\n\n        $this->validate();\n\n        $this->form->save();\n\n        $this->dispatch('saved');\n    }\n\n    public function render()\n    {\n        return view('livewire.dashboard.all-delivery-days.edit', []);\n    }\n}\n"
            },
            "item_106": {
                "path": "app/Livewire/Dashboard/AllDeliveryDays/Forms",
                "name": "CreateForm.php",
                "fullPath": "app/Livewire/Dashboard/AllDeliveryDays/Forms/CreateForm.php",
                "template": "crud/views/livewire/CreateFormComponent.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 106,
                "createdAt": "2025-01-24 15:41:46",
                "updatedAt": "2025-01-27 14:50:48",
                "content": "<?php\n\nnamespace App\\Livewire\\Dashboard\\AllDeliveryDays\\Forms;\n\nuse Livewire\\Form;\nuse App\\Models\\DeliveryDays;\nuse Livewire\\Attributes\\Rule;\n\nclass CreateForm extends Form\n{\n    #[Rule('required')]\n    public $sub_service_id = '';\n\n    #[Rule('required|string')]\n    public $name = '';\n\n    #[Rule('nullable|string')]\n    public $description = '';\n\n    #[Rule('nullable')]\n    public $price = '';\n\n    #[Rule('required')]\n    public $status = '';\n\n    public function save()\n    {\n        $this->validate();\n\n        $deliveryDays = DeliveryDays::create($this->except([]));\n\n        $this->reset();\n\n        return $deliveryDays;\n    }\n}\n"
            },
            "item_107": {
                "path": "app/Livewire/Dashboard/AllDeliveryDays/Forms",
                "name": "UpdateForm.php",
                "fullPath": "app/Livewire/Dashboard/AllDeliveryDays/Forms/UpdateForm.php",
                "template": "crud/views/livewire/UpdateFormComponent.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 107,
                "createdAt": "2025-01-24 15:41:46",
                "updatedAt": "2025-01-27 14:50:48",
                "content": "<?php\n\nnamespace App\\Livewire\\Dashboard\\AllDeliveryDays\\Forms;\n\nuse Livewire\\Form;\nuse App\\Models\\DeliveryDays;\nuse Illuminate\\Validation\\Rule;\n\nclass UpdateForm extends Form\n{\n    public ?DeliveryDays $deliveryDays;\n\n    public $sub_service_id = '';\n\n    public $name = '';\n\n    public $description = '';\n\n    public $price = '';\n\n    public $status = '';\n\n    public function rules(): array\n    {\n        return [\n            'sub_service_id' => ['required'],\n            'name' => ['required', 'string'],\n            'description' => ['nullable', 'string'],\n            'price' => ['nullable'],\n            'status' => ['required'],\n        ];\n    }\n\n    public function setDeliveryDays(DeliveryDays $deliveryDays)\n    {\n        $this->deliveryDays = $deliveryDays;\n\n        $this->sub_service_id = $deliveryDays->sub_service_id;\n        $this->name = $deliveryDays->name;\n        $this->description = $deliveryDays->description;\n        $this->price = $deliveryDays->price;\n        $this->status = $deliveryDays->status;\n    }\n\n    public function save()\n    {\n        $this->validate();\n\n        $this->deliveryDays->update(\n            $this->except(['deliveryDays', 'sub_service_id'])\n        );\n    }\n}\n"
            },
            "item_108": {
                "path": "database/factories",
                "name": "ContentCategoryFactory.php",
                "fullPath": "database/factories/ContentCategoryFactory.php",
                "template": "database/Factory.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 108,
                "createdAt": "2025-01-24 16:51:34",
                "updatedAt": "2025-01-27 14:50:48",
                "content": "<?php\n\nnamespace Database\\Factories;\n\nuse Illuminate\\Support\\Str;\nuse App\\Models\\ContentCategory;\nuse Illuminate\\Database\\Eloquent\\Factories\\Factory;\n\nclass ContentCategoryFactory extends Factory\n{\n    /**\n     * The name of the factory's corresponding model.\n     *\n     * @var string\n     */\n    protected $model = ContentCategory::class;\n\n    /**\n     * Define the model's default state.\n     *\n     * @return array<string, mixed>\n     */\n    public function definition(): array\n    {\n        return [\n            'name' => fake()->name(),\n            'decription' => fake()->word(),\n        ];\n    }\n}\n"
            },
            "item_109": {
                "path": "database/seeders",
                "name": "ContentCategorySeeder.php",
                "fullPath": "database/seeders/ContentCategorySeeder.php",
                "template": "database/Seeder.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 109,
                "createdAt": "2025-01-24 16:51:34",
                "updatedAt": "2025-01-27 14:50:48",
                "content": "<?php\n\nnamespace Database\\Seeders;\n\nuse Illuminate\\Database\\Seeder;\nuse App\\Models\\ContentCategory;\n\nclass ContentCategorySeeder extends Seeder\n{\n    /**\n     * Run the database seeds.\n     */\n    public function run(): void\n    {\n        ContentCategory::factory()\n            ->count(5)\n            ->create();\n    }\n}\n"
            },
            "item_110": {
                "path": "app/Policies",
                "name": "ContentCategoryPolicy.php",
                "fullPath": "app/Policies/ContentCategoryPolicy.php",
                "template": "models/Policy.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 110,
                "createdAt": "2025-01-24 16:51:34",
                "updatedAt": "2025-01-27 14:50:48",
                "content": "<?php\n\nnamespace App\\Policies;\n\nuse App\\Models\\User;\nuse App\\Models\\ContentCategory;\n\nclass ContentCategoryPolicy\n{\n    /**\n     * Determine whether the user can view any models.\n     */\n    public function viewAny(User $user): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can view the model.\n     */\n    public function view(User $user, ContentCategory $model): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can create models.\n     */\n    public function create(User $user): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can update the model.\n     */\n    public function update(User $user, ContentCategory $model): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can delete the model.\n     */\n    public function delete(User $user, ContentCategory $model): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can restore the model.\n     */\n    public function restore(User $user, ContentCategory $model): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can permanently delete the model.\n     */\n    public function forceDelete(User $user, ContentCategory $model): bool\n    {\n        return true;\n    }\n}\n"
            },
            "item_111": {
                "path": "resources/views/livewire/dashboard/content-categories",
                "name": "index.blade.php",
                "fullPath": "resources/views/livewire/dashboard/content-categories/index.blade.php",
                "template": "crud/views/livewire/IndexView.vemtl",
                "projectId": 1,
                "type": "blade",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 111,
                "createdAt": "2025-01-24 16:51:34",
                "updatedAt": "2025-01-27 14:50:48",
                "content": "<div class=\"max-w-7xl mx-auto py-10 sm:px-6 lg:px-8 space-y-4\">\n    <x-ui.breadcrumbs>\n        <x-ui.breadcrumbs.link href=\"/dashboard\"\n            >Dashboard</x-ui.breadcrumbs.link\n        >\n        <x-ui.breadcrumbs.separator />\n        <x-ui.breadcrumbs.link active\n            >{{ __('crud.contentCategories.collectionTitle')\n            }}</x-ui.breadcrumbs.link\n        >\n    </x-ui.breadcrumbs>\n\n    <div class=\"flex justify-between align-top py-4\">\n        <x-ui.input\n            wire:model.live=\"search\"\n            type=\"text\"\n            placeholder=\"Search {{ __('crud.contentCategories.collectionTitle') }}...\"\n        />\n\n        @can('create', App\\Models\\ContentCategory::class)\n        <a\n            wire:navigate\n            href=\"{{ route('dashboard.content-categories.create') }}\"\n        >\n            <x-ui.button>New</x-ui.button>\n        </a>\n        @endcan\n    </div>\n\n    {{-- Delete Modal --}}\n    <x-ui.modal.confirm wire:model=\"confirmingDeletion\">\n        <x-slot name=\"title\"> {{ __('Delete') }} </x-slot>\n\n        <x-slot name=\"content\"> {{ __('Are you sure?') }} </x-slot>\n\n        <x-slot name=\"footer\">\n            <x-ui.button\n                wire:click=\"$toggle('confirmingDeletion')\"\n                wire:loading.attr=\"disabled\"\n            >\n                {{ __('Cancel') }}\n            </x-ui.button>\n\n            <x-ui.button.danger\n                class=\"ml-3\"\n                wire:click=\"delete({{ $deletingContentCategory }})\"\n                wire:loading.attr=\"disabled\"\n            >\n                {{ __('Delete') }}\n            </x-ui.button.danger>\n        </x-slot>\n    </x-ui.modal.confirm>\n\n    {{-- Index Table --}}\n    <x-ui.container.table>\n        <x-ui.table>\n            <x-slot name=\"head\">\n                <x-ui.table.header for-crud wire:click=\"sortBy('name')\"\n                    >{{ __('crud.contentCategories.inputs.name.label')\n                    }}</x-ui.table.header\n                >\n                <x-ui.table.header for-crud wire:click=\"sortBy('decription')\"\n                    >{{ __('crud.contentCategories.inputs.decription.label')\n                    }}</x-ui.table.header\n                >\n                <x-ui.table.header for-crud wire:click=\"sortBy('status')\"\n                    >{{ __('crud.contentCategories.inputs.status.label')\n                    }}</x-ui.table.header\n                >\n                <x-ui.table.action-header>Actions</x-ui.table.action-header>\n            </x-slot>\n\n            <x-slot name=\"body\">\n                @forelse ($contentCategories as $contentCategory)\n                <x-ui.table.row wire:loading.class.delay=\"opacity-75\">\n                    <x-ui.table.column for-crud\n                        >{{ $contentCategory->name }}</x-ui.table.column\n                    >\n                    <x-ui.table.column for-crud\n                        >{{ $contentCategory->decription }}</x-ui.table.column\n                    >\n                    <x-ui.table.column for-crud\n                        >{{ $contentCategory->status }}</x-ui.table.column\n                    >\n                    <x-ui.table.action-column>\n                        @can('update', $contentCategory)\n                        <x-ui.action\n                            wire:navigate\n                            href=\"{{ route('dashboard.content-categories.edit', $contentCategory) }}\"\n                            >Edit</x-ui.action\n                        >\n                        @endcan @can('delete', $contentCategory)\n                        <x-ui.action.danger\n                            wire:click=\"confirmDeletion({{ $contentCategory->id }})\"\n                            >Delete</x-ui.action.danger\n                        >\n                        @endcan\n                    </x-ui.table.action-column>\n                </x-ui.table.row>\n                @empty\n                <x-ui.table.row>\n                    <x-ui.table.column colspan=\"4\"\n                        >No {{ __('crud.contentCategories.collectionTitle') }} found.</x-ui.table.column\n                    >\n                </x-ui.table.row>\n                @endforelse\n            </x-slot>\n        </x-ui.table>\n\n        <div class=\"mt-2\">{{ $contentCategories->links() }}</div>\n    </x-ui.container.table>\n</div>\n"
            },
            "item_112": {
                "path": "app/Livewire/Dashboard",
                "name": "ContentCategoryIndex.php",
                "fullPath": "app/Livewire/Dashboard/ContentCategoryIndex.php",
                "template": "crud/views/livewire/IndexComponent.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 112,
                "createdAt": "2025-01-24 16:51:34",
                "updatedAt": "2025-01-27 14:50:48",
                "content": "<?php\n\nnamespace App\\Livewire\\Dashboard;\n\nuse Livewire\\Component;\nuse Livewire\\WithPagination;\nuse App\\Models\\ContentCategory;\n\nclass ContentCategoryIndex extends Component\n{\n    use WithPagination;\n\n    public $search;\n    public $sortField = 'updated_at';\n    public $sortDirection = 'desc';\n\n    public $queryString = ['search', 'sortField', 'sortDirection'];\n\n    public $confirmingDeletion = false;\n    public $deletingContentCategory;\n\n    public function updatingSearch()\n    {\n        $this->resetPage();\n    }\n\n    public function confirmDeletion(string $id)\n    {\n        $this->deletingContentCategory = $id;\n\n        $this->confirmingDeletion = true;\n    }\n\n    public function delete(ContentCategory $contentCategory)\n    {\n        $contentCategory->delete();\n\n        $this->confirmingDeletion = false;\n    }\n\n    public function sortBy($field)\n    {\n        if ($this->sortField === $field) {\n            $this->sortDirection =\n                $this->sortDirection === 'asc' ? 'desc' : 'asc';\n        } else {\n            $this->sortDirection = 'asc';\n        }\n\n        $this->sortField = $field;\n    }\n\n    public function getRowsProperty()\n    {\n        return $this->rowsQuery->paginate(5);\n    }\n\n    public function getRowsQueryProperty()\n    {\n        return ContentCategory::query()\n            ->orderBy($this->sortField, $this->sortDirection)\n            ->where('name', 'like', \"%{$this->search}%\");\n    }\n\n    public function render()\n    {\n        return view('livewire.dashboard.content-categories.index', [\n            'contentCategories' => $this->rows,\n        ]);\n    }\n}\n"
            },
            "item_113": {
                "path": "resources/views/livewire/dashboard/content-categories",
                "name": "create.blade.php",
                "fullPath": "resources/views/livewire/dashboard/content-categories/create.blade.php",
                "template": "crud/views/livewire/CreateView.vemtl",
                "projectId": 1,
                "type": "blade",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 113,
                "createdAt": "2025-01-24 16:51:34",
                "updatedAt": "2025-01-27 14:50:48",
                "content": "<div class=\"max-w-7xl mx-auto py-10 sm:px-6 lg:px-8 space-y-4\">\n    <x-ui.breadcrumbs>\n        <x-ui.breadcrumbs.link href=\"/dashboard\"\n            >Dashboard</x-ui.breadcrumbs.link\n        >\n        <x-ui.breadcrumbs.separator />\n        <x-ui.breadcrumbs.link\n            href=\"{{ route('dashboard.content-categories.index') }}\"\n            >{{ __('crud.contentCategories.collectionTitle')\n            }}</x-ui.breadcrumbs.link\n        >\n        <x-ui.breadcrumbs.separator />\n        <x-ui.breadcrumbs.link active\n            >Create {{ __('crud.contentCategories.itemTitle')\n            }}</x-ui.breadcrumbs.link\n        >\n    </x-ui.breadcrumbs>\n\n    <div class=\"w-full text-gray-500 text-lg font-semibold py-4 uppercase\">\n        <h1>Create {{ __('crud.contentCategories.itemTitle') }}</h1>\n    </div>\n\n    <div class=\"overflow-hidden border rounded-lg bg-white\">\n        <form class=\"w-full mb-0\" wire:submit.prevent=\"save\">\n            <div class=\"p-6 space-y-3\">\n                <div class=\"w-full\">\n                    <x-ui.label for=\"name\"\n                        >{{ __('crud.contentCategories.inputs.name.label')\n                        }}</x-ui.label\n                    >\n                    <x-ui.input.text\n                        class=\"w-full\"\n                        wire:model=\"form.name\"\n                        name=\"name\"\n                        id=\"name\"\n                        placeholder=\"{{ __('crud.contentCategories.inputs.name.placeholder') }}\"\n                    />\n                    <x-ui.input.error for=\"form.name\" />\n                </div>\n\n                <div class=\"w-full\">\n                    <x-ui.label for=\"decription\"\n                        >{{ __('crud.contentCategories.inputs.decription.label')\n                        }}</x-ui.label\n                    >\n                    <x-ui.input.textarea\n                        class=\"w-full\"\n                        wire:model=\"form.decription\"\n                        rows=\"6\"\n                        name=\"decription\"\n                        id=\"decription\"\n                        placeholder=\"{{ __('crud.contentCategories.inputs.decription.placeholder') }}\"\n                    />\n                    <x-ui.input.error for=\"form.decription\" />\n                </div>\n\n                <div class=\"w-full\">\n                    <x-ui.label for=\"status\"\n                        >{{ __('crud.contentCategories.inputs.status.label')\n                        }}</x-ui.label\n                    >\n                    <x-ui.input.select\n                        wire:model=\"form.status\"\n                        class=\"w-full\"\n                        id=\"status\"\n                        name=\"status\"\n                    >\n                        <option value=\"\">Select</option>\n                        <option value=\"Active\">Active</option>\n                        <option value=\"Inactive\">Inactive</option>\n                    </x-ui.input.select>\n                    <x-ui.input.error for=\"status\" />\n                </div>\n            </div>\n\n            <div class=\"flex justify-between mt-4 border-t border-gray-50 p-4\">\n                <div>\n                    <!-- Other buttons here -->\n                </div>\n                <div>\n                    <x-ui.button type=\"submit\">Save</x-ui.button>\n                </div>\n            </div>\n        </form>\n    </div>\n</div>\n"
            },
            "item_114": {
                "path": "app/Livewire/Dashboard",
                "name": "ContentCategoryCreate.php",
                "fullPath": "app/Livewire/Dashboard/ContentCategoryCreate.php",
                "template": "crud/views/livewire/CreateComponent.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 114,
                "createdAt": "2025-01-24 16:51:34",
                "updatedAt": "2025-01-27 14:50:48",
                "content": "<?php\n\nnamespace App\\Livewire\\Dashboard;\n\nuse Livewire\\Component;\nuse Livewire\\WithFileUploads;\nuse Illuminate\\Support\\Collection;\nuse App\\Livewire\\Dashboard\\ContentCategories\\Forms\\CreateForm;\n\nclass ContentCategoryCreate extends Component\n{\n    use WithFileUploads;\n\n    public CreateForm $form;\n\n    public function mount()\n    {\n    }\n\n    public function save()\n    {\n        $this->authorize('create', ContentCategory::class);\n\n        $this->validate();\n\n        $contentCategory = $this->form->save();\n\n        return redirect()->route(\n            'dashboard.content-categories.edit',\n            $contentCategory\n        );\n    }\n\n    public function render()\n    {\n        return view('livewire.dashboard.content-categories.create', []);\n    }\n}\n"
            },
            "item_115": {
                "path": "resources/views/livewire/dashboard/content-categories",
                "name": "edit.blade.php",
                "fullPath": "resources/views/livewire/dashboard/content-categories/edit.blade.php",
                "template": "crud/views/livewire/EditView.vemtl",
                "projectId": 1,
                "type": "blade",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 115,
                "createdAt": "2025-01-24 16:51:34",
                "updatedAt": "2025-01-27 14:50:48",
                "content": "<div class=\"max-w-7xl mx-auto py-10 sm:px-6 lg:px-8 space-y-4\">\n    <x-ui.breadcrumbs>\n        <x-ui.breadcrumbs.link href=\"/dashboard\"\n            >Dashboard</x-ui.breadcrumbs.link\n        >\n        <x-ui.breadcrumbs.separator />\n        <x-ui.breadcrumbs.link\n            href=\"{{ route('dashboard.content-categories.index') }}\"\n            >{{ __('crud.contentCategories.collectionTitle')\n            }}</x-ui.breadcrumbs.link\n        >\n        <x-ui.breadcrumbs.separator />\n        <x-ui.breadcrumbs.link active\n            >Edit {{ __('crud.contentCategories.itemTitle')\n            }}</x-ui.breadcrumbs.link\n        >\n    </x-ui.breadcrumbs>\n\n    <x-ui.toast on=\"saved\"> ContentCategory saved successfully. </x-ui.toast>\n\n    <div class=\"w-full text-gray-500 text-lg font-semibold py-4 uppercase\">\n        <h1>Edit {{ __('crud.contentCategories.itemTitle') }}</h1>\n    </div>\n\n    <div class=\"overflow-hidden border rounded-lg bg-white\">\n        <form class=\"w-full mb-0\" wire:submit.prevent=\"save\">\n            <div class=\"p-6 space-y-3\">\n                <div class=\"w-full\">\n                    <x-ui.label for=\"name\"\n                        >{{ __('crud.contentCategories.inputs.name.label')\n                        }}</x-ui.label\n                    >\n                    <x-ui.input.text\n                        class=\"w-full\"\n                        wire:model=\"form.name\"\n                        name=\"name\"\n                        id=\"name\"\n                        placeholder=\"{{ __('crud.contentCategories.inputs.name.placeholder') }}\"\n                    />\n                    <x-ui.input.error for=\"form.name\" />\n                </div>\n\n                <div class=\"w-full\">\n                    <x-ui.label for=\"decription\"\n                        >{{ __('crud.contentCategories.inputs.decription.label')\n                        }}</x-ui.label\n                    >\n                    <x-ui.input.textarea\n                        class=\"w-full\"\n                        wire:model=\"form.decription\"\n                        rows=\"6\"\n                        name=\"decription\"\n                        id=\"decription\"\n                        placeholder=\"{{ __('crud.contentCategories.inputs.decription.placeholder') }}\"\n                    />\n                    <x-ui.input.error for=\"form.decription\" />\n                </div>\n\n                <div class=\"w-full\">\n                    <x-ui.label for=\"status\"\n                        >{{ __('crud.contentCategories.inputs.status.label')\n                        }}</x-ui.label\n                    >\n                    <x-ui.input.select\n                        wire:model=\"form.status\"\n                        class=\"w-full\"\n                        id=\"status\"\n                        name=\"status\"\n                    >\n                        <option value=\"\">Select</option>\n                        <option value=\"Active\">Active</option>\n                        <option value=\"Inactive\">Inactive</option>\n                    </x-ui.input.select>\n                    <x-ui.input.error for=\"status\" />\n                </div>\n            </div>\n\n            <div class=\"flex justify-between mt-4 border-t border-gray-50 p-4\">\n                <div>\n                    <!-- Other buttons here -->\n                </div>\n                <div>\n                    <x-ui.button type=\"submit\">Save</x-ui.button>\n                </div>\n            </div>\n        </form>\n    </div>\n</div>\n"
            },
            "item_116": {
                "path": "app/Livewire/Dashboard",
                "name": "ContentCategoryEdit.php",
                "fullPath": "app/Livewire/Dashboard/ContentCategoryEdit.php",
                "template": "crud/views/livewire/EditComponent.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 116,
                "createdAt": "2025-01-24 16:51:34",
                "updatedAt": "2025-01-27 14:50:48",
                "content": "<?php\n\nnamespace App\\Livewire\\Dashboard;\n\nuse Livewire\\Component;\nuse App\\Models\\ContentCategory;\nuse Illuminate\\Support\\Collection;\nuse App\\Livewire\\Dashboard\\ContentCategories\\Forms\\UpdateForm;\n\nclass ContentCategoryEdit extends Component\n{\n    public ?ContentCategory $contentCategory = null;\n\n    public UpdateForm $form;\n\n    public function mount(ContentCategory $contentCategory)\n    {\n        $this->authorize('view-any', ContentCategory::class);\n\n        $this->contentCategory = $contentCategory;\n\n        $this->form->setContentCategory($contentCategory);\n    }\n\n    public function save()\n    {\n        $this->authorize('update', $this->contentCategory);\n\n        $this->validate();\n\n        $this->form->save();\n\n        $this->dispatch('saved');\n    }\n\n    public function render()\n    {\n        return view('livewire.dashboard.content-categories.edit', []);\n    }\n}\n"
            },
            "item_117": {
                "path": "app/Livewire/Dashboard/ContentCategories/Forms",
                "name": "CreateForm.php",
                "fullPath": "app/Livewire/Dashboard/ContentCategories/Forms/CreateForm.php",
                "template": "crud/views/livewire/CreateFormComponent.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 117,
                "createdAt": "2025-01-24 16:51:34",
                "updatedAt": "2025-01-27 14:50:48",
                "content": "<?php\n\nnamespace App\\Livewire\\Dashboard\\ContentCategories\\Forms;\n\nuse Livewire\\Form;\nuse Livewire\\Attributes\\Rule;\nuse App\\Models\\ContentCategory;\n\nclass CreateForm extends Form\n{\n    #[Rule('required|string')]\n    public $name = '';\n\n    #[Rule('required|string')]\n    public $decription = '';\n\n    #[Rule('required')]\n    public $status = '';\n\n    public function save()\n    {\n        $this->validate();\n\n        $contentCategory = ContentCategory::create($this->except([]));\n\n        $this->reset();\n\n        return $contentCategory;\n    }\n}\n"
            },
            "item_118": {
                "path": "app/Livewire/Dashboard/ContentCategories/Forms",
                "name": "UpdateForm.php",
                "fullPath": "app/Livewire/Dashboard/ContentCategories/Forms/UpdateForm.php",
                "template": "crud/views/livewire/UpdateFormComponent.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 118,
                "createdAt": "2025-01-24 16:51:34",
                "updatedAt": "2025-01-27 14:50:48",
                "content": "<?php\n\nnamespace App\\Livewire\\Dashboard\\ContentCategories\\Forms;\n\nuse Livewire\\Form;\nuse Illuminate\\Validation\\Rule;\nuse App\\Models\\ContentCategory;\n\nclass UpdateForm extends Form\n{\n    public ?ContentCategory $contentCategory;\n\n    public $name = '';\n\n    public $decription = '';\n\n    public $status = '';\n\n    public function rules(): array\n    {\n        return [\n            'name' => ['required', 'string'],\n            'decription' => ['required', 'string'],\n            'status' => ['required'],\n        ];\n    }\n\n    public function setContentCategory(ContentCategory $contentCategory)\n    {\n        $this->contentCategory = $contentCategory;\n\n        $this->name = $contentCategory->name;\n        $this->decription = $contentCategory->decription;\n        $this->status = $contentCategory->status;\n    }\n\n    public function save()\n    {\n        $this->validate();\n\n        $this->contentCategory->update($this->except(['contentCategory']));\n    }\n}\n"
            },
            "item_141": {
                "path": "database/factories",
                "name": "InfluencerFactory.php",
                "fullPath": "database/factories/InfluencerFactory.php",
                "template": "database/Factory.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 141,
                "createdAt": "2025-01-27 14:50:46",
                "updatedAt": "2025-01-27 14:50:48",
                "content": "<?php\n\nnamespace Database\\Factories;\n\nuse App\\Models\\Influencer;\nuse Illuminate\\Support\\Str;\nuse Illuminate\\Database\\Eloquent\\Factories\\Factory;\n\nclass InfluencerFactory extends Factory\n{\n    /**\n     * The name of the factory's corresponding model.\n     *\n     * @var string\n     */\n    protected $model = Influencer::class;\n\n    /**\n     * Define the model's default state.\n     *\n     * @return array<string, mixed>\n     */\n    public function definition(): array\n    {\n        return [\n            'name' => fake()->name(),\n            'bio' => fake()->sentence(15),\n            'lat' => fake()->word(),\n            'long' => fake()->word(),\n            'address' => fake()->address(),\n            'image' => fake()->word(),\n        ];\n    }\n}\n"
            },
            "item_142": {
                "path": "database/seeders",
                "name": "InfluencerSeeder.php",
                "fullPath": "database/seeders/InfluencerSeeder.php",
                "template": "database/Seeder.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 142,
                "createdAt": "2025-01-27 14:50:46",
                "updatedAt": "2025-01-27 14:50:48",
                "content": "<?php\n\nnamespace Database\\Seeders;\n\nuse App\\Models\\Influencer;\nuse Illuminate\\Database\\Seeder;\n\nclass InfluencerSeeder extends Seeder\n{\n    /**\n     * Run the database seeds.\n     */\n    public function run(): void\n    {\n        Influencer::factory()\n            ->count(5)\n            ->create();\n    }\n}\n"
            },
            "item_143": {
                "path": "app/Policies",
                "name": "InfluencerPolicy.php",
                "fullPath": "app/Policies/InfluencerPolicy.php",
                "template": "models/Policy.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 143,
                "createdAt": "2025-01-27 14:50:46",
                "updatedAt": "2025-01-27 14:50:48",
                "content": "<?php\n\nnamespace App\\Policies;\n\nuse App\\Models\\User;\nuse App\\Models\\Influencer;\n\nclass InfluencerPolicy\n{\n    /**\n     * Determine whether the user can view any models.\n     */\n    public function viewAny(User $user): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can view the model.\n     */\n    public function view(User $user, Influencer $model): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can create models.\n     */\n    public function create(User $user): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can update the model.\n     */\n    public function update(User $user, Influencer $model): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can delete the model.\n     */\n    public function delete(User $user, Influencer $model): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can restore the model.\n     */\n    public function restore(User $user, Influencer $model): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can permanently delete the model.\n     */\n    public function forceDelete(User $user, Influencer $model): bool\n    {\n        return true;\n    }\n}\n"
            },
            "item_144": {
                "path": "resources/views/livewire/dashboard/influencers",
                "name": "index.blade.php",
                "fullPath": "resources/views/livewire/dashboard/influencers/index.blade.php",
                "template": "crud/views/livewire/IndexView.vemtl",
                "projectId": 1,
                "type": "blade",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 144,
                "createdAt": "2025-01-27 14:50:46",
                "updatedAt": "2025-01-27 14:50:49",
                "content": "<div class=\"max-w-7xl mx-auto py-10 sm:px-6 lg:px-8 space-y-4\">\n    <x-ui.breadcrumbs>\n        <x-ui.breadcrumbs.link href=\"/dashboard\"\n            >Dashboard</x-ui.breadcrumbs.link\n        >\n        <x-ui.breadcrumbs.separator />\n        <x-ui.breadcrumbs.link active\n            >{{ __('crud.influencers.collectionTitle') }}</x-ui.breadcrumbs.link\n        >\n    </x-ui.breadcrumbs>\n\n    <div class=\"flex justify-between align-top py-4\">\n        <x-ui.input\n            wire:model.live=\"search\"\n            type=\"text\"\n            placeholder=\"Search {{ __('crud.influencers.collectionTitle') }}...\"\n        />\n\n        @can('create', App\\Models\\Influencer::class)\n        <a wire:navigate href=\"{{ route('dashboard.influencers.create') }}\">\n            <x-ui.button>New</x-ui.button>\n        </a>\n        @endcan\n    </div>\n\n    {{-- Delete Modal --}}\n    <x-ui.modal.confirm wire:model=\"confirmingDeletion\">\n        <x-slot name=\"title\"> {{ __('Delete') }} </x-slot>\n\n        <x-slot name=\"content\"> {{ __('Are you sure?') }} </x-slot>\n\n        <x-slot name=\"footer\">\n            <x-ui.button\n                wire:click=\"$toggle('confirmingDeletion')\"\n                wire:loading.attr=\"disabled\"\n            >\n                {{ __('Cancel') }}\n            </x-ui.button>\n\n            <x-ui.button.danger\n                class=\"ml-3\"\n                wire:click=\"delete({{ $deletingInfluencer }})\"\n                wire:loading.attr=\"disabled\"\n            >\n                {{ __('Delete') }}\n            </x-ui.button.danger>\n        </x-slot>\n    </x-ui.modal.confirm>\n\n    {{-- Index Table --}}\n    <x-ui.container.table>\n        <x-ui.table>\n            <x-slot name=\"head\">\n                <x-ui.table.header for-crud wire:click=\"sortBy('name')\"\n                    >{{ __('crud.influencers.inputs.name.label')\n                    }}</x-ui.table.header\n                >\n                <x-ui.table.header for-crud wire:click=\"sortBy('bio')\"\n                    >{{ __('crud.influencers.inputs.bio.label')\n                    }}</x-ui.table.header\n                >\n                <x-ui.table.header for-crud wire:click=\"sortBy('lat')\"\n                    >{{ __('crud.influencers.inputs.lat.label')\n                    }}</x-ui.table.header\n                >\n                <x-ui.table.header for-crud wire:click=\"sortBy('long')\"\n                    >{{ __('crud.influencers.inputs.long.label')\n                    }}</x-ui.table.header\n                >\n                <x-ui.table.header for-crud wire:click=\"sortBy('address')\"\n                    >{{ __('crud.influencers.inputs.address.label')\n                    }}</x-ui.table.header\n                >\n                <x-ui.table.header for-crud wire:click=\"sortBy('image')\"\n                    >{{ __('crud.influencers.inputs.image.label')\n                    }}</x-ui.table.header\n                >\n                <x-ui.table.action-header>Actions</x-ui.table.action-header>\n            </x-slot>\n\n            <x-slot name=\"body\">\n                @forelse ($influencers as $influencer)\n                <x-ui.table.row wire:loading.class.delay=\"opacity-75\">\n                    <x-ui.table.column for-crud\n                        >{{ $influencer->name }}</x-ui.table.column\n                    >\n                    <x-ui.table.column for-crud\n                        >{{ $influencer->bio }}</x-ui.table.column\n                    >\n                    <x-ui.table.column for-crud\n                        >{{ $influencer->lat }}</x-ui.table.column\n                    >\n                    <x-ui.table.column for-crud\n                        >{{ $influencer->long }}</x-ui.table.column\n                    >\n                    <x-ui.table.column for-crud\n                        >{{ $influencer->address }}</x-ui.table.column\n                    >\n                    <x-ui.table.column for-crud>\n                        <x-ui.table.image\n                            url=\"{{ asset('storage/' . $influencer->image) }}\"\n                            alt=\"{{ $influencer->image }}\"\n                        />\n                    </x-ui.table.column>\n                    <x-ui.table.action-column>\n                        @can('update', $influencer)\n                        <x-ui.action\n                            wire:navigate\n                            href=\"{{ route('dashboard.influencers.edit', $influencer) }}\"\n                            >Edit</x-ui.action\n                        >\n                        @endcan @can('delete', $influencer)\n                        <x-ui.action.danger\n                            wire:click=\"confirmDeletion({{ $influencer->id }})\"\n                            >Delete</x-ui.action.danger\n                        >\n                        @endcan\n                    </x-ui.table.action-column>\n                </x-ui.table.row>\n                @empty\n                <x-ui.table.row>\n                    <x-ui.table.column colspan=\"7\"\n                        >No {{ __('crud.influencers.collectionTitle') }} found.</x-ui.table.column\n                    >\n                </x-ui.table.row>\n                @endforelse\n            </x-slot>\n        </x-ui.table>\n\n        <div class=\"mt-2\">{{ $influencers->links() }}</div>\n    </x-ui.container.table>\n</div>\n"
            },
            "item_145": {
                "path": "app/Livewire/Dashboard",
                "name": "InfluencerIndex.php",
                "fullPath": "app/Livewire/Dashboard/InfluencerIndex.php",
                "template": "crud/views/livewire/IndexComponent.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 145,
                "createdAt": "2025-01-27 14:50:46",
                "updatedAt": "2025-01-27 14:50:49",
                "content": "<?php\n\nnamespace App\\Livewire\\Dashboard;\n\nuse Livewire\\Component;\nuse App\\Models\\Influencer;\nuse Livewire\\WithPagination;\n\nclass InfluencerIndex extends Component\n{\n    use WithPagination;\n\n    public $search;\n    public $sortField = 'updated_at';\n    public $sortDirection = 'desc';\n\n    public $queryString = ['search', 'sortField', 'sortDirection'];\n\n    public $confirmingDeletion = false;\n    public $deletingInfluencer;\n\n    public function updatingSearch()\n    {\n        $this->resetPage();\n    }\n\n    public function confirmDeletion(string $id)\n    {\n        $this->deletingInfluencer = $id;\n\n        $this->confirmingDeletion = true;\n    }\n\n    public function delete(Influencer $influencer)\n    {\n        $influencer->delete();\n\n        $this->confirmingDeletion = false;\n    }\n\n    public function sortBy($field)\n    {\n        if ($this->sortField === $field) {\n            $this->sortDirection =\n                $this->sortDirection === 'asc' ? 'desc' : 'asc';\n        } else {\n            $this->sortDirection = 'asc';\n        }\n\n        $this->sortField = $field;\n    }\n\n    public function getRowsProperty()\n    {\n        return $this->rowsQuery->paginate(5);\n    }\n\n    public function getRowsQueryProperty()\n    {\n        return Influencer::query()\n            ->orderBy($this->sortField, $this->sortDirection)\n            ->where('name', 'like', \"%{$this->search}%\");\n    }\n\n    public function render()\n    {\n        return view('livewire.dashboard.influencers.index', [\n            'influencers' => $this->rows,\n        ]);\n    }\n}\n"
            },
            "item_146": {
                "path": "resources/views/livewire/dashboard/influencers",
                "name": "create.blade.php",
                "fullPath": "resources/views/livewire/dashboard/influencers/create.blade.php",
                "template": "crud/views/livewire/CreateView.vemtl",
                "projectId": 1,
                "type": "blade",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 146,
                "createdAt": "2025-01-27 14:50:46",
                "updatedAt": "2025-01-27 14:50:49",
                "content": "<div class=\"max-w-7xl mx-auto py-10 sm:px-6 lg:px-8 space-y-4\">\n    <x-ui.breadcrumbs>\n        <x-ui.breadcrumbs.link href=\"/dashboard\"\n            >Dashboard</x-ui.breadcrumbs.link\n        >\n        <x-ui.breadcrumbs.separator />\n        <x-ui.breadcrumbs.link href=\"{{ route('dashboard.influencers.index') }}\"\n            >{{ __('crud.influencers.collectionTitle') }}</x-ui.breadcrumbs.link\n        >\n        <x-ui.breadcrumbs.separator />\n        <x-ui.breadcrumbs.link active\n            >Create {{ __('crud.influencers.itemTitle')\n            }}</x-ui.breadcrumbs.link\n        >\n    </x-ui.breadcrumbs>\n\n    <div class=\"w-full text-gray-500 text-lg font-semibold py-4 uppercase\">\n        <h1>Create {{ __('crud.influencers.itemTitle') }}</h1>\n    </div>\n\n    <div class=\"overflow-hidden border rounded-lg bg-white\">\n        <form class=\"w-full mb-0\" wire:submit.prevent=\"save\">\n            <div class=\"p-6 space-y-3\">\n                <div class=\"w-full\">\n                    <x-ui.label for=\"name\"\n                        >{{ __('crud.influencers.inputs.name.label')\n                        }}</x-ui.label\n                    >\n                    <x-ui.input.text\n                        class=\"w-full\"\n                        wire:model=\"form.name\"\n                        name=\"name\"\n                        id=\"name\"\n                        placeholder=\"{{ __('crud.influencers.inputs.name.placeholder') }}\"\n                    />\n                    <x-ui.input.error for=\"form.name\" />\n                </div>\n\n                <div class=\"w-full\">\n                    <x-ui.label for=\"bio\"\n                        >{{ __('crud.influencers.inputs.bio.label')\n                        }}</x-ui.label\n                    >\n                    <x-ui.input.textarea\n                        class=\"w-full\"\n                        wire:model=\"form.bio\"\n                        rows=\"6\"\n                        name=\"bio\"\n                        id=\"bio\"\n                        placeholder=\"{{ __('crud.influencers.inputs.bio.placeholder') }}\"\n                    />\n                    <x-ui.input.error for=\"form.bio\" />\n                </div>\n\n                <div class=\"w-full\">\n                    <x-ui.label for=\"lat\"\n                        >{{ __('crud.influencers.inputs.lat.label')\n                        }}</x-ui.label\n                    >\n                    <x-ui.input.text\n                        class=\"w-full\"\n                        wire:model=\"form.lat\"\n                        name=\"lat\"\n                        id=\"lat\"\n                        placeholder=\"{{ __('crud.influencers.inputs.lat.placeholder') }}\"\n                    />\n                    <x-ui.input.error for=\"form.lat\" />\n                </div>\n\n                <div class=\"w-full\">\n                    <x-ui.label for=\"long\"\n                        >{{ __('crud.influencers.inputs.long.label')\n                        }}</x-ui.label\n                    >\n                    <x-ui.input.text\n                        class=\"w-full\"\n                        wire:model=\"form.long\"\n                        name=\"long\"\n                        id=\"long\"\n                        placeholder=\"{{ __('crud.influencers.inputs.long.placeholder') }}\"\n                    />\n                    <x-ui.input.error for=\"form.long\" />\n                </div>\n\n                <div class=\"w-full\">\n                    <x-ui.label for=\"address\"\n                        >{{ __('crud.influencers.inputs.address.label')\n                        }}</x-ui.label\n                    >\n                    <x-ui.input.text\n                        class=\"w-full\"\n                        wire:model=\"form.address\"\n                        name=\"address\"\n                        id=\"address\"\n                        placeholder=\"{{ __('crud.influencers.inputs.address.placeholder') }}\"\n                    />\n                    <x-ui.input.error for=\"form.address\" />\n                </div>\n\n                <div class=\"w-full\">\n                    <x-ui.label for=\"image\"\n                        >{{ __('crud.influencers.inputs.image.label')\n                        }}</x-ui.label\n                    >\n                    <x-ui.input.image\n                        :src=\"$form->newImage ? Storage::url($form->newImage) : Storage::url($form->image)\"\n                        wire:model=\"form.newImage\"\n                        x-on:removed=\"$form->deleteImage()\"\n                        class=\"w-full\"\n                        id=\"image\"\n                        name=\"image\"\n                    />\n                    <x-ui.input.error for=\"form.newImage\" />\n                </div>\n            </div>\n\n            <div class=\"flex justify-between mt-4 border-t border-gray-50 p-4\">\n                <div>\n                    <!-- Other buttons here -->\n                </div>\n                <div>\n                    <x-ui.button type=\"submit\">Save</x-ui.button>\n                </div>\n            </div>\n        </form>\n    </div>\n</div>\n"
            },
            "item_147": {
                "path": "app/Livewire/Dashboard",
                "name": "InfluencerCreate.php",
                "fullPath": "app/Livewire/Dashboard/InfluencerCreate.php",
                "template": "crud/views/livewire/CreateComponent.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 147,
                "createdAt": "2025-01-27 14:50:46",
                "updatedAt": "2025-01-27 14:50:49",
                "content": "<?php\n\nnamespace App\\Livewire\\Dashboard;\n\nuse Livewire\\Component;\nuse Livewire\\WithFileUploads;\nuse Illuminate\\Support\\Collection;\nuse App\\Livewire\\Dashboard\\Influencers\\Forms\\CreateForm;\n\nclass InfluencerCreate extends Component\n{\n    use WithFileUploads;\n\n    public CreateForm $form;\n\n    public function mount()\n    {\n    }\n\n    public function save()\n    {\n        $this->authorize('create', Influencer::class);\n\n        $this->validate();\n\n        $influencer = $this->form->save();\n\n        return redirect()->route('dashboard.influencers.edit', $influencer);\n    }\n\n    public function render()\n    {\n        return view('livewire.dashboard.influencers.create', []);\n    }\n}\n"
            },
            "item_148": {
                "path": "resources/views/livewire/dashboard/influencers",
                "name": "edit.blade.php",
                "fullPath": "resources/views/livewire/dashboard/influencers/edit.blade.php",
                "template": "crud/views/livewire/EditView.vemtl",
                "projectId": 1,
                "type": "blade",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 148,
                "createdAt": "2025-01-27 14:50:46",
                "updatedAt": "2025-01-27 14:50:49",
                "content": "<div class=\"max-w-7xl mx-auto py-10 sm:px-6 lg:px-8 space-y-4\">\n    <x-ui.breadcrumbs>\n        <x-ui.breadcrumbs.link href=\"/dashboard\"\n            >Dashboard</x-ui.breadcrumbs.link\n        >\n        <x-ui.breadcrumbs.separator />\n        <x-ui.breadcrumbs.link href=\"{{ route('dashboard.influencers.index') }}\"\n            >{{ __('crud.influencers.collectionTitle') }}</x-ui.breadcrumbs.link\n        >\n        <x-ui.breadcrumbs.separator />\n        <x-ui.breadcrumbs.link active\n            >Edit {{ __('crud.influencers.itemTitle') }}</x-ui.breadcrumbs.link\n        >\n    </x-ui.breadcrumbs>\n\n    <x-ui.toast on=\"saved\"> Influencer saved successfully. </x-ui.toast>\n\n    <div class=\"w-full text-gray-500 text-lg font-semibold py-4 uppercase\">\n        <h1>Edit {{ __('crud.influencers.itemTitle') }}</h1>\n    </div>\n\n    <div class=\"overflow-hidden border rounded-lg bg-white\">\n        <form class=\"w-full mb-0\" wire:submit.prevent=\"save\">\n            <div class=\"p-6 space-y-3\">\n                <div class=\"w-full\">\n                    <x-ui.label for=\"name\"\n                        >{{ __('crud.influencers.inputs.name.label')\n                        }}</x-ui.label\n                    >\n                    <x-ui.input.text\n                        class=\"w-full\"\n                        wire:model=\"form.name\"\n                        name=\"name\"\n                        id=\"name\"\n                        placeholder=\"{{ __('crud.influencers.inputs.name.placeholder') }}\"\n                    />\n                    <x-ui.input.error for=\"form.name\" />\n                </div>\n\n                <div class=\"w-full\">\n                    <x-ui.label for=\"bio\"\n                        >{{ __('crud.influencers.inputs.bio.label')\n                        }}</x-ui.label\n                    >\n                    <x-ui.input.textarea\n                        class=\"w-full\"\n                        wire:model=\"form.bio\"\n                        rows=\"6\"\n                        name=\"bio\"\n                        id=\"bio\"\n                        placeholder=\"{{ __('crud.influencers.inputs.bio.placeholder') }}\"\n                    />\n                    <x-ui.input.error for=\"form.bio\" />\n                </div>\n\n                <div class=\"w-full\">\n                    <x-ui.label for=\"lat\"\n                        >{{ __('crud.influencers.inputs.lat.label')\n                        }}</x-ui.label\n                    >\n                    <x-ui.input.text\n                        class=\"w-full\"\n                        wire:model=\"form.lat\"\n                        name=\"lat\"\n                        id=\"lat\"\n                        placeholder=\"{{ __('crud.influencers.inputs.lat.placeholder') }}\"\n                    />\n                    <x-ui.input.error for=\"form.lat\" />\n                </div>\n\n                <div class=\"w-full\">\n                    <x-ui.label for=\"long\"\n                        >{{ __('crud.influencers.inputs.long.label')\n                        }}</x-ui.label\n                    >\n                    <x-ui.input.text\n                        class=\"w-full\"\n                        wire:model=\"form.long\"\n                        name=\"long\"\n                        id=\"long\"\n                        placeholder=\"{{ __('crud.influencers.inputs.long.placeholder') }}\"\n                    />\n                    <x-ui.input.error for=\"form.long\" />\n                </div>\n\n                <div class=\"w-full\">\n                    <x-ui.label for=\"address\"\n                        >{{ __('crud.influencers.inputs.address.label')\n                        }}</x-ui.label\n                    >\n                    <x-ui.input.text\n                        class=\"w-full\"\n                        wire:model=\"form.address\"\n                        name=\"address\"\n                        id=\"address\"\n                        placeholder=\"{{ __('crud.influencers.inputs.address.placeholder') }}\"\n                    />\n                    <x-ui.input.error for=\"form.address\" />\n                </div>\n\n                <div class=\"w-full\">\n                    <x-ui.label for=\"image\"\n                        >{{ __('crud.influencers.inputs.image.label')\n                        }}</x-ui.label\n                    >\n                    <x-ui.input.image\n                        :src=\"$form->newImage ? Storage::url($form->newImage) : Storage::url($form->image)\"\n                        wire:model=\"form.newImage\"\n                        x-on:removed=\"$form->deleteImage()\"\n                        class=\"w-full\"\n                        id=\"image\"\n                        name=\"image\"\n                    />\n                    <x-ui.input.error for=\"form.newImage\" />\n                </div>\n            </div>\n\n            <div class=\"flex justify-between mt-4 border-t border-gray-50 p-4\">\n                <div>\n                    <!-- Other buttons here -->\n                </div>\n                <div>\n                    <x-ui.button type=\"submit\">Save</x-ui.button>\n                </div>\n            </div>\n        </form>\n    </div>\n</div>\n"
            },
            "item_149": {
                "path": "app/Livewire/Dashboard",
                "name": "InfluencerEdit.php",
                "fullPath": "app/Livewire/Dashboard/InfluencerEdit.php",
                "template": "crud/views/livewire/EditComponent.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 149,
                "createdAt": "2025-01-27 14:50:46",
                "updatedAt": "2025-01-27 14:50:49",
                "content": "<?php\n\nnamespace App\\Livewire\\Dashboard;\n\nuse Livewire\\Component;\nuse App\\Models\\Influencer;\nuse Illuminate\\Support\\Collection;\nuse App\\Livewire\\Dashboard\\Influencers\\Forms\\UpdateForm;\n\nclass InfluencerEdit extends Component\n{\n    public ?Influencer $influencer = null;\n\n    public UpdateForm $form;\n\n    public function mount(Influencer $influencer)\n    {\n        $this->authorize('view-any', Influencer::class);\n\n        $this->influencer = $influencer;\n\n        $this->form->setInfluencer($influencer);\n    }\n\n    public function save()\n    {\n        $this->authorize('update', $this->influencer);\n\n        $this->validate();\n\n        $this->form->save();\n\n        $this->dispatch('saved');\n    }\n\n    public function render()\n    {\n        return view('livewire.dashboard.influencers.edit', []);\n    }\n}\n"
            },
            "item_150": {
                "path": "app/Livewire/Dashboard/Influencers/Forms",
                "name": "CreateForm.php",
                "fullPath": "app/Livewire/Dashboard/Influencers/Forms/CreateForm.php",
                "template": "crud/views/livewire/CreateFormComponent.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 150,
                "createdAt": "2025-01-27 14:50:46",
                "updatedAt": "2025-01-27 14:50:49",
                "content": "<?php\n\nnamespace App\\Livewire\\Dashboard\\Influencers\\Forms;\n\nuse Livewire\\Form;\nuse App\\Models\\Influencer;\nuse Livewire\\Attributes\\Rule;\n\nclass CreateForm extends Form\n{\n    #[Rule('nullable|string')]\n    public $name = '';\n\n    #[Rule('nullable|string')]\n    public $bio = '';\n\n    #[Rule('nullable|string')]\n    public $lat = '';\n\n    #[Rule('nullable|string')]\n    public $long = '';\n\n    #[Rule('nullable|string')]\n    public $address = '';\n\n    #[Rule('nullable|image|max:1024')]\n    public $image = '';\n\n    public $newImage = null;\n\n    public function save()\n    {\n        $this->validate();\n\n        $this->processImage();\n\n        $influencer = Influencer::create($this->except(['newImage']));\n\n        $this->reset();\n\n        return $influencer;\n    }\n\n    public function processImage()\n    {\n        if (empty($this->newImage)) {\n            return;\n        }\n\n        $this->image = $this->newImage->store('influencers', 'public');\n    }\n\n    public function deleteImage()\n    {\n        $this->newImage = null;\n    }\n}\n"
            },
            "item_151": {
                "path": "app/Livewire/Dashboard/Influencers/Forms",
                "name": "UpdateForm.php",
                "fullPath": "app/Livewire/Dashboard/Influencers/Forms/UpdateForm.php",
                "template": "crud/views/livewire/UpdateFormComponent.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 151,
                "createdAt": "2025-01-27 14:50:46",
                "updatedAt": "2025-01-27 14:50:49",
                "content": "<?php\n\nnamespace App\\Livewire\\Dashboard\\Influencers\\Forms;\n\nuse Livewire\\Form;\nuse App\\Models\\Influencer;\nuse Illuminate\\Validation\\Rule;\n\nclass UpdateForm extends Form\n{\n    public ?Influencer $influencer;\n\n    public $name = '';\n\n    public $bio = '';\n\n    public $lat = '';\n\n    public $long = '';\n\n    public $address = '';\n\n    public $image = '';\n\n    public $newImage = null;\n\n    public function rules(): array\n    {\n        return [\n            'name' => ['nullable', 'string'],\n            'bio' => ['nullable', 'string'],\n            'lat' => ['nullable', 'string'],\n            'long' => ['nullable', 'string'],\n            'address' => ['nullable', 'string'],\n            'image' => ['nullable', 'image', 'max:1024'],\n        ];\n    }\n\n    public function setInfluencer(Influencer $influencer)\n    {\n        $this->influencer = $influencer;\n\n        $this->name = $influencer->name;\n        $this->bio = $influencer->bio;\n        $this->lat = $influencer->lat;\n        $this->long = $influencer->long;\n        $this->address = $influencer->address;\n        $this->image = $influencer->image;\n    }\n\n    public function save()\n    {\n        $this->validate();\n\n        $this->processImage();\n\n        $this->influencer->update($this->except(['influencer', 'newImage']));\n    }\n\n    public function processImage()\n    {\n        if (empty($this->newImage)) {\n            return;\n        }\n\n        $this->influencer->image = $this->newImage->store(\n            'influencers',\n            'public'\n        );\n    }\n\n    public function deleteImage()\n    {\n        $this->newImage = null;\n    }\n}\n"
            }
        },
        "cruds": {
            "item_1": {
                "type": "Livewire",
                "name": "Service",
                "plural": "Services",
                "sectionId": 1,
                "modelId": 2,
                "tableId": 9,
                "projectId": 1,
                "basePath": "Services",
                "settings": {
                    "itemName": "service",
                    "collectionName": "services",
                    "itemTitle": "crud.services.itemTitle",
                    "collectionTitle": "crud.services.collectionTitle"
                },
                "livewireNamespace": "App\\Livewire\\Dashboard",
                "livewireFormsNamespace": "App\\Livewire\\Dashboard\\Services\\Forms",
                "livewireIndexComponentName": "ServiceIndex",
                "livewireShowComponentName": "ServiceShow",
                "livewireCreateComponentName": "ServiceCreate",
                "livewireEditComponentName": "ServiceEdit",
                "defaultSearchColumnId": 53,
                "defaultSortColumnId": 57,
                "defaultSortDirection": "desc",
                "id": 1,
                "createdAt": "2025-01-24 12:25:21",
                "updatedAt": "2025-01-24 12:25:21"
            },
            "__tableData": {
                "count": 6,
                "lastPrimaryKey": 15,
                "index": {
                    "1": {
                        "hasMany": {
                            "crud_panels.crudId": [
                                1
                            ],
                            "inputs.crudId": [
                                1,
                                2,
                                3
                            ]
                        }
                    },
                    "2": {
                        "hasMany": {
                            "crud_panels.crudId": [
                                2
                            ],
                            "inputs.crudId": [
                                4,
                                5,
                                6,
                                7,
                                8,
                                9
                            ]
                        }
                    },
                    "7": {
                        "hasMany": {
                            "crud_panels.crudId": [
                                7
                            ],
                            "inputs.crudId": [
                                33,
                                34,
                                35,
                                36,
                                37,
                                38
                            ]
                        }
                    },
                    "8": {
                        "hasMany": {
                            "crud_panels.crudId": [
                                8
                            ],
                            "inputs.crudId": [
                                39,
                                40,
                                41,
                                42,
                                43
                            ]
                        }
                    },
                    "9": {
                        "hasMany": {
                            "crud_panels.crudId": [
                                9
                            ],
                            "inputs.crudId": [
                                44,
                                45,
                                46
                            ]
                        }
                    },
                    "15": {
                        "hasMany": {
                            "crud_panels.crudId": [
                                15
                            ],
                            "inputs.crudId": [
                                74,
                                75,
                                76,
                                77,
                                78,
                                79
                            ]
                        }
                    }
                },
                "additionalIndexes": {},
                "items": [],
                "relations": []
            },
            "item_2": {
                "type": "Livewire",
                "name": "SubService",
                "plural": "SubServices",
                "sectionId": 1,
                "modelId": 3,
                "tableId": 10,
                "projectId": 1,
                "basePath": "Sub Services",
                "settings": {
                    "itemName": "subService",
                    "collectionName": "subServices",
                    "itemTitle": "crud.subServices.itemTitle",
                    "collectionTitle": "crud.subServices.collectionTitle"
                },
                "livewireNamespace": "App\\Livewire\\Dashboard",
                "livewireFormsNamespace": "App\\Livewire\\Dashboard\\SubServices\\Forms",
                "livewireIndexComponentName": "SubServiceIndex",
                "livewireShowComponentName": "SubServiceShow",
                "livewireCreateComponentName": "SubServiceCreate",
                "livewireEditComponentName": "SubServiceEdit",
                "defaultSearchColumnId": 62,
                "defaultSortColumnId": 60,
                "defaultSortDirection": "desc",
                "id": 2,
                "createdAt": "2025-01-24 13:00:08",
                "updatedAt": "2025-01-24 13:00:08"
            },
            "item_7": {
                "type": "Livewire",
                "name": "SubServiceTemplate",
                "plural": "SubServiceTemplates",
                "sectionId": 1,
                "modelId": 11,
                "tableId": 15,
                "projectId": 1,
                "basePath": "Sub Service Templates",
                "settings": {
                    "itemName": "subServiceTemplate",
                    "collectionName": "subServiceTemplates",
                    "itemTitle": "crud.subServiceTemplates.itemTitle",
                    "collectionTitle": "crud.subServiceTemplates.collectionTitle"
                },
                "livewireNamespace": "App\\Livewire\\Dashboard",
                "livewireFormsNamespace": "App\\Livewire\\Dashboard\\SubServiceTemplates\\Forms",
                "livewireIndexComponentName": "SubServiceTemplateIndex",
                "livewireShowComponentName": "SubServiceTemplateShow",
                "livewireCreateComponentName": "SubServiceTemplateCreate",
                "livewireEditComponentName": "SubServiceTemplateEdit",
                "defaultSearchColumnId": 111,
                "defaultSortColumnId": 109,
                "defaultSortDirection": "desc",
                "id": 7,
                "createdAt": "2025-01-24 15:54:43",
                "updatedAt": "2025-01-24 15:54:43"
            },
            "item_8": {
                "type": "Livewire",
                "name": "DeliveryDays",
                "plural": "AllDeliveryDays",
                "sectionId": 1,
                "modelId": 12,
                "tableId": 16,
                "projectId": 1,
                "basePath": "All Delivery Days",
                "settings": {
                    "itemName": "deliveryDays",
                    "collectionName": "allDeliveryDays",
                    "itemTitle": "crud.allDeliveryDays.itemTitle",
                    "collectionTitle": "crud.allDeliveryDays.collectionTitle"
                },
                "livewireNamespace": "App\\Livewire\\Dashboard",
                "livewireFormsNamespace": "App\\Livewire\\Dashboard\\AllDeliveryDays\\Forms",
                "livewireIndexComponentName": "DeliveryDaysIndex",
                "livewireShowComponentName": "DeliveryDaysShow",
                "livewireCreateComponentName": "DeliveryDaysCreate",
                "livewireEditComponentName": "DeliveryDaysEdit",
                "defaultSearchColumnId": 118,
                "defaultSortColumnId": 123,
                "defaultSortDirection": "desc",
                "id": 8,
                "createdAt": "2025-01-24 15:55:19",
                "updatedAt": "2025-01-24 15:55:19"
            },
            "item_9": {
                "type": "Livewire",
                "name": "ContentCategory",
                "plural": "ContentCategories",
                "sectionId": 1,
                "modelId": 13,
                "tableId": 17,
                "projectId": 1,
                "basePath": "Content Categories",
                "settings": {
                    "itemName": "contentCategory",
                    "collectionName": "contentCategories",
                    "itemTitle": "crud.contentCategories.itemTitle",
                    "collectionTitle": "crud.contentCategories.collectionTitle"
                },
                "livewireNamespace": "App\\Livewire\\Dashboard",
                "livewireFormsNamespace": "App\\Livewire\\Dashboard\\ContentCategories\\Forms",
                "livewireIndexComponentName": "ContentCategoryIndex",
                "livewireShowComponentName": "ContentCategoryShow",
                "livewireCreateComponentName": "ContentCategoryCreate",
                "livewireEditComponentName": "ContentCategoryEdit",
                "defaultSearchColumnId": 127,
                "defaultSortColumnId": 126,
                "defaultSortDirection": "desc",
                "id": 9,
                "createdAt": "2025-01-24 16:51:11",
                "updatedAt": "2025-01-24 16:51:11"
            },
            "item_15": {
                "type": "Livewire",
                "name": "Influencer",
                "plural": "Influencers",
                "sectionId": 1,
                "modelId": 18,
                "tableId": 21,
                "projectId": 1,
                "basePath": "Influencers",
                "settings": {
                    "itemName": "influencer",
                    "collectionName": "influencers",
                    "itemTitle": "crud.influencers.itemTitle",
                    "collectionTitle": "crud.influencers.collectionTitle"
                },
                "livewireNamespace": "App\\Livewire\\Dashboard",
                "livewireFormsNamespace": "App\\Livewire\\Dashboard\\Influencers\\Forms",
                "livewireIndexComponentName": "InfluencerIndex",
                "livewireShowComponentName": "InfluencerShow",
                "livewireCreateComponentName": "InfluencerCreate",
                "livewireEditComponentName": "InfluencerEdit",
                "defaultSearchColumnId": 162,
                "defaultSortColumnId": 161,
                "defaultSortDirection": "desc",
                "id": 15,
                "createdAt": "2025-01-27 14:49:15",
                "updatedAt": "2025-01-27 14:49:15"
            }
        },
        "crud_panels": {
            "item_1": {
                "title": "Main",
                "crudId": 1,
                "order": 0,
                "id": 1,
                "createdAt": "2025-01-24 12:25:21",
                "updatedAt": "2025-01-24 12:25:21"
            },
            "__tableData": {
                "count": 6,
                "lastPrimaryKey": 15,
                "index": {
                    "1": {
                        "hasMany": {
                            "inputs.panelId": [
                                1,
                                2,
                                3
                            ]
                        }
                    },
                    "2": {
                        "hasMany": {
                            "inputs.panelId": [
                                4,
                                5,
                                6,
                                7,
                                8,
                                9
                            ]
                        }
                    },
                    "7": {
                        "hasMany": {
                            "inputs.panelId": [
                                33,
                                34,
                                35,
                                36,
                                37,
                                38
                            ]
                        }
                    },
                    "8": {
                        "hasMany": {
                            "inputs.panelId": [
                                39,
                                40,
                                41,
                                42,
                                43
                            ]
                        }
                    },
                    "9": {
                        "hasMany": {
                            "inputs.panelId": [
                                44,
                                45,
                                46
                            ]
                        }
                    },
                    "15": {
                        "hasMany": {
                            "inputs.panelId": [
                                74,
                                75,
                                76,
                                77,
                                78,
                                79
                            ]
                        }
                    }
                },
                "additionalIndexes": {},
                "items": [],
                "relations": []
            },
            "item_2": {
                "title": "Main",
                "crudId": 2,
                "order": 0,
                "id": 2,
                "createdAt": "2025-01-24 13:00:08",
                "updatedAt": "2025-01-24 13:00:08"
            },
            "item_7": {
                "title": "Main",
                "crudId": 7,
                "order": 0,
                "id": 7,
                "createdAt": "2025-01-24 15:54:43",
                "updatedAt": "2025-01-24 15:54:43"
            },
            "item_8": {
                "title": "Main",
                "crudId": 8,
                "order": 0,
                "id": 8,
                "createdAt": "2025-01-24 15:55:19",
                "updatedAt": "2025-01-24 15:55:19"
            },
            "item_9": {
                "title": "Main",
                "crudId": 9,
                "order": 0,
                "id": 9,
                "createdAt": "2025-01-24 16:51:11",
                "updatedAt": "2025-01-24 16:51:11"
            },
            "item_15": {
                "title": "Main",
                "crudId": 15,
                "order": 0,
                "id": 15,
                "createdAt": "2025-01-27 14:49:15",
                "updatedAt": "2025-01-27 14:49:15"
            }
        },
        "inputs": {
            "item_1": {
                "crudId": 1,
                "columnId": 53,
                "name": "title",
                "label": "crud.services.inputs.title.label",
                "placeholder": "crud.services.inputs.title.placeholder",
                "readOnly": false,
                "required": true,
                "hidden": false,
                "defaultValue": "",
                "checked": false,
                "max": 0,
                "min": 0,
                "step": 0,
                "items": [],
                "showOnCreation": true,
                "showOnUpdate": true,
                "showOnDetails": true,
                "showOnIndex": true,
                "type": "text",
                "creationRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    },
                    {
                        "type": "textual",
                        "value": "string"
                    },
                    {
                        "type": "textual",
                        "value": "unique:services,title"
                    }
                ],
                "updateRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    },
                    {
                        "type": "textual",
                        "value": "string"
                    },
                    {
                        "type": "textual",
                        "value": "unique:services,title"
                    }
                ],
                "panelId": 1,
                "id": 1,
                "createdAt": "2025-01-24 12:25:21",
                "updatedAt": "2025-01-24 12:25:58"
            },
            "__tableData": {
                "count": 29,
                "lastPrimaryKey": 79,
                "index": {
                    "1": {
                        "hasMany": {}
                    },
                    "2": {
                        "hasMany": {}
                    },
                    "3": {
                        "hasMany": {}
                    },
                    "4": {
                        "hasMany": {}
                    },
                    "5": {
                        "hasMany": {}
                    },
                    "6": {
                        "hasMany": {}
                    },
                    "7": {
                        "hasMany": {}
                    },
                    "8": {
                        "hasMany": {}
                    },
                    "9": {
                        "hasMany": {}
                    },
                    "33": {
                        "hasMany": {}
                    },
                    "34": {
                        "hasMany": {}
                    },
                    "35": {
                        "hasMany": {}
                    },
                    "36": {
                        "hasMany": {}
                    },
                    "37": {
                        "hasMany": {}
                    },
                    "38": {
                        "hasMany": {}
                    },
                    "39": {
                        "hasMany": {}
                    },
                    "40": {
                        "hasMany": {}
                    },
                    "41": {
                        "hasMany": {}
                    },
                    "42": {
                        "hasMany": {}
                    },
                    "43": {
                        "hasMany": {}
                    },
                    "44": {
                        "hasMany": {}
                    },
                    "45": {
                        "hasMany": {}
                    },
                    "46": {
                        "hasMany": {}
                    },
                    "74": {
                        "hasMany": {}
                    },
                    "75": {
                        "hasMany": {}
                    },
                    "76": {
                        "hasMany": {}
                    },
                    "77": {
                        "hasMany": {}
                    },
                    "78": {
                        "hasMany": {}
                    },
                    "79": {
                        "hasMany": {}
                    }
                },
                "additionalIndexes": {},
                "items": [],
                "relations": []
            },
            "item_2": {
                "crudId": 1,
                "columnId": 54,
                "name": "description",
                "label": "crud.services.inputs.description.label",
                "placeholder": "crud.services.inputs.description.placeholder",
                "readOnly": false,
                "required": false,
                "hidden": false,
                "defaultValue": "",
                "checked": false,
                "max": 0,
                "min": 0,
                "step": 0,
                "items": [],
                "showOnCreation": true,
                "showOnUpdate": true,
                "showOnDetails": true,
                "showOnIndex": true,
                "type": "textarea",
                "creationRules": [
                    {
                        "type": "textual",
                        "value": "nullable"
                    },
                    {
                        "type": "textual",
                        "value": "string"
                    }
                ],
                "updateRules": [
                    {
                        "type": "textual",
                        "value": "nullable"
                    },
                    {
                        "type": "textual",
                        "value": "string"
                    }
                ],
                "panelId": 1,
                "id": 2,
                "createdAt": "2025-01-24 12:25:21",
                "updatedAt": "2025-01-24 12:25:21"
            },
            "item_3": {
                "crudId": 1,
                "columnId": 55,
                "name": "image",
                "label": "crud.services.inputs.image.label",
                "placeholder": "crud.services.inputs.image.placeholder",
                "readOnly": false,
                "required": false,
                "hidden": false,
                "defaultValue": "",
                "checked": false,
                "max": 0,
                "min": 0,
                "step": 0,
                "items": [],
                "showOnCreation": true,
                "showOnUpdate": true,
                "showOnDetails": true,
                "showOnIndex": true,
                "type": "image",
                "creationRules": [
                    {
                        "type": "textual",
                        "value": "nullable"
                    },
                    {
                        "type": "textual",
                        "value": "image"
                    },
                    {
                        "type": "textual",
                        "value": "max:1024"
                    }
                ],
                "updateRules": [
                    {
                        "type": "textual",
                        "value": "nullable"
                    },
                    {
                        "type": "textual",
                        "value": "image"
                    },
                    {
                        "type": "textual",
                        "value": "max:1024"
                    }
                ],
                "panelId": 1,
                "id": 3,
                "createdAt": "2025-01-24 12:25:21",
                "updatedAt": "2025-01-24 12:25:21"
            },
            "item_4": {
                "crudId": 2,
                "columnId": 61,
                "name": "service_id",
                "label": "crud.subServices.inputs.service_id.label",
                "placeholder": "crud.subServices.inputs.service_id.placeholder",
                "readOnly": false,
                "required": true,
                "hidden": false,
                "defaultValue": "",
                "checked": false,
                "max": 0,
                "min": 0,
                "step": 0,
                "items": [],
                "showOnCreation": true,
                "showOnUpdate": true,
                "showOnDetails": true,
                "showOnIndex": true,
                "type": "belongsTo",
                "relationshipId": 2,
                "creationRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    }
                ],
                "updateRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    }
                ],
                "panelId": 2,
                "id": 4,
                "createdAt": "2025-01-24 13:00:08",
                "updatedAt": "2025-01-24 13:01:22",
                "order": 0
            },
            "item_5": {
                "crudId": 2,
                "columnId": 62,
                "name": "name",
                "label": "crud.subServices.inputs.name.label",
                "placeholder": "crud.subServices.inputs.name.placeholder",
                "readOnly": false,
                "required": true,
                "hidden": false,
                "defaultValue": "",
                "checked": false,
                "max": 0,
                "min": 0,
                "step": 0,
                "items": [],
                "showOnCreation": true,
                "showOnUpdate": true,
                "showOnDetails": true,
                "showOnIndex": true,
                "type": "text",
                "creationRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    },
                    {
                        "type": "textual",
                        "value": "string"
                    }
                ],
                "updateRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    },
                    {
                        "type": "textual",
                        "value": "string"
                    }
                ],
                "panelId": 2,
                "id": 5,
                "createdAt": "2025-01-24 13:00:08",
                "updatedAt": "2025-01-24 13:01:22",
                "order": 1
            },
            "item_6": {
                "crudId": 2,
                "columnId": 63,
                "name": "description",
                "label": "crud.subServices.inputs.description.label",
                "placeholder": "crud.subServices.inputs.description.placeholder",
                "readOnly": false,
                "required": false,
                "hidden": false,
                "defaultValue": "",
                "checked": false,
                "max": 0,
                "min": 0,
                "step": 0,
                "items": [],
                "showOnCreation": true,
                "showOnUpdate": true,
                "showOnDetails": true,
                "showOnIndex": true,
                "type": "text",
                "creationRules": [
                    {
                        "type": "textual",
                        "value": "nullable"
                    },
                    {
                        "type": "textual",
                        "value": "string"
                    }
                ],
                "updateRules": [
                    {
                        "type": "textual",
                        "value": "nullable"
                    },
                    {
                        "type": "textual",
                        "value": "string"
                    }
                ],
                "panelId": 2,
                "id": 6,
                "createdAt": "2025-01-24 13:00:08",
                "updatedAt": "2025-01-24 13:01:22",
                "order": 3
            },
            "item_7": {
                "crudId": 2,
                "columnId": 64,
                "name": "image",
                "label": "crud.subServices.inputs.image.label",
                "placeholder": "crud.subServices.inputs.image.placeholder",
                "readOnly": false,
                "required": false,
                "hidden": false,
                "defaultValue": "",
                "checked": false,
                "max": 0,
                "min": 0,
                "step": 0,
                "items": [],
                "showOnCreation": true,
                "showOnUpdate": true,
                "showOnDetails": true,
                "showOnIndex": true,
                "type": "image",
                "creationRules": [
                    {
                        "type": "textual",
                        "value": "nullable"
                    },
                    {
                        "type": "textual",
                        "value": "image"
                    },
                    {
                        "type": "textual",
                        "value": "max:1024"
                    }
                ],
                "updateRules": [
                    {
                        "type": "textual",
                        "value": "nullable"
                    },
                    {
                        "type": "textual",
                        "value": "image"
                    },
                    {
                        "type": "textual",
                        "value": "max:1024"
                    }
                ],
                "panelId": 2,
                "id": 7,
                "createdAt": "2025-01-24 13:00:08",
                "updatedAt": "2025-01-24 13:01:22",
                "order": 6
            },
            "item_8": {
                "crudId": 2,
                "columnId": 65,
                "name": "status",
                "label": "crud.subServices.inputs.status.label",
                "placeholder": "crud.subServices.inputs.status.placeholder",
                "readOnly": false,
                "required": false,
                "hidden": false,
                "defaultValue": "",
                "checked": false,
                "max": 0,
                "min": 0,
                "step": 0,
                "items": [
                    {
                        "label": "Active",
                        "value": "Active"
                    },
                    {
                        "label": "Inactive",
                        "value": "Inactive"
                    }
                ],
                "showOnCreation": true,
                "showOnUpdate": true,
                "showOnDetails": true,
                "showOnIndex": true,
                "type": "select",
                "creationRules": [
                    {
                        "type": "textual",
                        "value": "nullable"
                    }
                ],
                "updateRules": [
                    {
                        "type": "textual",
                        "value": "nullable"
                    }
                ],
                "panelId": 2,
                "id": 8,
                "createdAt": "2025-01-24 13:00:08",
                "updatedAt": "2025-01-24 13:01:22",
                "order": 4
            },
            "item_9": {
                "crudId": 2,
                "columnId": 66,
                "name": "price",
                "label": "crud.subServices.inputs.price.label",
                "placeholder": "crud.subServices.inputs.price.placeholder",
                "readOnly": false,
                "required": true,
                "hidden": false,
                "defaultValue": "",
                "checked": false,
                "max": 0,
                "min": 0,
                "step": 1,
                "items": [],
                "showOnCreation": true,
                "showOnUpdate": true,
                "showOnDetails": true,
                "showOnIndex": true,
                "type": "number",
                "creationRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    }
                ],
                "updateRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    }
                ],
                "panelId": 2,
                "id": 9,
                "createdAt": "2025-01-24 13:00:08",
                "updatedAt": "2025-01-24 13:01:22",
                "order": 5
            },
            "item_33": {
                "crudId": 7,
                "columnId": 110,
                "name": "sub_service_id",
                "label": "crud.subServiceTemplates.inputs.sub_service_id.label",
                "placeholder": "crud.subServiceTemplates.inputs.sub_service_id.placeholder",
                "readOnly": false,
                "required": true,
                "hidden": false,
                "defaultValue": "",
                "checked": false,
                "max": 0,
                "min": 0,
                "step": 0,
                "items": [],
                "showOnCreation": true,
                "showOnUpdate": true,
                "showOnDetails": true,
                "showOnIndex": true,
                "type": "belongsTo",
                "relationshipId": 13,
                "creationRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    }
                ],
                "updateRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    }
                ],
                "panelId": 7,
                "id": 33,
                "createdAt": "2025-01-24 15:54:43",
                "updatedAt": "2025-01-24 15:55:08",
                "order": 0
            },
            "item_34": {
                "crudId": 7,
                "columnId": 111,
                "name": "name",
                "label": "crud.subServiceTemplates.inputs.name.label",
                "placeholder": "crud.subServiceTemplates.inputs.name.placeholder",
                "readOnly": false,
                "required": true,
                "hidden": false,
                "defaultValue": "",
                "checked": false,
                "max": 0,
                "min": 0,
                "step": 0,
                "items": [],
                "showOnCreation": true,
                "showOnUpdate": true,
                "showOnDetails": true,
                "showOnIndex": true,
                "type": "text",
                "creationRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    },
                    {
                        "type": "textual",
                        "value": "string"
                    }
                ],
                "updateRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    },
                    {
                        "type": "textual",
                        "value": "string"
                    }
                ],
                "panelId": 7,
                "id": 34,
                "createdAt": "2025-01-24 15:54:43",
                "updatedAt": "2025-01-24 15:55:08",
                "order": 1
            },
            "item_35": {
                "crudId": 7,
                "columnId": 112,
                "name": "description",
                "label": "crud.subServiceTemplates.inputs.description.label",
                "placeholder": "crud.subServiceTemplates.inputs.description.placeholder",
                "readOnly": false,
                "required": false,
                "hidden": false,
                "defaultValue": "",
                "checked": false,
                "max": 0,
                "min": 0,
                "step": 0,
                "items": [],
                "showOnCreation": true,
                "showOnUpdate": true,
                "showOnDetails": true,
                "showOnIndex": true,
                "type": "textarea",
                "creationRules": [
                    {
                        "type": "textual",
                        "value": "nullable"
                    },
                    {
                        "type": "textual",
                        "value": "string"
                    }
                ],
                "updateRules": [
                    {
                        "type": "textual",
                        "value": "nullable"
                    },
                    {
                        "type": "textual",
                        "value": "string"
                    }
                ],
                "panelId": 7,
                "id": 35,
                "createdAt": "2025-01-24 15:54:43",
                "updatedAt": "2025-01-24 15:55:08",
                "order": 2
            },
            "item_36": {
                "crudId": 7,
                "columnId": 113,
                "name": "image",
                "label": "crud.subServiceTemplates.inputs.image.label",
                "placeholder": "crud.subServiceTemplates.inputs.image.placeholder",
                "readOnly": false,
                "required": false,
                "hidden": false,
                "defaultValue": "",
                "checked": false,
                "max": 0,
                "min": 0,
                "step": 0,
                "items": [],
                "showOnCreation": true,
                "showOnUpdate": true,
                "showOnDetails": true,
                "showOnIndex": true,
                "type": "image",
                "creationRules": [
                    {
                        "type": "textual",
                        "value": "nullable"
                    },
                    {
                        "type": "textual",
                        "value": "image"
                    },
                    {
                        "type": "textual",
                        "value": "max:1024"
                    }
                ],
                "updateRules": [
                    {
                        "type": "textual",
                        "value": "nullable"
                    },
                    {
                        "type": "textual",
                        "value": "image"
                    },
                    {
                        "type": "textual",
                        "value": "max:1024"
                    }
                ],
                "panelId": 7,
                "id": 36,
                "createdAt": "2025-01-24 15:54:43",
                "updatedAt": "2025-01-24 15:55:08",
                "order": 5
            },
            "item_37": {
                "crudId": 7,
                "columnId": 114,
                "name": "url",
                "label": "crud.subServiceTemplates.inputs.url.label",
                "placeholder": "crud.subServiceTemplates.inputs.url.placeholder",
                "readOnly": false,
                "required": false,
                "hidden": false,
                "defaultValue": "",
                "checked": false,
                "max": 0,
                "min": 0,
                "step": 0,
                "items": [],
                "showOnCreation": true,
                "showOnUpdate": true,
                "showOnDetails": true,
                "showOnIndex": true,
                "type": "url",
                "creationRules": [
                    {
                        "type": "textual",
                        "value": "nullable"
                    },
                    {
                        "type": "textual",
                        "value": "url"
                    }
                ],
                "updateRules": [
                    {
                        "type": "textual",
                        "value": "nullable"
                    },
                    {
                        "type": "textual",
                        "value": "url"
                    }
                ],
                "panelId": 7,
                "id": 37,
                "createdAt": "2025-01-24 15:54:43",
                "updatedAt": "2025-01-24 15:55:08",
                "order": 3
            },
            "item_38": {
                "crudId": 7,
                "columnId": 115,
                "name": "status",
                "label": "crud.subServiceTemplates.inputs.status.label",
                "placeholder": "crud.subServiceTemplates.inputs.status.placeholder",
                "readOnly": false,
                "required": true,
                "hidden": false,
                "defaultValue": "",
                "checked": false,
                "max": 0,
                "min": 0,
                "step": 0,
                "items": [
                    {
                        "label": "Active",
                        "value": "Active"
                    },
                    {
                        "label": "Inactive",
                        "value": "Inactive"
                    }
                ],
                "showOnCreation": true,
                "showOnUpdate": true,
                "showOnDetails": true,
                "showOnIndex": true,
                "type": "select",
                "creationRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    }
                ],
                "updateRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    }
                ],
                "panelId": 7,
                "id": 38,
                "createdAt": "2025-01-24 15:54:43",
                "updatedAt": "2025-01-24 15:55:08",
                "order": 4
            },
            "item_39": {
                "crudId": 8,
                "columnId": 117,
                "name": "sub_service_id",
                "label": "crud.allDeliveryDays.inputs.sub_service_id.label",
                "placeholder": "crud.allDeliveryDays.inputs.sub_service_id.placeholder",
                "readOnly": false,
                "required": true,
                "hidden": false,
                "defaultValue": "",
                "checked": false,
                "max": 0,
                "min": 0,
                "step": 0,
                "items": [],
                "showOnCreation": true,
                "showOnUpdate": true,
                "showOnDetails": true,
                "showOnIndex": true,
                "type": "belongsTo",
                "relationshipId": 14,
                "creationRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    }
                ],
                "updateRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    }
                ],
                "panelId": 8,
                "id": 39,
                "createdAt": "2025-01-24 15:55:19",
                "updatedAt": "2025-01-24 15:55:19"
            },
            "item_40": {
                "crudId": 8,
                "columnId": 118,
                "name": "name",
                "label": "crud.allDeliveryDays.inputs.name.label",
                "placeholder": "crud.allDeliveryDays.inputs.name.placeholder",
                "readOnly": false,
                "required": true,
                "hidden": false,
                "defaultValue": "",
                "checked": false,
                "max": 0,
                "min": 0,
                "step": 0,
                "items": [],
                "showOnCreation": true,
                "showOnUpdate": true,
                "showOnDetails": true,
                "showOnIndex": true,
                "type": "text",
                "creationRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    },
                    {
                        "type": "textual",
                        "value": "string"
                    }
                ],
                "updateRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    },
                    {
                        "type": "textual",
                        "value": "string"
                    }
                ],
                "panelId": 8,
                "id": 40,
                "createdAt": "2025-01-24 15:55:19",
                "updatedAt": "2025-01-24 15:55:19"
            },
            "item_41": {
                "crudId": 8,
                "columnId": 119,
                "name": "description",
                "label": "crud.allDeliveryDays.inputs.description.label",
                "placeholder": "crud.allDeliveryDays.inputs.description.placeholder",
                "readOnly": false,
                "required": false,
                "hidden": false,
                "defaultValue": "",
                "checked": false,
                "max": 0,
                "min": 0,
                "step": 0,
                "items": [],
                "showOnCreation": true,
                "showOnUpdate": true,
                "showOnDetails": true,
                "showOnIndex": true,
                "type": "textarea",
                "creationRules": [
                    {
                        "type": "textual",
                        "value": "nullable"
                    },
                    {
                        "type": "textual",
                        "value": "string"
                    }
                ],
                "updateRules": [
                    {
                        "type": "textual",
                        "value": "nullable"
                    },
                    {
                        "type": "textual",
                        "value": "string"
                    }
                ],
                "panelId": 8,
                "id": 41,
                "createdAt": "2025-01-24 15:55:19",
                "updatedAt": "2025-01-24 15:55:19"
            },
            "item_42": {
                "crudId": 8,
                "columnId": 120,
                "name": "price",
                "label": "crud.allDeliveryDays.inputs.price.label",
                "placeholder": "crud.allDeliveryDays.inputs.price.placeholder",
                "readOnly": false,
                "required": false,
                "hidden": false,
                "defaultValue": "",
                "checked": false,
                "max": 0,
                "min": 0,
                "step": 1,
                "items": [],
                "showOnCreation": true,
                "showOnUpdate": true,
                "showOnDetails": true,
                "showOnIndex": true,
                "type": "number",
                "creationRules": [
                    {
                        "type": "textual",
                        "value": "nullable"
                    }
                ],
                "updateRules": [
                    {
                        "type": "textual",
                        "value": "nullable"
                    }
                ],
                "panelId": 8,
                "id": 42,
                "createdAt": "2025-01-24 15:55:19",
                "updatedAt": "2025-01-24 15:55:19"
            },
            "item_43": {
                "crudId": 8,
                "columnId": 121,
                "name": "status",
                "label": "crud.allDeliveryDays.inputs.status.label",
                "placeholder": "crud.allDeliveryDays.inputs.status.placeholder",
                "readOnly": false,
                "required": true,
                "hidden": false,
                "defaultValue": "",
                "checked": false,
                "max": 0,
                "min": 0,
                "step": 0,
                "items": [
                    {
                        "label": "Active",
                        "value": "Active"
                    },
                    {
                        "label": "Inactive",
                        "value": "Inactive"
                    }
                ],
                "showOnCreation": true,
                "showOnUpdate": true,
                "showOnDetails": true,
                "showOnIndex": true,
                "type": "select",
                "creationRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    }
                ],
                "updateRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    }
                ],
                "panelId": 8,
                "id": 43,
                "createdAt": "2025-01-24 15:55:19",
                "updatedAt": "2025-01-24 15:55:19"
            },
            "item_44": {
                "crudId": 9,
                "columnId": 127,
                "name": "name",
                "label": "crud.contentCategories.inputs.name.label",
                "placeholder": "crud.contentCategories.inputs.name.placeholder",
                "readOnly": false,
                "required": true,
                "hidden": false,
                "defaultValue": "",
                "checked": false,
                "max": 0,
                "min": 0,
                "step": 0,
                "items": [],
                "showOnCreation": true,
                "showOnUpdate": true,
                "showOnDetails": true,
                "showOnIndex": true,
                "type": "text",
                "creationRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    },
                    {
                        "type": "textual",
                        "value": "string"
                    }
                ],
                "updateRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    },
                    {
                        "type": "textual",
                        "value": "string"
                    }
                ],
                "panelId": 9,
                "id": 44,
                "createdAt": "2025-01-24 16:51:11",
                "updatedAt": "2025-01-24 16:51:11"
            },
            "item_45": {
                "crudId": 9,
                "columnId": 128,
                "name": "decription",
                "label": "crud.contentCategories.inputs.decription.label",
                "placeholder": "crud.contentCategories.inputs.decription.placeholder",
                "readOnly": false,
                "required": true,
                "hidden": false,
                "defaultValue": "",
                "checked": false,
                "max": 0,
                "min": 0,
                "step": 0,
                "items": [],
                "showOnCreation": true,
                "showOnUpdate": true,
                "showOnDetails": true,
                "showOnIndex": true,
                "type": "textarea",
                "creationRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    },
                    {
                        "type": "textual",
                        "value": "string"
                    }
                ],
                "updateRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    },
                    {
                        "type": "textual",
                        "value": "string"
                    }
                ],
                "panelId": 9,
                "id": 45,
                "createdAt": "2025-01-24 16:51:11",
                "updatedAt": "2025-01-24 16:51:11"
            },
            "item_46": {
                "crudId": 9,
                "columnId": 129,
                "name": "status",
                "label": "crud.contentCategories.inputs.status.label",
                "placeholder": "crud.contentCategories.inputs.status.placeholder",
                "readOnly": false,
                "required": true,
                "hidden": false,
                "defaultValue": "",
                "checked": false,
                "max": 0,
                "min": 0,
                "step": 0,
                "items": [
                    {
                        "label": "Active",
                        "value": "Active"
                    },
                    {
                        "label": "Inactive",
                        "value": "Inactive"
                    }
                ],
                "showOnCreation": true,
                "showOnUpdate": true,
                "showOnDetails": true,
                "showOnIndex": true,
                "type": "select",
                "creationRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    }
                ],
                "updateRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    }
                ],
                "panelId": 9,
                "id": 46,
                "createdAt": "2025-01-24 16:51:11",
                "updatedAt": "2025-01-24 16:51:11"
            },
            "item_74": {
                "crudId": 15,
                "columnId": 162,
                "name": "name",
                "label": "crud.influencers.inputs.name.label",
                "placeholder": "crud.influencers.inputs.name.placeholder",
                "readOnly": false,
                "required": false,
                "hidden": false,
                "defaultValue": "",
                "checked": false,
                "max": 0,
                "min": 0,
                "step": 0,
                "items": [],
                "showOnCreation": true,
                "showOnUpdate": true,
                "showOnDetails": true,
                "showOnIndex": true,
                "type": "text",
                "creationRules": [
                    {
                        "type": "textual",
                        "value": "nullable"
                    },
                    {
                        "type": "textual",
                        "value": "string"
                    }
                ],
                "updateRules": [
                    {
                        "type": "textual",
                        "value": "nullable"
                    },
                    {
                        "type": "textual",
                        "value": "string"
                    }
                ],
                "panelId": 15,
                "id": 74,
                "createdAt": "2025-01-27 14:49:15",
                "updatedAt": "2025-01-27 14:49:15"
            },
            "item_75": {
                "crudId": 15,
                "columnId": 163,
                "name": "bio",
                "label": "crud.influencers.inputs.bio.label",
                "placeholder": "crud.influencers.inputs.bio.placeholder",
                "readOnly": false,
                "required": false,
                "hidden": false,
                "defaultValue": "",
                "checked": false,
                "max": 0,
                "min": 0,
                "step": 0,
                "items": [],
                "showOnCreation": true,
                "showOnUpdate": true,
                "showOnDetails": true,
                "showOnIndex": true,
                "type": "textarea",
                "creationRules": [
                    {
                        "type": "textual",
                        "value": "nullable"
                    },
                    {
                        "type": "textual",
                        "value": "string"
                    }
                ],
                "updateRules": [
                    {
                        "type": "textual",
                        "value": "nullable"
                    },
                    {
                        "type": "textual",
                        "value": "string"
                    }
                ],
                "panelId": 15,
                "id": 75,
                "createdAt": "2025-01-27 14:49:15",
                "updatedAt": "2025-01-27 14:49:15"
            },
            "item_76": {
                "crudId": 15,
                "columnId": 164,
                "name": "lat",
                "label": "crud.influencers.inputs.lat.label",
                "placeholder": "crud.influencers.inputs.lat.placeholder",
                "readOnly": false,
                "required": false,
                "hidden": false,
                "defaultValue": "",
                "checked": false,
                "max": 0,
                "min": 0,
                "step": 0,
                "items": [],
                "showOnCreation": true,
                "showOnUpdate": true,
                "showOnDetails": true,
                "showOnIndex": true,
                "type": "text",
                "creationRules": [
                    {
                        "type": "textual",
                        "value": "nullable"
                    },
                    {
                        "type": "textual",
                        "value": "string"
                    }
                ],
                "updateRules": [
                    {
                        "type": "textual",
                        "value": "nullable"
                    },
                    {
                        "type": "textual",
                        "value": "string"
                    }
                ],
                "panelId": 15,
                "id": 76,
                "createdAt": "2025-01-27 14:49:15",
                "updatedAt": "2025-01-27 14:49:15"
            },
            "item_77": {
                "crudId": 15,
                "columnId": 165,
                "name": "long",
                "label": "crud.influencers.inputs.long.label",
                "placeholder": "crud.influencers.inputs.long.placeholder",
                "readOnly": false,
                "required": false,
                "hidden": false,
                "defaultValue": "",
                "checked": false,
                "max": 0,
                "min": 0,
                "step": 0,
                "items": [],
                "showOnCreation": true,
                "showOnUpdate": true,
                "showOnDetails": true,
                "showOnIndex": true,
                "type": "text",
                "creationRules": [
                    {
                        "type": "textual",
                        "value": "nullable"
                    },
                    {
                        "type": "textual",
                        "value": "string"
                    }
                ],
                "updateRules": [
                    {
                        "type": "textual",
                        "value": "nullable"
                    },
                    {
                        "type": "textual",
                        "value": "string"
                    }
                ],
                "panelId": 15,
                "id": 77,
                "createdAt": "2025-01-27 14:49:15",
                "updatedAt": "2025-01-27 14:49:15"
            },
            "item_78": {
                "crudId": 15,
                "columnId": 166,
                "name": "address",
                "label": "crud.influencers.inputs.address.label",
                "placeholder": "crud.influencers.inputs.address.placeholder",
                "readOnly": false,
                "required": false,
                "hidden": false,
                "defaultValue": "",
                "checked": false,
                "max": 0,
                "min": 0,
                "step": 0,
                "items": [],
                "showOnCreation": true,
                "showOnUpdate": true,
                "showOnDetails": true,
                "showOnIndex": true,
                "type": "text",
                "creationRules": [
                    {
                        "type": "textual",
                        "value": "nullable"
                    },
                    {
                        "type": "textual",
                        "value": "string"
                    }
                ],
                "updateRules": [
                    {
                        "type": "textual",
                        "value": "nullable"
                    },
                    {
                        "type": "textual",
                        "value": "string"
                    }
                ],
                "panelId": 15,
                "id": 78,
                "createdAt": "2025-01-27 14:49:15",
                "updatedAt": "2025-01-27 14:49:15"
            },
            "item_79": {
                "crudId": 15,
                "columnId": 167,
                "name": "image",
                "label": "crud.influencers.inputs.image.label",
                "placeholder": "crud.influencers.inputs.image.placeholder",
                "readOnly": false,
                "required": false,
                "hidden": false,
                "defaultValue": "",
                "checked": false,
                "max": 0,
                "min": 0,
                "step": 0,
                "items": [],
                "showOnCreation": true,
                "showOnUpdate": true,
                "showOnDetails": true,
                "showOnIndex": true,
                "type": "image",
                "creationRules": [
                    {
                        "type": "textual",
                        "value": "nullable"
                    },
                    {
                        "type": "textual",
                        "value": "image"
                    },
                    {
                        "type": "textual",
                        "value": "max:1024"
                    }
                ],
                "updateRules": [
                    {
                        "type": "textual",
                        "value": "nullable"
                    },
                    {
                        "type": "textual",
                        "value": "image"
                    },
                    {
                        "type": "textual",
                        "value": "max:1024"
                    }
                ],
                "panelId": 15,
                "id": 79,
                "createdAt": "2025-01-27 14:49:15",
                "updatedAt": "2025-01-27 14:49:15"
            }
        },
        "routes": {
            "item_1": {
                "name": "services.index",
                "tag": "index",
                "method": "get",
                "type": "route",
                "path": "/services",
                "routableId": 1,
                "routableType": "Crud",
                "projectId": 1,
                "id": 1,
                "createdAt": "2025-01-24 12:25:21",
                "updatedAt": "2025-01-24 12:25:21"
            },
            "__tableData": {
                "count": 18,
                "lastPrimaryKey": 45,
                "index": {
                    "1": {
                        "hasMany": {}
                    },
                    "2": {
                        "hasMany": {}
                    },
                    "3": {
                        "hasMany": {}
                    },
                    "4": {
                        "hasMany": {}
                    },
                    "5": {
                        "hasMany": {}
                    },
                    "6": {
                        "hasMany": {}
                    },
                    "19": {
                        "hasMany": {}
                    },
                    "20": {
                        "hasMany": {}
                    },
                    "21": {
                        "hasMany": {}
                    },
                    "22": {
                        "hasMany": {}
                    },
                    "23": {
                        "hasMany": {}
                    },
                    "24": {
                        "hasMany": {}
                    },
                    "25": {
                        "hasMany": {}
                    },
                    "26": {
                        "hasMany": {}
                    },
                    "27": {
                        "hasMany": {}
                    },
                    "43": {
                        "hasMany": {}
                    },
                    "44": {
                        "hasMany": {}
                    },
                    "45": {
                        "hasMany": {}
                    }
                },
                "additionalIndexes": {},
                "items": [],
                "relations": []
            },
            "item_2": {
                "name": "services.create",
                "tag": "create",
                "method": "get",
                "type": "route",
                "path": "/services/create",
                "routableId": 1,
                "routableType": "Crud",
                "projectId": 1,
                "id": 2,
                "createdAt": "2025-01-24 12:25:21",
                "updatedAt": "2025-01-24 12:25:21"
            },
            "item_3": {
                "name": "services.edit",
                "tag": "edit",
                "method": "get",
                "type": "route",
                "path": "/services/{service}",
                "routableId": 1,
                "routableType": "Crud",
                "projectId": 1,
                "id": 3,
                "createdAt": "2025-01-24 12:25:21",
                "updatedAt": "2025-01-24 12:25:21"
            },
            "item_4": {
                "name": "sub-services.index",
                "tag": "index",
                "method": "get",
                "type": "route",
                "path": "/sub-services",
                "routableId": 2,
                "routableType": "Crud",
                "projectId": 1,
                "id": 4,
                "createdAt": "2025-01-24 13:00:08",
                "updatedAt": "2025-01-24 13:00:08"
            },
            "item_5": {
                "name": "sub-services.create",
                "tag": "create",
                "method": "get",
                "type": "route",
                "path": "/sub-services/create",
                "routableId": 2,
                "routableType": "Crud",
                "projectId": 1,
                "id": 5,
                "createdAt": "2025-01-24 13:00:08",
                "updatedAt": "2025-01-24 13:00:08"
            },
            "item_6": {
                "name": "sub-services.edit",
                "tag": "edit",
                "method": "get",
                "type": "route",
                "path": "/sub-services/{subService}",
                "routableId": 2,
                "routableType": "Crud",
                "projectId": 1,
                "id": 6,
                "createdAt": "2025-01-24 13:00:08",
                "updatedAt": "2025-01-24 13:00:08"
            },
            "item_19": {
                "name": "sub-service-templates.index",
                "tag": "index",
                "method": "get",
                "type": "route",
                "path": "/sub-service-templates",
                "routableId": 7,
                "routableType": "Crud",
                "projectId": 1,
                "id": 19,
                "createdAt": "2025-01-24 15:54:43",
                "updatedAt": "2025-01-24 15:54:43"
            },
            "item_20": {
                "name": "sub-service-templates.create",
                "tag": "create",
                "method": "get",
                "type": "route",
                "path": "/sub-service-templates/create",
                "routableId": 7,
                "routableType": "Crud",
                "projectId": 1,
                "id": 20,
                "createdAt": "2025-01-24 15:54:43",
                "updatedAt": "2025-01-24 15:54:43"
            },
            "item_21": {
                "name": "sub-service-templates.edit",
                "tag": "edit",
                "method": "get",
                "type": "route",
                "path": "/sub-service-templates/{subServiceTemplate}",
                "routableId": 7,
                "routableType": "Crud",
                "projectId": 1,
                "id": 21,
                "createdAt": "2025-01-24 15:54:43",
                "updatedAt": "2025-01-24 15:54:43"
            },
            "item_22": {
                "name": "all-delivery-days.index",
                "tag": "index",
                "method": "get",
                "type": "route",
                "path": "/all-delivery-days",
                "routableId": 8,
                "routableType": "Crud",
                "projectId": 1,
                "id": 22,
                "createdAt": "2025-01-24 15:55:19",
                "updatedAt": "2025-01-24 15:55:19"
            },
            "item_23": {
                "name": "all-delivery-days.create",
                "tag": "create",
                "method": "get",
                "type": "route",
                "path": "/all-delivery-days/create",
                "routableId": 8,
                "routableType": "Crud",
                "projectId": 1,
                "id": 23,
                "createdAt": "2025-01-24 15:55:19",
                "updatedAt": "2025-01-24 15:55:19"
            },
            "item_24": {
                "name": "all-delivery-days.edit",
                "tag": "edit",
                "method": "get",
                "type": "route",
                "path": "/all-delivery-days/{deliveryDays}",
                "routableId": 8,
                "routableType": "Crud",
                "projectId": 1,
                "id": 24,
                "createdAt": "2025-01-24 15:55:19",
                "updatedAt": "2025-01-24 15:55:19"
            },
            "item_25": {
                "name": "content-categories.index",
                "tag": "index",
                "method": "get",
                "type": "route",
                "path": "/content-categories",
                "routableId": 9,
                "routableType": "Crud",
                "projectId": 1,
                "id": 25,
                "createdAt": "2025-01-24 16:51:11",
                "updatedAt": "2025-01-24 16:51:11"
            },
            "item_26": {
                "name": "content-categories.create",
                "tag": "create",
                "method": "get",
                "type": "route",
                "path": "/content-categories/create",
                "routableId": 9,
                "routableType": "Crud",
                "projectId": 1,
                "id": 26,
                "createdAt": "2025-01-24 16:51:11",
                "updatedAt": "2025-01-24 16:51:11"
            },
            "item_27": {
                "name": "content-categories.edit",
                "tag": "edit",
                "method": "get",
                "type": "route",
                "path": "/content-categories/{contentCategory}",
                "routableId": 9,
                "routableType": "Crud",
                "projectId": 1,
                "id": 27,
                "createdAt": "2025-01-24 16:51:11",
                "updatedAt": "2025-01-24 16:51:11"
            },
            "item_43": {
                "name": "influencers.index",
                "tag": "index",
                "method": "get",
                "type": "route",
                "path": "/influencers",
                "routableId": 15,
                "routableType": "Crud",
                "projectId": 1,
                "id": 43,
                "createdAt": "2025-01-27 14:49:15",
                "updatedAt": "2025-01-27 14:49:15"
            },
            "item_44": {
                "name": "influencers.create",
                "tag": "create",
                "method": "get",
                "type": "route",
                "path": "/influencers/create",
                "routableId": 15,
                "routableType": "Crud",
                "projectId": 1,
                "id": 44,
                "createdAt": "2025-01-27 14:49:15",
                "updatedAt": "2025-01-27 14:49:15"
            },
            "item_45": {
                "name": "influencers.edit",
                "tag": "edit",
                "method": "get",
                "type": "route",
                "path": "/influencers/{influencer}",
                "routableId": 15,
                "routableType": "Crud",
                "projectId": 1,
                "id": 45,
                "createdAt": "2025-01-27 14:49:15",
                "updatedAt": "2025-01-27 14:49:15"
            }
        },
        "indices": {
            "item_1": {
                "tableId": 10,
                "name": "sub_services_service_id_foreign",
                "columns": [
                    "service_id"
                ],
                "type": "foreign",
                "on": "services",
                "onTableId": 9,
                "references": "id",
                "referencesColumnId": 52,
                "onUpdate": "cascade",
                "onDelete": "cascade",
                "id": 1,
                "createdAt": "2025-01-24 12:58:32",
                "updatedAt": "2025-01-27 14:50:30",
                "removed": false,
                "algorithm": null,
                "schemaState": {
                    "name": "sub_services_service_id_foreign",
                    "columns": [
                        "service_id"
                    ],
                    "algorithm": null,
                    "type": "foreign",
                    "on": "services",
                    "references": "id",
                    "onUpdate": "cascade",
                    "onDelete": "cascade"
                }
            },
            "__tableData": {
                "count": 4,
                "lastPrimaryKey": 12,
                "index": {
                    "1": {
                        "hasMany": {
                            "index_column.indexId": [
                                1
                            ]
                        }
                    },
                    "3": {
                        "hasMany": {
                            "index_column.indexId": [
                                3
                            ]
                        }
                    },
                    "11": {
                        "hasMany": {
                            "index_column.indexId": [
                                11
                            ]
                        }
                    },
                    "12": {
                        "hasMany": {
                            "index_column.indexId": [
                                12
                            ]
                        }
                    }
                },
                "additionalIndexes": {},
                "items": [],
                "relations": []
            },
            "item_3": {
                "tableId": 12,
                "name": "user_cards_user_id_foreign",
                "columns": [
                    "user_id"
                ],
                "type": "foreign",
                "on": "users",
                "onTableId": 1,
                "references": "id",
                "referencesColumnId": 1,
                "onUpdate": "cascade",
                "onDelete": "cascade",
                "id": 3,
                "createdAt": "2025-01-24 14:54:50",
                "updatedAt": "2025-01-27 14:50:30",
                "removed": false,
                "algorithm": null,
                "schemaState": {
                    "name": "user_cards_user_id_foreign",
                    "columns": [
                        "user_id"
                    ],
                    "algorithm": null,
                    "type": "foreign",
                    "on": "users",
                    "references": "id",
                    "onUpdate": "cascade",
                    "onDelete": "cascade"
                }
            },
            "item_11": {
                "tableId": 15,
                "name": "sub_service_templates_sub_service_id_foreign",
                "columns": [
                    "sub_service_id"
                ],
                "type": "foreign",
                "on": "sub_services",
                "onTableId": 10,
                "references": "id",
                "referencesColumnId": 58,
                "onUpdate": "cascade",
                "onDelete": "cascade",
                "id": 11,
                "createdAt": "2025-01-24 15:29:06",
                "updatedAt": "2025-01-27 14:50:30",
                "removed": false,
                "algorithm": null,
                "schemaState": {
                    "name": "sub_service_templates_sub_service_id_foreign",
                    "columns": [
                        "sub_service_id"
                    ],
                    "algorithm": null,
                    "type": "foreign",
                    "on": "sub_services",
                    "references": "id",
                    "onUpdate": "cascade",
                    "onDelete": "cascade"
                }
            },
            "item_12": {
                "tableId": 16,
                "name": "delivery_days_sub_service_id_foreign",
                "columns": [
                    "sub_service_id"
                ],
                "algorithm": null,
                "type": "foreign",
                "on": "sub_services",
                "references": "id",
                "onUpdate": "cascade",
                "onDelete": "cascade",
                "schemaState": {
                    "name": "delivery_days_sub_service_id_foreign",
                    "columns": [
                        "sub_service_id"
                    ],
                    "algorithm": null,
                    "type": "foreign",
                    "on": "sub_services",
                    "references": "id",
                    "onUpdate": "cascade",
                    "onDelete": "cascade"
                },
                "id": 12,
                "createdAt": "2025-01-24 15:32:11",
                "updatedAt": "2025-01-27 14:50:30",
                "onTableId": 10,
                "referencesColumnId": 58,
                "removed": false
            }
        },
        "index_column": {
            "item_1": {
                "indexId": 1,
                "columnId": 61,
                "id": 1,
                "createdAt": "2025-01-24 12:58:32",
                "updatedAt": "2025-01-24 12:58:32"
            },
            "__tableData": {
                "count": 4,
                "lastPrimaryKey": 12,
                "index": {
                    "1": {
                        "hasMany": {}
                    },
                    "3": {
                        "hasMany": {}
                    },
                    "11": {
                        "hasMany": {}
                    },
                    "12": {
                        "hasMany": {}
                    }
                },
                "additionalIndexes": {},
                "items": [],
                "relations": []
            },
            "item_3": {
                "indexId": 3,
                "columnId": 83,
                "id": 3,
                "createdAt": "2025-01-24 14:54:50",
                "updatedAt": "2025-01-24 14:54:50"
            },
            "item_11": {
                "indexId": 11,
                "columnId": 110,
                "id": 11,
                "createdAt": "2025-01-24 15:29:06",
                "updatedAt": "2025-01-24 15:29:06"
            },
            "item_12": {
                "indexId": 12,
                "columnId": 117,
                "id": 12,
                "createdAt": "2025-01-24 15:32:11",
                "updatedAt": "2025-01-24 15:32:11"
            }
        },
        "relationships": {
            "item_1": {
                "name": "subServices",
                "modelId": 2,
                "projectId": 1,
                "relatedModelId": 3,
                "type": "HasMany",
                "foreignKeyName": "service_id",
                "parentKeyId": 52,
                "foreignKeyId": 61,
                "defaultName": "subServices",
                "usingFirstDefaultName": true,
                "id": 1,
                "createdAt": "2025-01-24 12:58:32",
                "updatedAt": "2025-01-27 14:50:51",
                "inverseId": 2,
                "removed": false,
                "relatedTableName": "sub_services",
                "relatedModelName": "App\\Models\\SubService",
                "parentTableName": "services",
                "parentModelName": "App\\Models\\Service",
                "localKeyName": "id",
                "ownerKeyName": null,
                "relatedKeyName": null,
                "morphType": null,
                "createdFromInterface": false,
                "foreignPivotKeyName": null,
                "relatedPivotKeyName": null,
                "pivotTableName": null,
                "firstKeyName": null,
                "secondKeyName": null,
                "withPivotColumns": false,
                "includedPivotColumns": [],
                "schemaState": {
                    "name": "subServices",
                    "type": "HasMany",
                    "relatedTableName": "sub_services",
                    "relatedModelName": "App\\Models\\SubService",
                    "parentTableName": "services",
                    "parentModelName": "App\\Models\\Service",
                    "foreignKeyName": "service_id",
                    "localKeyName": "id",
                    "ownerKeyName": null,
                    "relatedKeyName": null,
                    "morphType": null,
                    "foreignPivotKeyName": null,
                    "relatedPivotKeyName": null,
                    "pivotTableName": null,
                    "firstKeyName": null,
                    "secondKeyName": null,
                    "withPivotColumns": false,
                    "includedPivotColumns": []
                }
            },
            "__tableData": {
                "count": 8,
                "lastPrimaryKey": 15,
                "index": {
                    "1": {
                        "hasMany": {
                            "relationships.inverseId": [
                                2
                            ]
                        }
                    },
                    "2": {
                        "hasMany": {
                            "relationships.inverseId": [
                                1
                            ],
                            "inputs.relationshipId": [
                                4
                            ]
                        }
                    },
                    "5": {
                        "hasMany": {
                            "relationships.inverseId": [
                                6
                            ]
                        }
                    },
                    "6": {
                        "hasMany": {
                            "relationships.inverseId": [
                                5
                            ],
                            "inputs.relationshipId": []
                        }
                    },
                    "12": {
                        "hasMany": {
                            "relationships.inverseId": [
                                13
                            ]
                        }
                    },
                    "13": {
                        "hasMany": {
                            "relationships.inverseId": [
                                12
                            ],
                            "inputs.relationshipId": [
                                33
                            ]
                        }
                    },
                    "14": {
                        "hasMany": {
                            "relationships.inverseId": [
                                15
                            ],
                            "inputs.relationshipId": [
                                39
                            ]
                        }
                    },
                    "15": {
                        "hasMany": {
                            "relationships.inverseId": [
                                14
                            ]
                        }
                    }
                },
                "additionalIndexes": {},
                "items": [],
                "relations": []
            },
            "item_2": {
                "modelId": 3,
                "projectId": 1,
                "type": "BelongsTo",
                "relatedModelId": 2,
                "defaultName": "service2",
                "usingFirstDefaultName": false,
                "name": "service",
                "parentKeyId": 52,
                "foreignKeyName": "service_id",
                "inverseId": 1,
                "foreignKeyId": 61,
                "id": 2,
                "createdAt": "2025-01-24 12:58:32",
                "updatedAt": "2025-01-27 14:50:51",
                "removed": false,
                "relatedTableName": "services",
                "relatedModelName": "App\\Models\\Service",
                "parentTableName": "sub_services",
                "parentModelName": "App\\Models\\SubService",
                "localKeyName": null,
                "ownerKeyName": "id",
                "relatedKeyName": null,
                "morphType": null,
                "createdFromInterface": false,
                "foreignPivotKeyName": null,
                "relatedPivotKeyName": null,
                "pivotTableName": null,
                "firstKeyName": null,
                "secondKeyName": null,
                "withPivotColumns": false,
                "includedPivotColumns": [],
                "schemaState": {
                    "name": "service",
                    "type": "BelongsTo",
                    "relatedTableName": "services",
                    "relatedModelName": "App\\Models\\Service",
                    "parentTableName": "sub_services",
                    "parentModelName": "App\\Models\\SubService",
                    "foreignKeyName": "service_id",
                    "localKeyName": null,
                    "ownerKeyName": "id",
                    "relatedKeyName": null,
                    "morphType": null,
                    "foreignPivotKeyName": null,
                    "relatedPivotKeyName": null,
                    "pivotTableName": null,
                    "firstKeyName": null,
                    "secondKeyName": null,
                    "withPivotColumns": false,
                    "includedPivotColumns": []
                }
            },
            "item_5": {
                "name": "userCards",
                "modelId": 1,
                "projectId": 1,
                "relatedModelId": 5,
                "type": "HasMany",
                "foreignKeyName": "user_id",
                "parentKeyId": 1,
                "foreignKeyId": 83,
                "defaultName": "userCards",
                "usingFirstDefaultName": true,
                "id": 5,
                "createdAt": "2025-01-24 14:54:50",
                "updatedAt": "2025-01-27 14:50:51",
                "inverseId": 6,
                "removed": false,
                "relatedTableName": "user_cards",
                "relatedModelName": "App\\Models\\UserCard",
                "parentTableName": "users",
                "parentModelName": "App\\Models\\User",
                "localKeyName": "id",
                "ownerKeyName": null,
                "relatedKeyName": null,
                "morphType": null,
                "createdFromInterface": false,
                "foreignPivotKeyName": null,
                "relatedPivotKeyName": null,
                "pivotTableName": null,
                "firstKeyName": null,
                "secondKeyName": null,
                "withPivotColumns": false,
                "includedPivotColumns": [],
                "schemaState": {
                    "name": "userCards",
                    "type": "HasMany",
                    "relatedTableName": "user_cards",
                    "relatedModelName": "App\\Models\\UserCard",
                    "parentTableName": "users",
                    "parentModelName": "App\\Models\\User",
                    "foreignKeyName": "user_id",
                    "localKeyName": "id",
                    "ownerKeyName": null,
                    "relatedKeyName": null,
                    "morphType": null,
                    "foreignPivotKeyName": null,
                    "relatedPivotKeyName": null,
                    "pivotTableName": null,
                    "firstKeyName": null,
                    "secondKeyName": null,
                    "withPivotColumns": false,
                    "includedPivotColumns": []
                }
            },
            "item_6": {
                "modelId": 5,
                "projectId": 1,
                "type": "BelongsTo",
                "relatedModelId": 1,
                "defaultName": "user",
                "usingFirstDefaultName": true,
                "name": "user",
                "parentKeyId": 1,
                "foreignKeyName": "user_id",
                "inverseId": 5,
                "foreignKeyId": 83,
                "id": 6,
                "createdAt": "2025-01-24 14:54:50",
                "updatedAt": "2025-01-27 14:50:51",
                "removed": false,
                "relatedTableName": "users",
                "relatedModelName": "App\\Models\\User",
                "parentTableName": "user_cards",
                "parentModelName": "App\\Models\\UserCard",
                "localKeyName": null,
                "ownerKeyName": "id",
                "relatedKeyName": null,
                "morphType": null,
                "createdFromInterface": false,
                "foreignPivotKeyName": null,
                "relatedPivotKeyName": null,
                "pivotTableName": null,
                "firstKeyName": null,
                "secondKeyName": null,
                "withPivotColumns": false,
                "includedPivotColumns": [],
                "schemaState": {
                    "name": "user",
                    "type": "BelongsTo",
                    "relatedTableName": "users",
                    "relatedModelName": "App\\Models\\User",
                    "parentTableName": "user_cards",
                    "parentModelName": "App\\Models\\UserCard",
                    "foreignKeyName": "user_id",
                    "localKeyName": null,
                    "ownerKeyName": "id",
                    "relatedKeyName": null,
                    "morphType": null,
                    "foreignPivotKeyName": null,
                    "relatedPivotKeyName": null,
                    "pivotTableName": null,
                    "firstKeyName": null,
                    "secondKeyName": null,
                    "withPivotColumns": false,
                    "includedPivotColumns": []
                }
            },
            "item_12": {
                "name": "subServiceTemplates",
                "modelId": 3,
                "projectId": 1,
                "relatedModelId": 11,
                "type": "HasMany",
                "foreignKeyName": "sub_service_id",
                "parentKeyId": 58,
                "foreignKeyId": 110,
                "defaultName": "subServiceTemplates",
                "usingFirstDefaultName": true,
                "id": 12,
                "createdAt": "2025-01-24 15:29:06",
                "updatedAt": "2025-01-27 14:50:51",
                "inverseId": 13,
                "removed": false,
                "relatedTableName": "sub_service_templates",
                "relatedModelName": "App\\Models\\SubServiceTemplate",
                "parentTableName": "sub_services",
                "parentModelName": "App\\Models\\SubService",
                "localKeyName": "id",
                "ownerKeyName": null,
                "relatedKeyName": null,
                "morphType": null,
                "createdFromInterface": false,
                "foreignPivotKeyName": null,
                "relatedPivotKeyName": null,
                "pivotTableName": null,
                "firstKeyName": null,
                "secondKeyName": null,
                "withPivotColumns": false,
                "includedPivotColumns": [],
                "schemaState": {
                    "name": "subServiceTemplates",
                    "type": "HasMany",
                    "relatedTableName": "sub_service_templates",
                    "relatedModelName": "App\\Models\\SubServiceTemplate",
                    "parentTableName": "sub_services",
                    "parentModelName": "App\\Models\\SubService",
                    "foreignKeyName": "sub_service_id",
                    "localKeyName": "id",
                    "ownerKeyName": null,
                    "relatedKeyName": null,
                    "morphType": null,
                    "foreignPivotKeyName": null,
                    "relatedPivotKeyName": null,
                    "pivotTableName": null,
                    "firstKeyName": null,
                    "secondKeyName": null,
                    "withPivotColumns": false,
                    "includedPivotColumns": []
                }
            },
            "item_13": {
                "modelId": 11,
                "projectId": 1,
                "type": "BelongsTo",
                "relatedModelId": 3,
                "defaultName": "subService",
                "usingFirstDefaultName": true,
                "name": "subService",
                "parentKeyId": 58,
                "foreignKeyName": "sub_service_id",
                "inverseId": 12,
                "foreignKeyId": 110,
                "id": 13,
                "createdAt": "2025-01-24 15:29:06",
                "updatedAt": "2025-01-27 14:50:51",
                "removed": false,
                "relatedTableName": "sub_services",
                "relatedModelName": "App\\Models\\SubService",
                "parentTableName": "sub_service_templates",
                "parentModelName": "App\\Models\\SubServiceTemplate",
                "localKeyName": null,
                "ownerKeyName": "id",
                "relatedKeyName": null,
                "morphType": null,
                "createdFromInterface": false,
                "foreignPivotKeyName": null,
                "relatedPivotKeyName": null,
                "pivotTableName": null,
                "firstKeyName": null,
                "secondKeyName": null,
                "withPivotColumns": false,
                "includedPivotColumns": [],
                "schemaState": {
                    "name": "subService",
                    "type": "BelongsTo",
                    "relatedTableName": "sub_services",
                    "relatedModelName": "App\\Models\\SubService",
                    "parentTableName": "sub_service_templates",
                    "parentModelName": "App\\Models\\SubServiceTemplate",
                    "foreignKeyName": "sub_service_id",
                    "localKeyName": null,
                    "ownerKeyName": "id",
                    "relatedKeyName": null,
                    "morphType": null,
                    "foreignPivotKeyName": null,
                    "relatedPivotKeyName": null,
                    "pivotTableName": null,
                    "firstKeyName": null,
                    "secondKeyName": null,
                    "withPivotColumns": false,
                    "includedPivotColumns": []
                }
            },
            "item_14": {
                "modelId": 12,
                "projectId": 1,
                "name": "subService",
                "type": "BelongsTo",
                "relatedTableName": "sub_services",
                "relatedModelName": "App\\Models\\SubService",
                "parentTableName": "delivery_days",
                "parentModelName": "App\\Models\\DeliveryDays",
                "foreignKeyName": "sub_service_id",
                "localKeyName": null,
                "ownerKeyName": "id",
                "relatedKeyName": null,
                "morphType": null,
                "createdFromInterface": false,
                "foreignPivotKeyName": null,
                "relatedPivotKeyName": null,
                "pivotTableName": null,
                "firstKeyName": null,
                "secondKeyName": null,
                "withPivotColumns": false,
                "includedPivotColumns": [],
                "schemaState": {
                    "name": "subService",
                    "type": "BelongsTo",
                    "relatedTableName": "sub_services",
                    "relatedModelName": "App\\Models\\SubService",
                    "parentTableName": "delivery_days",
                    "parentModelName": "App\\Models\\DeliveryDays",
                    "foreignKeyName": "sub_service_id",
                    "localKeyName": null,
                    "ownerKeyName": "id",
                    "relatedKeyName": null,
                    "morphType": null,
                    "foreignPivotKeyName": null,
                    "relatedPivotKeyName": null,
                    "pivotTableName": null,
                    "firstKeyName": null,
                    "secondKeyName": null,
                    "withPivotColumns": false,
                    "includedPivotColumns": []
                },
                "id": 14,
                "createdAt": "2025-01-24 15:32:11",
                "updatedAt": "2025-01-27 14:50:51",
                "relatedModelId": 3,
                "parentKeyId": 58,
                "foreignKeyId": 117,
                "inverseId": 15,
                "removed": false
            },
            "item_15": {
                "modelId": 3,
                "projectId": 1,
                "name": "deliveryDates",
                "type": "HasMany",
                "relatedTableName": "delivery_days",
                "relatedModelName": "App\\Models\\DeliveryDays",
                "parentTableName": "sub_services",
                "parentModelName": "App\\Models\\SubService",
                "foreignKeyName": "sub_service_id",
                "localKeyName": "id",
                "ownerKeyName": null,
                "relatedKeyName": null,
                "morphType": null,
                "createdFromInterface": false,
                "foreignPivotKeyName": null,
                "relatedPivotKeyName": null,
                "pivotTableName": null,
                "firstKeyName": null,
                "secondKeyName": null,
                "withPivotColumns": false,
                "includedPivotColumns": [],
                "schemaState": {
                    "name": "deliveryDates",
                    "type": "HasMany",
                    "relatedTableName": "delivery_days",
                    "relatedModelName": "App\\Models\\DeliveryDays",
                    "parentTableName": "sub_services",
                    "parentModelName": "App\\Models\\SubService",
                    "foreignKeyName": "sub_service_id",
                    "localKeyName": "id",
                    "ownerKeyName": null,
                    "relatedKeyName": null,
                    "morphType": null,
                    "foreignPivotKeyName": null,
                    "relatedPivotKeyName": null,
                    "pivotTableName": null,
                    "firstKeyName": null,
                    "secondKeyName": null,
                    "withPivotColumns": false,
                    "includedPivotColumns": []
                },
                "id": 15,
                "createdAt": "2025-01-24 15:32:11",
                "updatedAt": "2025-01-27 14:50:51",
                "relatedModelId": 12,
                "parentKeyId": 58,
                "foreignKeyId": 117,
                "inverseId": 14,
                "removed": false
            }
        }
    },
    "tablesNames": [
        "projects",
        "tables",
        "columns",
        "models",
        "fillable_model_column",
        "hidden_model_column",
        "casts_model_column",
        "app_sections",
        "schema_sections",
        "navs",
        "renderable_files",
        "cruds",
        "crud_panels",
        "inputs",
        "routes",
        "indices",
        "index_column",
        "relationships"
    ]
}